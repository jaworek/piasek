%!PS-Adobe-2.0 EPSF-1.2
%%Title: tmpPSFile
%%Creator: dvips(k) 5.996 Copyright 2016 Radical Eye Software
%%CreationDate: Sat Apr 22 17:52:35 2017
%%For:michaszko michaszko
%%Pages: 1
%%DocumentFonts:
%%BoundingBox: 1 2 108 95
%%HiResBoundingBox: 1.572047 2.840836 107.020684 94.683161
%%EndComments

%%BeginProlog
%%BeginPreview: 106 93 8 279
% 224444444444445d767676767676919a9a9a9a9a9ab5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5
% b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5
% b5b5b5b5b5a79a9a9a9a9a9a7f76767676767650444444444444
% 44000000000000440000000000004400000000000044000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000440000000000004400000000000044000000000044
% 44000000000000440000000000004400000000000044000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000440000000000004400000000000044000000000044
% 44000000000000440000000000004400000000000044000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000440000000000004400000000000044000000000044
% 44000000000000440000000000004400000000000044000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000440000000000004400000000000044000000000044
% 44000000000000440000000000004400000000000044000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000440000000000004400000000000044000000000044
% 44000000000000440000000000004400000000000044000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000440000000000004400000000000044000000000044
% 44000000000000440000000000004400000000000044000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000440000000000004400000000000044000000000044
% 44000000000000440000000000004400000000000044000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000440000000000004400000000000044000000000044
% 44000000000000440000000000004400000000000044000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000440000000000004400000000000044000000000044
% 44000000000000440000000000004400000000000077444444444444444444444444444444444444
% 44444444444444444444444444444444444444444444444444444444444444444444444444444444
% 4444444444550000000000004400000000000044000000000044
% 44000000000000440000000000004400000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000004400000000000044000000000044
% 44000000000000440000000000004400000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000004400000000000044000000000044
% 44000000000000440000000000004400000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000004400000000000044000000000044
% 44000000000000440000000000004400000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000004400000000000044000000000044
% 44000000000000440000000000004400000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000004400000000000044000000000044
% 44000000000000440000000000004400000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000004400000000000044000000000044
% 44000000000000440000000000004400000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000004400000000000044000000000044
% 44000000000000440000000000004400000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000004400000000000044000000000044
% 44000000000000440000000000004400000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000004400000000000044000000000044
% 44000000000000440000000000004400000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000004400000000000044000000000044
% 44000000000000440000000000004400000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000004400000000000044000000000044
% 44000000000000440000000000004400000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000004400000000000044000000000044
% 44000000000000440000000000004400000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000004400000000000044000000000044
% 44000000000000440000000000004444444444444444444444444444444444444444444444444444
% 44444444444444444444444444444444444444444444444444444444444444444444444444444444
% 4444444444444444444444442200000000000044000000000044
% 44000000000000440000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000044000000000044
% 44000000000000440000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000044000000000044
% 44000000000000440000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000044000000000044
% 44000000000000440000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000044000000000044
% 44000000000000440000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000044000000000044
% 44000000000000440000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000044000000000044
% 44000000000000334444444444444444444444444444444444444444444444444444444444444444
% 44444444444444444444444444444444444444444444444444444444444444444444444444444444
% 4444444444444444444444444444444444444422000000000044
% 44000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000044
% 44000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000044
% 44000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000044
% 44000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000044
% 44000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000044
% 44000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000044
% 22444444444444444444444444444444444444444444444444444444444444444444444444444444
% 44444444444444444444444444444444444444444444444444444444444444444444444444444444
% 4444444444444444444444444444444444444444444444444444
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000033556611000000000000225555220000000000001166553300000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00008877113388330000000066882222886600000000338833117788000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00555500000000990000002288000000008822000000990000000055550000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00770000555533444400006622004455002266000044440033550000770000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00880000662211444400006611007733001166000044440033550000880000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00664400000000990000002288000000008822000000990000000044550000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00008866002288550000000066881111886600000000558822006688000000000000000000010000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000044667722000000000000227777220000000000002277664400000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000044444444444444444644484a47
% 6048444444444450474945454e454444444444444444444544444444444444444444444444446600
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000044000000000000041f01021c08
% 099503457d7702010a74030120890000000000000101020300000000000000000000000000004400
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000044000000000000043761015368
% 010369028f9a8c5601287e020a0774040028030b0304046104050000000000000000000000004400
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000887777770000000044000000000001010025670277
% 5f021a6f034cb49a980147702704309e350483324c76091b573a0402650101020100000000034400
% 0000002288778844000000000000000000000000000000000000
% 000000000000000000000000000000000000993300003399000000440000000a2f0802000053760d
% 6b6e01347e1c4aba95ac013780650179b08e13a133578304a1069400690501020500000000004400
% 0000228811000077550000000000000000000000000000000000
% 0000000000000000000000000000000000555500000000663300004400000004015f7000030163a1
% 0a5c9a0b2fa22a5bae1c9a06328d6e1d97a271318057a66570955f6c1a9006048600000000004400
% 0000881100000000880000000000000000000000000000000000
% 0000000000000000000000000000000000660000337711006600004400003a0108024c684205002d
% ab0303aa0e2c9a1845ba0ea80223a3662ea28f6a4e9328973f7f307b4c742c008800000000014400
% 0000660033444400770000000000000000000000000000000000
% 000000000000000000000000000000000066330022220033550000440000016d862400136da00401
% 02ac0703b74316a7293ea709a70431ab185b9eae2c4e8e4c8e1a912a9c2e95019404010000024400
% 0000880066224400880000000000000000000000000000000000
% 000000000000000000000000000000000011990000000099110000440102000120528e16130373b1
% 0203a5360d983e0bb01c9da12d9f1b2bb131a03aa8325d89469355985d7b6985800c050100024400
% 0000556600000033880000000000000000000000000000000000
% 00000000000000000000000000000000000033997777882200000044244e978789b2a885789f897e
% 8b8f7aaf904dad9392b22ca2925eb91898a1329633a93baf3f949a8346a04aaa404b070200004400
% 0000006688558877000000000000000000000000000000000000
% 00000000000000000000000000000000000000001111000000000044000610185597a0b47b4b1c7d
% 76178392a8bd8da1bfbeb8c9adbbaeb2adb691aca6a99f98b098ab73b771b49133a3070509044400
% 0000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000004406709c9882833b351c1f882c
% 7b9f5640aa706ca58966946c73bb77c8c8c5ba6183ba76baa4baafb6aac0bdb7b7b19100050f4400
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000044012021240d08010175043da0
% 0e0c98ab2830ba4747919437d47439a683597c59ad7647969a7c617e61797f82b96f504319444400
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000447777440000000044000203030201284323a9140c
% 01ae61179fad2c1b9b6f24c72e2bc2725dbd4738ad09c248b060a9518754b347a51a0a0107194400
% 0000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000007755000077660000004400000001015727a66a371ca4
% a72c33ab912b20a15e20bd063cb94987bd4704bc1d089e29891a7d15ac2abd0bad09010003064400
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000003377000000007733000044000000048fab8e4e352eaf67
% 463bad532c25ae4d2dbd096ab83f6ed05907ba310ab346ae40776d04a88643178a00000003054400
% 0000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000066113344334411550000440000004482443423ad915223
% 6b8c463001a36d56a41f89b5477eca570cc02611a98928a80cad2f1796b303473a00000003074400
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000007722662233112266000044000000402012019f87350896
% 824d0c04a3787293288cb54c85b45e13af26153fa74bbc0f778c1098928400a20b00000001074400
% 0000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000022880000000099110000440000000001027218010a8392
% 410c058f4075812a9da63f83b5501ea684150d8c636e2704b32c09aab70700a10000000001064400
% 0000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000005599333399440000004400000000000000020205753d
% 0a0187724f9237909d3e2db35627a89f190196992065116f880d0c8f6900010a0000000000044400
% 0000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000001144441100000000440000000000000000006a0402
% 014f730e710e6a7b1b079947129834060a04a42c71280da41503ad8e0500000a0000000000044400
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000044000000000000000101040001
% 0255010d050200030106140001060200003f72822d0a021d01010101000000000000000001044400
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000044000000000000000000000000
% 00000000000000000000000000000000039b03020000000000000000000000000000000000044400
% 0000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000022444444444444444444444444
% 44444444444444444444444444444444444444444444444444444444444444444444444444444400
% 0000000000000000000000000000000000000000000000000000
%%EndImage
%%EndPreview
save countdictstack mark newpath /showpage {} def /setpagedevice /pop load def
%%EndProlog
%%Page 1 1
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -Pdownload35 -T
%+ 3.9200001507997513cm,3.440000131726265cm tmpPSFile -o
%+ /tmp/latexdraw/latexdrawTmp149287635543230123/tmpPSFile.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2017.04.22:1752
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%!
% PostScript prologue for pst-grad.tex.
% Version 1.05, 2006/11/04 
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 /ifCMYK exch def   % do we have rgb or cmyk? hv 1.06
 rotate
 /MidPoint ED
 /NumLines ED
 ifCMYK {
    /LastBlack ED	% 1.06
    /LastYellow ED	% 1.06
    /LastMagenta ED	% 1.06
    /LastCyan ED	% 1.06
    /FirstBlack ED	% 1.06
    /FirstYellow ED	% 1.06
    /FirstMagenta ED	% 1.06
    /FirstCyan ED	% 1.06
 }{ /LastBlue ED
    /LastGreen ED
    /LastRed ED
    /FirstBlue ED
    /FirstGreen ED
    /FirstRed ED
 } ifelse
 /GradientPosY ED
 /GradientPosX ED
 /GradientScale ED
 /ifGradientCircle ED
 % This avoids gaps due to rounding errors:
 clip
 pathbbox           %leave llx,lly,urx,ury on stack
 4 copy /ury ED /urx ED /lly ED /llx ED
 /y ED /x ED
 ifGradientCircle
   { 0 GradientPosX eq { 0 GradientPosX eq {2 copy translate} if } if }
   {2 copy translate} ifelse
 y sub neg /y ED
 x sub neg /x ED  % This avoids gaps due to rounding errors:
 ifCMYK {				% 1.06
    LastCyan FirstCyan add 2 div	% 1.06
    LastMagenta FirstMagenta add 2 div	% 1.06
    LastYellow FirstYellow add 2 div	% 1.06
    LastBlack FirstBlack add 2 div	% 1.06
    setcmykcolor			% 1.06
  }{
    LastRed FirstRed add 2 div
    LastGreen FirstGreen add 2 div
    LastBlue FirstBlue add 2 div
    setrgbcolor
  } ifelse
 ifGradientCircle
   { /YSizePerLine y NumLines div def
     /CurrentY y 2 div def
     /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def
   }{
     fill
     /YSizePerLine y NumLines div def
     /CurrentY 0 def
     /MidLine NumLines 1 MidPoint sub mul abs cvi def
   } ifelse
 MidLine NumLines 2 sub gt 
   { /MidLine NumLines def }
   { MidLine 2 lt { /MidLine 0 def } if } ifelse
 MidLine 0 gt {
  ifCMYK {
    /Cyan FirstCyan def
    /Magenta FirstMagenta def
    /Yellow FirstYellow def
    /Black FirstBlack def
    /CyanIncrement LastCyan FirstCyan sub MidLine 1 sub div def
    /MagentaIncrement LastMagenta FirstMagenta sub MidLine 1 sub div def
    /YellowIncrement LastYellow FirstYellow sub MidLine 1 sub div def
    /BlackIncrement LastBlack FirstBlack sub MidLine 1 sub div def
  }{
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
  } ifelse
  MidLine { GradientLoop } repeat
 } if
 MidLine NumLines lt {
  ifCMYK {
    /Cyan LastCyan def
    /Magenta LastMagenta def
    /Yellow LastYellow def
    /Black LastBlack def
    /CyanIncrement FirstCyan LastCyan sub NumLines MidLine sub 1 sub div def
    /MagentaIncrement FirstMagenta LastMagenta sub NumLines MidLine sub 1 sub div def
    /YellowIncrement FirstYellow LastYellow sub NumLines MidLine sub 1 sub div def
    /BlackIncrement FirstBlack LastBlack sub NumLines MidLine sub 1 sub div def
  }{
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
  } ifelse
  NumLines MidLine sub { GradientLoop } repeat  
 } if
} def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill
      /CurrentY CurrentY YSizePerLine sub def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
  } if }   { 0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill    
      /CurrentY CurrentY YSizePerLine add def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
      } ifelse% D.G. modification end
    }def
%
/GradientFillHSB { %	hv 2006-11-04
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBrightness ED
  /LastSaturation ED
  /LastHue ED
  /FirstBrightness ED
  /FirstSaturation ED
  /FirstHue ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastHue FirstHue add 2 div
  LastSaturation FirstSaturation add 2 div
  LastBrightness FirstBrightness add 2 div
  sethsbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Hue FirstHue def
    /Saturation FirstSaturation def
    /Brightness FirstBrightness def
    /HueIncrement LastHue FirstHue sub MidLine 1 sub div def
    /SaturationIncrement LastSaturation FirstSaturation sub MidLine 1 sub
                         div def
    /BrightnessIncrement LastBrightness FirstBrightness sub MidLine 1 sub
                         div def
    MidLine { GradientLoopHSB } repeat
  } if
  MidLine NumLines lt
  {
    /Hue LastHue def
    /Saturation LastSaturation def
    /Brightness LastBrightness def
    /HueIncrement FirstHue LastHue sub NumLines MidLine sub 1 sub div def
    /SaturationIncrement FirstSaturation LastSaturation sub
                         NumLines MidLine sub 1 sub div def
    /BrightnessIncrement FirstBrightness LastBrightness sub
                         NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoopHSB } repeat
  } if
} def
/GradientLoopHSB {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Hue Saturation Brightness sethsbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Brightness Brightness BrightnessIncrement add def
  /Saturation Saturation SaturationIncrement add def
  /Hue Hue HueIncrement add def
} def
%
end
%
% END pst-grad.pro

% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%Version: 003.002
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E6544A8E490800362539DECEFDA209FBE1774B790CB6222E100903033A4CA73E
F0F4EB1F66741F359B651D485B87864B83A2FCCAFDCC861D7E34DD6D3E6AE7CD
6EA69488607C212ED00D993F9C24F612A61AD8C13C202E9DA91CDD15846EB4F5
FE15650CF4487A938A117EE85ACC8102EB37397718D4F17E60D3CEE08BE4BC5C
C93E8677D3A0A807DA8C72ECC71B26B24CD315BC351E053081BEADE92D2E498E
8A4CDB963B1104272310678F74491DA1572344FA5B2B920DC304A252193F1D93
5ED5268A6AC194D21A19DB87C73771A6CED0715EFF43475A0FD680DDAE896369
D59A6B8297CC9EFE00FCB9EFCA2D26256C58D6809FA22A0DC3112E7888A49945
0162B7373CCF7BB457EA8FCE8009D30DFEB19A02D18CA44689E5D8C34CC8F267
CDDA36431BC83D98704404C2E77DE570C7704166CD3DD128179D772063505904
9FC2FE5183581C921EC9198BC03CE04A0F0B2113C7B19A19D7E1DCF6AD566401
52A5010D25C836FAD8B8569DAEAE65CEF1295FF2EC1D6F82BC0428A071213C63
F9E6981B7A7D02A567FB66A67AB2E9556E6C9AE40D3CE74A353A702BB017E760
AD9AA7BD2198D8808551147686B2ACDAE4BF534FC07180E277C771BBC84A3007
94A6EA81739C1FE770576F4593A1DD7ACF15A1E166892EF94CCC6BFED98F0D54
D93AB3AE38D3F24C63EFD772D35A49E34D4359CD47A000608F799114BE5D3635
9D09FD6D5B025A7B766FFA65AEA58C77DC4ED68C27DD847573EBAD6AFB646F54
CEC76AC98678B54E6E3A103EBC0F25C44B4AE7D581455520DA75F0AA2AD71C12
CA19CC7AE1B8F62F15899242621F17260A5F8DB1B789A7340EC576E93E5592C5
03E4DA37DA7FABD00C06BE3B854DFA815E1F376539ADACED2F63269293495687
A19CF128855B9566EB6AA1B52455A825369304D7A2D66EFCE4E4562017EFC2DD
684583B0D7B2DAEB2429EDE50A4654BC39F1EFF014357292F0EDFB338F67BB46
6F76A8368D8F95C3F24AC4B3FB9BC915F33894C1F16657A6BCA6304A8C64D277
F06A9EDC36BEED7B38C0FE96358F8BF611AEC1BD03438D032A9D664F75DC33F6
16E502FA66079AD2EF2506FAE512122EF0B3FE32326369F32F6303156253A898
84CD31AAEDEBD042CE0BC9604FAF689BA722707A9996DCC3C85EA3D369EC41B3
4AED16D742A5D1B9F6D95229B4B986A164AD3E5074BA33B83BF325C0CEEB8AF6
D8424C4DA1F1621703C8F4ED38E77C078434198A921ADF3ABB209D23A34B92ED
93163969607261EB23FFA438DFE3FA1F856AB5E9A9A50F354AE6A8F5989499D5
07068D1F0E2E23BB88A8D5533B65406BE8846DF64B0A78FF8FE0BCA3F9E72295
10F6C7F701BB0151E1E17E5713B94A842F0F1B0F34B176EBAE603A02F6528ADD
C4C65A05E4E89C54FF54FD2559C2801F6E1637E5119AC7480C1B769BA6D5E2CF
9DD829514393F5AE3DDB752C9EF9923DB80C40E3FE8289B79FDF87ECD6F679DE
D5361CDB76FD9178B187F6FC77D25B45EB9F2AB2595E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%Version: 003.002
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 67 /C put
dup 68 /D put
dup 73 /I put
dup 83 /S put
dup 84 /T put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AA30F4195FDFF64E5149810C51399C995C41F638C0159BA0273665F073BEE169
9F55E98C04ADA341905B2783811534D2F3F03D112DFDDD7FF4E0523EA2DB617E
8937724C46375737CE69B0B6C4BE93F89D546A1894397FD37B7FCC3E1BF13453
33A62DF641E6059FF660C0FD5620CFFA357B9D91CEAD93F03621417706A2D1F3
4D3846267986BA9D571B81CEA7E4530EB65464C7AE7FD4C32CA7AD4535AD4FBA
C1FB1765D3B6B3296B283F07C65949E3804E9DAF6D97ED29C11AB0DC8DF8F8C0
F712F364D602A632B017F59C3E25FE38D8B083CDA8090F9CD437E4F663A9D860
D32F9D1D1461DDB95CB7F83FBCAD193AA3893388A7E3D71D8A8A2CC689AB4AD7
C8B755EFF7389A325E3C49046F73DEC1E93171A78E59644B9DA066C1C57B93B8
8F397E230B5A7B38F024CF8E90C7A142C95886B042CEC3DE4FCC93099028E14E
1369CC82FC574B3252F93383B2271C2EC341E8E78B50E112315D898485CD9206
4F4F088B05E8768E0888CD6F6850FD7AF81E26491A3AFB70CCA5ED0FB14F867E
392B256DFFD2C9FDE477669865430F58776B076BF3B4618033F8CB1215C72A29
422CA06E8A50290A07DEB628E0E8C3B4DB83845D8948A0E70B66E78B0AC6B318
986C1EB99BCD3AA0CC3C2C748C0A113639C3383906B712FE804AE10F88ADAF19
1925C083573128761146095FC91AF3A922B5541D182D39A02FB5A63F8273280E
AEA469E71F4A579A9562377BBFB1A1E21B7D6397C0CA60CE3F96DCB7CCD6A21E
B606A672F5EF9821A2900AD75047F18D4D97C0204BA271CB5B3C992A2813504C
A1EC0B3FD07A9CAE2E11AD20603F616CDEFEA14FE4C282781C3EBC6E2A05F2C4
3706C55094E618C0715CD6B74FFED1880C23BE9F64BFACB885B02FCC303144BA
5D981FC2AA6AC97909667B07322E4DC109EA204658B0F229BD8964045432D7E6
9F0A07C9CA27708C678A8502B6B84B6D4DCBEF47B6C4D7791897D39FC6AADBCF
788F91947984D7E33E8EF45A84F550BFF06E7B9B5D653D8A12E4569A6C02F4DD
769C3FC13FEC8BA03A590DBA4292AA85EF548145305FDFC4FDE5B7B4F0730E9A
DC26E6C2BAC7B7CC1EA3BC164E6CF77E91BEED9A88E3EC694A79FC7C292EC961
43E795F199F42B062EBD387816F8E88FBB410F8583191E9DCCBA658558E24BED
B804759C63391396A03CE98A71E27AEA2D26A7BB3F490F66C2295DBD610375F2
DB536DAFE075235EBDA27D0A443B49CC137845CAD667759B5BB7CC59A26E7469
671FA08F92A58F2E76B7D4EEBABBDE1454A57167CFA1AC6370F29310A5C65913
C068A2FAFA2FB3A87EC7788874084C15955890F565FE2252BF8F27A173F65A36
6B3AF14BAA7582FD2021C7C30AA774AD66C1DB4CB5B79B39A565850CB0707E94
192B62428107DAC0E6D4450278757F6355F5FDF8C3219FDB78
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
TeXDict begin 7309546 6414499 1000 600 600 (tmpPSFile)
@start /Fa 205[42 42 49[{}2 83.022 /CMR10 rf /Fb 171[45
50 9[45 4[64 44 67[{}5 83.022 /CMSY10 rf end
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-720 -576 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -720 -576 a -720 -576 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -720 -576 a -720
-576 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -720 -576 a -720 -576 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -720 -576 a -595 189 a
tx@Dict begin CP CP translate 0.3  0.3  scale NET  end

-595 189 a -568 -1087 a
tx@Dict begin  { 174.13065 -104.42151 } PutCoor PutBegin  end
 -568 -1087 a -1280 -695 a @beginspecial
0 @llx 0 @lly 171 @urx 94 @ury 1710 @rwi @setspecial

gsave
-0.0 94.0 translate
1.0 setlinewidth
10.0 setmiterlimit
0 setlinejoin
2 setlinecap
[ ] 0 setdash
gsave
302 167 8 [1.7638888888888888 0.0 0.0 -1.7638888888888888 0.0 0.0]
1.0 1.0 1.0 setrgbcolor
newpath
0.0 -0.0 moveto
171.2126 -0.0 lineto
171.2126 -94.67716 lineto
0.0 -94.67716 lineto
0.0 -0.0 lineto
closepath
fill
newpath
0.0 0.0 0.0 setrgbcolor
{currentfile 3 302 mul string readhexstring pop} bind
false 3 colorimage
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffdfffffdfffffbfffffdfffffdfffffdfffffdfffffffffffffefefe
fdfdfdfcfcfefbfbfdfafafcf9f9fbffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffdfffffdfffffbfffffdfffffd
fffffdfffffdfffffffffffffefefefdfdfdfcfcfefbfbfdfafafcf9f9fbffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffdfffffdfffffbfffffdfffffdfffffdfffffdfffffffffffffefefefefefe
fdfdfffcfcfefafafcf9f9fbffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffdfffffdfffffbfffffdfffffdfffffd
fffffdfffffffffffffffffffefefefdfdfffcfcfefbfbfdfafafcffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd
fffffdfffffbfffffdfffffdfffffdfffffdfffffffffffffffffffffffffefeff
fdfdfffbfbfdfafafcffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffdfffffdfffffbfffffdfffffdfffffdfffffd
fffffffffffffffffffffffffefefffdfdfffcfcfefbfbfdffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfffffd
fffffbfffffdfffffdfffffdfffffdfffffffffffffffffffffffffffffffdfdff
fcfcfefbfbfdffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffdfffffdfffffbfffffdfffffdfffffdfffffdffffff
fffffffffffffffffffffffffefefffcfcfefbfbfdffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffdfffffdfffffb
fffffdfffffdfffffdfffffdfffffffffffffffffffffffffffffffdfdfffcfcfe
fbfbfdffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffdfffffdfffffbfffffdfffffdfffffdfffffdffffffffffff
fffffffffffffffffffdfdfffcfcfefbfbfdffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffdfffffdfffffbfffffd
fffffdfffffdfffffdfffffffffffffffffffffffffffffffdfdfffcfcfefbfbfd
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffdfffffdfffffbfffffdfffffdfffffdfffffdffffffffffffffffff
fffffffffffffdfdfffcfcfefbfbfdffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffdfffffdfffffbfffffdfffffd
fffffdfffffdfffffffffffffffffffffffffffffffdfdfffcfcfefbfbfdffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffdfffffdfffffbfffffdfffffdfffffdfffffdffffffffffffffffffffffff
fffffffdfdfffcfcfefbfbfdffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffdfffffdfffffbfffffdfffffdfffffd
fffffdfffffffffffffffffffffffffffffffdfdfffcfcfefbfbfdffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffdfffffdfffffdfffffdfffffdfffffdffffffffffffffffffffffffffffff
fdfdfffcfcfefbfbfdffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefefefdfdfdfdfdfdfcfcfcfbfbfbfafafaffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefefdfdfdfcfcfc
fbfbfbfbfbfbffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffefefefefefefdfdfdfdfdfdfcfcfcfbfbfbffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefefdfdfdfcfcfc
fbfbfbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefefefefefefdfdfdfcfcfcffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffefefefdfdfdfcfcfc
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefefefdfdfdfdfdfdffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffefefefdfdfdffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffefefefefefefdfdfdffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffefefefefefefdfdfdffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fefefefefefefdfdfdffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefefefefefdfdfdffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefefdfdfdffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffefefefefefefefefefefefefefefefefefefefefefefefeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefefefefefdfdfdffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffefefefefefefefefefefefefefefe
fefefefefefefefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefefefefe
fdfdfdffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffffff
fefffffefffffefffffefffffffffffffffdfffefdfffefffffefffffeffffffff
fffffffefffffefffffefffffefffffefffffefffffefffffefffdfffffdffffff
fffffffffffffffffffffffffffffffffeffffffffffffffffffffffffffffffff
fffffffefffffefffffefffffefffffefffffefffffffffffffffffffefffffeff
fffefffffefffffefffffefffffefffffffffffffffefffffeffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeff
fffffffffefffffffffffffffffffffffffffffffffffffffffffffffeffffffff
fefefefefefefefefefdfffefdfffefbfffefbfffefbfffefeffffffffffffffff
fffffffffffffffffffffefffffffffffeffffffffffffffffffffffffffffffff
fffffffffffffffffffffefffffffffffffffffffffffffffffffffeffffffffff
fffffffffffffffffffffefffffefffffefffffefffffffffefffffffffffeffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefffffffffffefffffefffffefffffefffffefffffefffffeffff
fffffffffffffffffffffffffffffffffffffffffffffffffffeffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffefefefefefefdfdfdffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fefffffefffffefffffcfffffefffffcfffffcfffffcfffff8fcfbf7f7f5fff9f7
fff9f9fffafbfff7fafaf5f9f9f7fcfdfefffcfffffbfffffafffff8fdfff8fefe
f9fdfcfafffbfafff9fdfffafffffdfffefffefcfdfaf8f9faf8f9fdfbfcfffeff
fffefff7f5f6fbf9fafffffffffffffefffffcfffffcfffffbfffffbfffdf7fdf9
f1f6f2fefffdfffffdfffdfcf6f0f0fffcfdf9f0f1fffdfdfffdfdfffbfafffefc
f7f9f6f5faf6fcfffff7f9f8fefffffffffffbfbfdfdfdfffffffffffffffafafc
fefcfffefcfffffdfffffdfffffcfffffdfffffdfffffefffffffffeffffffffff
fffffffffefffffefffffefffffefffbf9fafffffffefffff3f9f7f1faf7f7ffff
f5fffff0fcf8f7fbfaf9f9f9fffefffffefffffefffbf9fafbf7f8fffefffffdfe
fffdfefffefffffffffffffffefffffefffffefffffffefffcf7fbfffeffffffff
f7f7f9f8f9fbfefffffafefff3f5f4fefffffffffdfffffdfdf7f7fffbfcfef4f5
fffbfcfffffffcfffffefffffcfffffefffffefffffefffffefffffefffffeffff
fefffffefffffefffffeffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefffffefffffefffffefffffefffffcfffffefffffcfffffcffff
fcfffffcfffffcfffffcfffffcfffffefffffefffffffffffffffffffefffffeff
fffdfefffdfefffefffffefffffefffffefffffffffffffffefffffeffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefffffefffffcfffff5f9f8f1f5f4f7fbfa
fbfffff9fffdfbfffffefffdfffdfbfffcfafffcfdfffcfffffdfffffefffeffff
fcfffff7fcfff3f8fcf5fafdfbfffffafffef5fcf5fbfffafcfffbf7f7f5f7f7f7
f7f7f7f9f7f8fbf9fafffdfefffefffffefffffdfefdfbfcfbfbfbfefefefeffff
f5f9f8e8ecebdbe1dff1faf5f9fffdfbfffdf9fbf8fdfdfbfdf9f8fcf6f6fffcfd
fffcfdfff9f9fffdfdfffefdf6f5f3fefffdfcfffdf3f8f4fefffffefffffeffff
fafbfdf1f1f3f5f5f7fcfcfefefefff7f7f9fcfafdfffefffffefffffefffffeff
fffafef9f7fafffffffefffffffffffffffffffefffffefffffefffffefff3f1f2
fffffff8fcfbdbe4e1ccd8d4d9e8e3edfffaf5fffffbfffffefffffcfcfcf7f7f7
fbf9fafffefffffefffcfafbfffdfefffdfefffdfefffffffffffffefffffeffff
fffffffffdfffffdfffbf6fcf8f7fcfffffffefffff1f5f6fafefffcfffffcffff
f8f8f6fefdfbfff9f9fff9fafff9fbfffcfdfffffffcfffffefffffcfffffeffff
fefffffefffffefffffefffffefffffefffffefffffefffffeffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefffffefffffefffffeffff
fefffffcfffffcfffffcfffffcfffffbfffffcfffffbfffffbfffffcfffffeffff
fefffffffffffffffffffefffffdfefffdfefffdfefffefffffefffffefffffeff
fffffffffffffefffffeffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffff
fefffffcfffff9fdfcf4f8f7f3f7f6f8fefcfbfffffbfffff9fbf8fffbf8fffcf8
fffdfdfffefffffdfffffefffffefffcfdfffdfefffcfffffcfffffafffff9fffd
fafffafbfffbfafff9fbfffcfdfffefefffffffffffffffffffffffffeffffffff
fffffffdfdfdf9f9f9fdfdfdfefffff8faf9e2e4e3cdd1d0c4cdc8e1eae5f5fbf7
f8fdf9fefffdfbfdfafbfbf9fffffdfcfbf9f7f6f4f7f6f4fefdfbfefefcf2f2f0
f3f5f2fefffdf5f7f6f9fdfcfcfffffcfffffefffffefffffefffffefffffeffff
fffffffffffffffffffefefefdfdfdfffdfefefefefefffffeffffffffffffffff
fffefffffefffffefffffefffffefffffffff7f9f8d8dedcacb7b391a09b9cada7
b7c6c1f2fbf8f0f6f4eff3f2f4f8f7fefffffefffffffffff7f7f7fefefefefefe
fefefefefefefffffffffffffffffffffffff5f0f6fffafffffdfff8f7fcf3f3f5
fefffffcfffff5fbfbfbfffff7fbfaf5f7f4fffffdfffffdfffefdfff8f6fdf7f7
fffefffefffffffffffefffffffffffffffffffffffffffffefffffefffffeffff
fefffffefffffefffffefffffeffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefffffefffffefffffefffffefffffefffffcffff
fefffffcfffffcfffffcfffffefffffefffffffffffffffffffdfefffdfefffdfe
fffdfefffefffffefffffefffffefffffffffffffffefffffeffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefffffefffff4f8f7fcfffffcffffebefeee9efed
fafffefbfffff6fbf7f9fbf6f8faf5fafaf8fdfdfbfffffffffefffffefffcf9ff
fffefffffefffeffffe6eae9e3e9e7f7fdf9fbfffbfafffafbfffdfbfffffcffff
fcfffffefffffefffffefffffefffffefffffffffffcfcfcfffffffffffffeffff
f4f4f4e6e8e7adb3afaeb7b2c2c8c4dee7e2f3f9f5f3f9f5f6fcf8fbfffdfcfffd
fcfffdf7f9f6f6f8f5fcfcfadbdbd9c1c0bed0d0cefcfffffbfffffcfffffbffff
fcfffffcfffffcfffffcfffff2f6f5f5f9f8fbfffefcfffffefffffefffffeffff
fbfdfcfdfffefdfffefefefefefefefffdfefffdfefffdfefffdfefffefffbfbfb
fafcfbfafffed2dbd8909c9876858085948f9eaaa6b8c3bfe1ece8f9fffff9ffff
f0f6f4f3f9f7fcfffffcfefdfcfefdfefefefefefefffdfefffefffffefffffeff
fffcfffdf8fefffdffe7e6ebb6b6b8babebfeaf0f0fbfffff5fbf9f6fcfaf3f8f4
fcfffdfefffdfffffdfffefafdfcf8fffefffffffffffeffffffffffffffffffff
fffffffffffffffffffefffffefffffefffffefffffefffffefffffeffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fefffffffffffefffffffffffefffffffffffefffffefffffefffffefffffeffff
fffffffefefefffdfefffdfefefcfdfdfdfdfffefffffefffffefffffeffffffff
fffffffefffffeffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffeffff
fafefdfbfffef3f7f6e2e6e5d5dbd9dce2e0eff5f3f9fffdf8fffbf8fffbf9fffd
fafffcfbfcfefbfbfdfdf8fefcf7fdfffdfffffdfffbf9fcdfe1e0c9cdcccfd5d1
eaf4ecf9fffbf9fffdf8fffef6fffcf5fefbf8fefcfafffefcfffffcfffffcffff
fefffffffffffffffffffffffffffffffeffffffffd2d7d3b0b7b098a29a9faaa2
b6c3baceded4e6f6ecf3fff9f7fffbf8fffbf9fffbf8fdf7f1f2edfdfcf8ddd9d6
8f8e8ab9bebacfd8d3f0f6f2f9fffdfafffcf3f9f5f7fdf9fbfffdfbfffdfbfffd
fbfffdfbfffdfafffcf8fefaf6fcf8f5fbf7fdfffefdfffefefefefefefefffdfe
fffdfefffdfefffdfefaf8f9f0f0f0f7f9f8fcfffffbffffc7d0cd909b9774807c
74857f81928c9cada7c3d2cde7f6f1f7fffff8fffff6fffcf9fffdfafefdfcfefd
fefefefffdfefffdfefffefffffefffffdfffffdfffffafef1f1f3dddddfaaaeaf
9fa5a3c8d1ceeaf3f0f9fffdf9fffdf9fffdeef5eefbfffbf9fef8fafcf7fffeff
fffefffffefffffefffffefffffefffffeffffffffffffffffffffffffffffffff
fefffffefffffefffffeffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffeff
fffefffffefffffefffffefffffefffffffffffefffffffffffefffffffffffeff
fffffffffffffffffffffffffffffffefefefefefefefefefdfdfdfdfdfdfcfefd
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffefffffefffffcfffff6faf9f1f5f4f2f6f5dbe1dfbbc1bf
bcc2c0d2ddd7f0fff9f2fffbf5fffdf8fffdf9fffdf6f7f9f9f4f8fcf6fafef7fe
fff9fdfffdfffefefed1d6d2a5aea9b1bcb4dae7def7fffdf7fffff7fffff7ffff
f8fffff8fffff7fffdf6fffcfbfffffcfffffefffffbfbfbf8f6f7f9f7f8fefcfd
fffffdfefffbdce3dcaab4ac808d847b8c82a2b8acc1d9ccbdd5c8e1f7ebf1fffa
f7fffbf1fbf3fbfdf8fffefbfdf5f3c9c5c27b807c89928daab3aeced9d3e8f1ec
f0fbf5f8fffcf8fffdf8fffdf8fffdf8fffdf8fffdf8fffdf8fffdf8fffdf9fffd
fafefdfcfefdfcfefdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfdf2f0f1fafafafbfdfc
fafcfbfcfffff3f9f7bdc6c3808c886e817b70877f71867f7c918aa6b9b3daede7
f3fffdf0fcf8f5fffcf8fefcfcfefdfdfdfdfffdfefffdfefffcfefffcfefffafe
fffdfffffefffffffffeffffeaeeedb1b7b5818a87a3aea8c7d2cce6f3ecf7fffd
f8fffbf8fffbf8fffbf6fdf6fffffdfffefffffefffffefffffefffffefffffeff
fffefffffffffffffffffffffffffffefffffefffffefffffeffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffefffffefffffefffffefffffefffffefffffefffffeff
fffefffffefffffefffffefffffefffffefffffefffffefffffdfefefefefefefe
fefefefdfdfdfcfefdfbfdfcfbfdfcfefffffefffffeffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffefffffefffffcffff
fafefdfcfffffcfffff0f6f4c8ceccaab0ae9ca9a2bcd3c9cfebddeafff7f4fffd
f8fffdf5f9f8fbf9fafffdfffff7fcfffafdfffefffffffdeef3efc0c9c4a5b2a9
a2b2a8d4e3dcdcebe4e9f8f1f4fffcf5fffdf5fffdf3fff9f0fbf5f9fffdfafffc
f7fcf8f8faf7fbfbf9fdfcfafffbfafdf9f8fffffbf9fef8d8e2da9dada371857a
7e988b98b7a897b6a7b7d6c7e2fcefeefff7f0fdf4fcfffbfcf8f5f1e9e7fffcf9
c2c7c196a19978837b839087a8b3abc4d1c8d2ddd5d5e2d9a5b2a9b2bfb6c7d4cb
dce9e0eafaf0f1fff7f3fff9f4fff8f7fffbfafffbfafffbfcfefbfcfefbfcfefb
fcfefbfcfefbfafaf8fefffdfefffdfbfdfafcfffdfcfffdf3f9f5ccd7d1758a81
7692867c968b77918671887e81988eb7cbc2edfef6f4fffaf6fffaf9fefafcfefb
fefdfbfffdfcfffcfcfffcfefffdfffdf8fcfcfafdf6f6f8f1f3f2fcfffff3f9f7
acb5b078837d7c8982a8b8aed1e1d7f4fffbe8f9eff3fff9f8fffbfffffdfffefd
fffefdfffefdfffffdfffffdfffffdfffffdfffffdfffffdfffffdfffffdfefffd
fefffdfefffdfefffdfefffffefffffefffffefffffefffffefffffefffffeffff
fefffffefffffefffffefffffefffffefffffefffffeffffffffffffffffffffff
fffffffffefffffefffffefffffefffffefffffefffffefffffefffffefffffeff
fffefffffefffffdfefffdfefefefefdfdfdfcfefdf9fdfcf9fdfcf9fdfcfcffff
fcfffffcfffffefffffffffffffffffffefffffeffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefffffeffffecf0effcfffffcfffff9fdfcf7fdfbf1f7f5cad0ce
95a19d839f93a3c3b4d1ede1eefffaf6fffcf7fdf9fffffdfffefdfffcfffffdfd
fcf8f7f2f2f0fcfffdf9fffdd2dfd698a89e8a9b939eafa7bdcec6dcede5f0fff9
f4fffdf3fffceffef7f7fffdf2fbf6f0f6f2f8fdf9fffffdfffffdfffefdfbf7f4
fefffaf9fef8f3fdf5c5d5cb7d938768847685a5969dbfaf7ea090a6c5b6e1f9ec
f5fffbf7fef7fffffbfffdfbede9e6f9fff9bec9c188958c7f8c838f9c9397a49b
919e9588988e90a09688988e7f8f857e8f858d9e94a7bbb0c7d8cedbebe1f6fffb
f7fffbf9fffbf9fffbf9fffbf9fffbfafffbfafffbfcfffdf8fdf9f9fbf8fefffd
fbfffcf4f9f5f3f8f4f7fffbb0c5bc6c887c54706479958989a398738d8280978d
adc2b9f1fffaf4fffaf6fffafafffbfcfefbfefdfbfffdfcfffdfcfffefffffdff
f9f9fbfefffffcffffeef2f1e1e7e3f5fef9c9d4ce8592898292887c8d83adc1b6
8ea297c6dacef1fff6fcfffbfffffdfffffdfffffdfffffdfffffdfffffdfffffd
fffffdfffffdfffffdfffffdfefffdfefffdfefffdfefffdfefffffefffffeffff
fefffffefffffefffffefffffefffffefffffefffffefffffefffffefffffeffff
fefffffefffffefffffffffffffffffffffffffffffffefffffefffffefffffeff
fffefffffefffffefffffefffffefffffdfffffefffffdfefffdfefdfdfdfcfefd
fafefdf9fdfcf8fefcf8fefcfbfffffbfffffcfffffcfffffefffffffffffffeff
fffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefffffefffffcfffff6faf9
f1f5f4f8fcfbfbfffff9fffde0e6e4c2d1cc7694887ea0928eaca09fb9aed1e2d8
eef9f1ebf0eafffffbf9f5f4fefaf7fffffbfffffbf3f8f4f9fffdf6fffbd4e3dc
94a59b90a19781958a9fb3a8b9cdc2c6dacfebfff4f2fffbf1fff8f7fffbf9fffb
f4fbf4f1f3eef8f7f3fffefbfffefbfffffbfcfff8eef8efe0f0e5b4cabd6f8b7c
61837290b5a38db2a07a9b8a99b4a5d2e6daecf8eef7fcf5fffffafaf9f4e9f3ea
e1eee4d6e3d98e9b9169796e90a09592a297798b7f899b8f84968a7f91857d9185
819589879d908ea29694a69a849188aab5addae5ddf7fffaf8fffbf6fff9f6fff8
f8fffaf8fff8fbfffbfbfffaf3f8f2f9fbf6fefffbfefffbf7fef7f2fffbb1cbbe
728c7f607a6d6d897b7993867b95887c94877e9488c5d6ccf5fff9f2fcf4f1f6f0
fefffbfffffbfbfaf8fffdfefffffffffffffbfdfcfbfffefcfffdfbfffdedf6f1
e5f0e8b8c5bc86968c8294888a9e9272887b6f857899ab9fecf3ecf9fbf6fefffb
f9fbf6f3f5f0f8faf5fefffbfefffbfefffbfbfdf8f5f6f1fffffbfffffbfffffb
fcfdf8fbfdfafcfefdfcfffffcfffffcfffffcfffffcfffffcffffeff3f2f7fbfa
f8fcfbfbfffefcfffffcfffffcfffffcfffffbfffefcfffff9fbfafefffffeffff
fefffff4f4f4fffffffffffffffefffffefffffdfefffdfefffdfffffdfffffdff
fffefffffefffffefffcfcfcfefffffcffffd8dedca9b2afedf6f3f6fffcf6fffc
fbfffffcfffffefffff9f9f9faf8f9fffdfefefefefffffffffffff9f9f9fbfbfb
fffffffffffff6f6f6ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffefefeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffefffffefffffcfffff7fbfaf4f8f7fafefdfbfffffbffffedf3f1d7e6e1
91ada188aa9c7b998d9eb8ada1b5aaabbbb1eef8f0edf2ebfefffbf3f5f0f9fbf6
fcfffbfafffcf7fffbf8fffdf5fffbceded495a69c96aa9f96aa9fa5bbafb5cdc0
a6beb1cbe1d5f2fffbe9faf0edfaf1f9fffbfcfffbf9faf5fefdf9f1f0ecf9f8f3
fcfff8fbfffaf2fff5d1e5d999b4a5709180698b7a97b9a882a3927e998aa0b6a9
d0e0d5ecf6edfcfff8fcfffaf3fdf4f3fff6ccd9cfbfccc2919e9468786d8c9c91
8d9f937f918585998d83978b73897c6b8174748a7d849a8d8ea2968fa09690a096
99a99fb3c3b9d5e5dbeffff5f7fffbf7fffbf5fff8f3fdf5f9fff9fcfffbfbfffa
f4f6f1fcfdf8fcfffbf5fffbdbefe4aac0b4758d805d776a6882757892857e988b
859d90899f93bbccc2f2fff6f9fffbf5fcf5f9fbf6f9faf5fefffffcfefdf8faf9
fbfffefcfffdfcfffdfbfffdfbfffbf0faf2d3ded6aabaaf87998d75897d788e81
7d9386798d817d8880b3bdb5e5efe7f7fef7f9fff9fbfffbfbfffaf1f6f0fdfffa
f4f6f1f3f4effafbf6fefffafbfcf7fcfdf8fffffbfbfdfcfbfffefcfffffcffff
fcfffffcfffffafefdf8fcfbfcfffffcfffffbfffef8fcfbf9fdfcfcfffffcffff
fcfffff7fdfbebf1effcfffffcfffffcfffffdfffefafcfbfffffffffffffffdfe
fefcfdfffefffffdfffffdfffffafcfbf7f8fffefffffefffefefefefffffcffff
d5dedb9ba6a2c9d5d1f2fdf9f6fffdf8fffefcfffffefffffcfcfcfaf8f9fffeff
fffffffffffffbfbfbfafafaffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffefffffefffffcfffff9fdfcf8fcfb
fcfffffbfffffbfffffbfffff1fdf9cde7de86a49a88a4987e988d889e92b3c7bb
b4c4b9bfcdc0eaf6ecf6fff7f9fffaf9fffbeef7f2f4fdf8f9ffffeffaf4f2fff8
c9dad099ada28fa59990a89b8ca69998b2a5a0baad9eb6a9d9efe3edfef4f3fff7
fbfffbfcfffbfbfcf7fcfbf7faf9f4fefff9fcfffaf8fffaeafcf0cde3d693ae9f
5574647f9e8e8fae9e839e8f7d9587a1b5a9c5d5cae2eee4f8fffaf8fff8e7f3e7
e1ede1ddebdec0cec188988b6c7c6f819385889a8c7c9182768b7c7990807e9585
7b9383728a7a6b81748ca095899d9283998d83998d8fa599acc2b6d2e6dbeefff5
f5fffbf4fff8f2fdf5f9fffbfcfffbf9fbf6fbfcf7fefffbf6fff8f7fffbe6f6ec
aabbb17084795c74676a8275779184758f8288a0938fa599aebfb5e4f4eaf6fff9
f1f8f1fbfffbeff3f2fafefdfcfffdfcfffdfbfffcf8fdf9fcfffbfbfffbf8fff8
edf7eedde9dfadbab077897b798e7f89a090788e8167786e64746a84948ac7d4cb
f3fff7f7fffaf2fcf4f8fff8fcfffbfdfffafffffbfffffbfffffbfcfbf7faf9f5
fefdf9fcfefdf0f4f3dfe3e2d8dcdbe6eae9fafefdfcfffff6faf9f6faf9fcffff
fcfffffcfffff8fcfbf6faf9fcfffffbfffff1faf7eff8f5fbfffffbfffff9fffd
fcffffecf0effefffffcfefdfafafafaf8f9fffdfefffefffffefffffcfdf8f4f5
fcf8f9fffefffffffffefffffbffffd8e1de8e9a969daca7deeae6f5fffdf9ffff
f9fffdfefffffffffffcfafbfffefffafafafcfcfcfffffffffffffffffffcfcfc
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefefefefeffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fefffffefffffcfffffcfffffcfffffcfffffbfffffbfffffbfffff8ffffecfffa
d1ebe289a096748c7f94ac9ea0b8a89fb6a695ac9aa3b8a9ccded0eefef1f1fef4
effaf2f9fffdfbfffff2fbf6f5fff8f3fff9b6c7bd90a4997c94877f998ca5c1b3
9bb7a997b3a586a093b4cabef3fffaf8fffbe8efe8fcfffbfefffafffffafffffa
fefffafafff9f2fef4ecfcf1bed2c678908256716289a4959bb6a785a0917e9688
93a99cb8ccc0ddefe1f7fff7ecf6ebeef8edd6e2d6dae6dac6d4c7788679637366
8395877f9485788d7e768d7d849c8c8ea6967991815870606a82747f978a8ca699
849e91738d8077918499b1a4bad2c5e5fbeff4fffbf5fffbf5fff8f6fdf6fcfffb
fefffbf7f8f3fbfcf7fefffbfbfffbe3eee6a8b8ae6e82775c7467647e717d978a
7c96898aa295899f9390a499cfe0d6f7fffbeef9f1f6fffaf6fffcfbfffdfbfffd
fcfffdf5faf6f3f8f2f7fcf6f8fdf6f9fff8f9fffadfebe1a1afa27e9082899b8d
95ac9c7f9588728a7d63796d687c7195a99ed4e5dbf7fffbf8fffbfafffafcfffb
fefffbfffffbfffffbfffefbfcf8f5f7f6f2fdfffcf7fbfadde1e0bec2c1c3c7c6
e7ebeafcfffffcfffff2f6f5f5f9f8f9fdfcfcfffffcfffffcfffffafefdf8fefc
f6fffdf1fdf9d8e3dfeaf5f1f3fcf9f9fffff4faf8f5f9f8fbfffef8faf9f6f6f6
fcfafbfffefffffefffffefffffefffcf8f9fffefffffffff8faf9f6fcfae1ece8
939f9b899893b4c3beebfaf5f8fffff8fefcfefffffffffffffefffffefffefcfd
fffffffffffffdfdfdfcfcfcfdfdfdfefefefdfdfdffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefefdfdfd
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefffffefffffcfffffcfffffcfffffbfffe
f7fdfbf7fdfbfbfffff9fffff5fffff4ffffc3d7ce89a1947c97887f9c8a8faf9a
96b69f8ba8949ab5a2b8cfbfdceee2f8fffbfbfffdfcfffffbfffdf3fdf5f0fcf2
effff4abbfb37f978987a39481a09097b6a6a4c3b392ae9f7f9789a0b4a8f0fff5
eefaf0eff9f0fcfffafffffafbfbf3f8f9f1fbfef5f5fdf2f6fff5e1efe2b5c5b8
667b6c6a8171859d8d92ad9c809d8b7c998796b3a1afc7b7d8e6d9fbfff6eef6e9
dbe6d8dde9dbcbd9cab2c0b1778878617363829786899e8d6b8270657e6b829b88
8ba4917893825c7768627e6f6e8d7d7d9c8c87a89788a99881a0907b9788a3beaf
d0e6d9f4fffaf7fffaf7fff8f7fcf5fcfff8fffef9fffcf8fcf7f3fbfaf5f6fbf4
d7e1d8a0b0a56f8578587364678374829e8f7e9a8b769182869e908ea497abbfb3
e5f6ecf7fffdf8fffdeef7f2fafffcfcfffbf6fbf5f6f8f3fefffbfafdf6fefffa
fcfff8f4fcf1d1dbd09ba99c86948794a99a87a39483a493789787637f70597163
768c7fb9cbbff4fff7f4fef5f6fdf5f8fbf4fafbf5fefdf8fffffafffefafefaf7
fefffdfbfffffafffedae0deb8bebcb6bcbad6dcdaf7fdfbfbfffff8fefceef4f2
f2f8f6fbfffffbfffffbffffeff8f5f7ffffe7f6f19ca8a4b1bdb9d6e1ddf4fffb
f9fffff7fffdfbfffffcfffffafcfbfbfbfbfffffffffefffffefffffefffffbfc
fffefffefefef2f6f5f2fbf8ecf8f4a2b1ac8e9f99889993d4e3def8fffff8fffe
f9fdfcfffffffffefffffbfcfffefffffffffbfbfbf4f4f4fcfcfcffffffffffff
fafafaffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefefefdfdfdfdfdfdffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffff
fefffffcfffffcfffffcfffffafefdf6fcfaf4faf8f6fcfaf7fdfbf8fffeedf9f5
f4fffdbcd2c677938480a18c7fa28a88ae9592b59d95b79f97b29facc0b4dae7de
f8fefafbfdfcf8faf7f4fbf4f5fff6f7fffae5f7ebafc7b97b9788668575759685
8fb09f90af9f98b4a5859d8f99ada1c8d8cdf8fffaf0f7effffff8f6f6eef8f8f0
fffff8fefff8fafff6f1f9eee1ebe0afbdb0607264526a5a829f8d8fae9c84a793
85ab968ead9bacbaabecf4e7fbfff6f8fff3e0ebddd0dccec7d3c5b7c5b6647565
6b7d6d758a79778c7b6c837167806d7b948195b09d7c9b896384735374635f8170
7ea08f8bb09e80a2916c8d7c75918290ab9cc1d5c9eefef3f9fffaf7fef6f9fcf5
fffffafffbf9fff8f7faf0eeedeae5e3e8e1cedbd19db1a56f87795c7869587767
7c9b8b91b0a0738f80668172869e90a0b6a9d5e4ddf7fffdf8fffdf9fffdf2f9f2
fefffbfffffbfefffafefff9fffffaf9fcf3ebf1e7ecf4e9c8d2c7939f93798e7f
84a594688f7c7095838bac9b7594844d6859657b6ea6b8acf0fdf3f7fff8fafff8
f8f9f3f9f8f3fffdf9fffdfafffefbfefffdf6fcfaf9fffdf8fefcd0d6d49da3a1
9ba19fbcc2c0e7edebf0f6f4fbfffffbfffffbfffff8fefcf6fcfaf4fdfaf2fffc
effffa9fb0aa8c9b969aa9a4b1bdb9dfebe7f4fffbf9fffffbfffffcfffffeffff
fbfdfcfbfbfbfcfafbfdfbfcfffefffffefffdfdfdf3f7f6f4fdfaf4fffcb1c0bb
9baca674857fadbcb7e6f2eef6fffcf6faf9fffffffffefffcf8f9f4f2f3f7f7f7
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffefefefefefefdfdfdfcfcfcffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefffffefffffcfffffcfffffbfffefcfffffbffff
fafffef8fefcf6fcfaf1f5f6f9fffff1fef7f1fffab7d3c481a48e8cb49a689578
79a48894baa190b09b859d8fa4b4aad6dcd8f4f4f4fffffff9fef8fbfffaeefaf0
f4fffae1f9eb8fab9c799a896183726a8c7b7fa08f97b6a696b1a2a1b7aa7f9185
b7c4baf2fcf3f2f5ecfbfbf3fbfbf3fdfdf5fffff8fffff8f8f9f1f5fbf1e6f0e5
94a4975a716164816f81a49088af9a7fab947ea18d8d9b8cabb1a3f8fef0fbfff4
edf5e6e9f4e4c9d6c5d2e0cf9eaf9d6f826f5d725f7a8f7c809783667d69637c67
7b96838aab987a9f8d688d7b5b826f5b826f658c79759a887ea3917394836c8879
7d9386acbeb2dce8def4fbf3fcfff8fffffafff9f9fff9fafff2f2f2eae7e8e9e3
dde7dec1d3c7a2baac5d796a678877698a797091807e9f8e779686708c7d7e9688
879890cad7d0f8fffdf9fffdf4fbf4fefffbfffffaf9f8f3fffffafffffafcfcf4
f1f2eaf4faf0eaf2e7b9c4b6839889688d7b6c97836f99856e9582759786789787
6a827453675bafbfb4d5dfd6f8fdf6fffffafffcf7fffbf7fffdfafffefbfefffd
eff5f3edf3f1fbffffeff5f3bec4c2929896848a88a6acaac3c9c7e7edebf9fffd
f9fffdf4faf8f6fcfaf8ffffeffffaf2ffffd4e7e193a49e81928c808f8aa0aca8
d1dcd8e3ece9f1f7f5fbfffffcfffffdfffef7f9f8f8f8f8fbf9fafffefffffbfc
fefefefbfffef9fffff5fffdb3c4be9eb1ab7a8d8780918bb8c4c0f1faf7f8fcfb
f7f7f7fffefffffdfee9e7e8cfcfcfd1d1d1f3f3f3fffffff7f7f7f5f5f5ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fefefefdfdfdfdfdfdfcfcfcffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffefffffefffffefffffeffffffffffffff
fefffffcfefdfcfefdfcfffffcfffffbfffffbfffff9fdfcfefffffafefff9ffff
f3fffbe3f9eda9c6b472937e84aa91799f8698bba39abba687a4928096898b9c92
bdc8c0fbfffbfcfffaeef4eaf7fff6f7fffaf2fffad1ecdd8dac9c7495846c8d7c
6486758aab98a2c1afabc6b372897784998691a292ebf5eafcfff8fbfef5f2f3ed
fffef9fffffafaf9f4fdfef8f4f9f2dce8de91a395546f5e65867182aa927ca88d
7399807c937f909e8daebbaae5f2e1f5fff0eef6e7edf5e6c6d1c1d6e1d1a4b1a0
6f806e6275626f8471748d7867806b53705c6c8f7b7ea5928ab19e779e8b547e6a
4b7462688f7d88ad9c7b9d8c6f8e7e617c6d6c83739fafa2dbe9daf8fff6fefff6
fffaf5fff5f5fffcfafffdfaf2f1ecd9dcd5ced8cfd2e2d790a699688374526e5f
5e7f6e78998887a99882a7957899887994857f9589acc0b5effff5f8fffaf7fef6
f0f3ecfefff9fffffafcf9f4fffffafffffaf9faf4f6f9f2e0e5deafbcb2668575
759c877499875c826d5d7f6e7596857a968768837443594c8b9d91dae6dcfbfffa
fffffafcfbf6fffbf7fffcf9fffefffefffffefffffcfffffcffffecf2f0b6bfbc
818c8885908c8f9a96a7b2acccd7d1f0fbf5f8fffdf8fffdf6fffcf3fff9f2fffa
f5ffffa3b2ab98a9a38e9f977b8c86a4b3acbccbc6d6e3dcf2fdf9f9fffdfcffff
fafcf9fbfdfcfffffffffdfffbf6fafffffffefffffbfffff4fffbb0c1b99db1a8
899e955f736a8fa098eaf5effbfffdf1f1f1fffbfcfffdfffffeffabadac7d8180
b6bcbaf2f8f6f5fbf9f0f6f4fcfffffffffffffefffffefffffefffffffffeffff
fcfffffcfffffefffffffffffffffffffffffffffffefffdfffffdfffffdfffffd
fffffdfffffdfffffffffffffffffffffeffffffffffffffffffffffffffffffff
fffffffffffffffefffffffffffefffffffffffeffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefefdfdfdfcfcfcfcfcfcffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffefffffefffffeff
fffefffffefffffefffffefffffefffffefffffefffffffffffffffefffffcffff
fcfffffcfffff4f5f7fcfdfffefffff9fffdf9fffdeaf7eeb0c0b56f847588a090
90ab9890ad999cbea6779a8474977f678d74c1ddc7fbfff6fffff6fefff6e7efe4
edfaf0f2fffabcd4c78da99b6c8b7b658874678a7485a98fa1c3a8799c7c799b7a
7795798aa18fc4d4c9f1fef4f5fff7f3f8f4fefffdfffeffffffffeff1eef1f8f1
c6d3c9738877415d4753755a7da68696bfa1789f847c9e866b877195aa97e0eedd
fafff3f6faece4e6d9cdcfc2d9ddcfbac2b37784735a6d5a70897476937d597b63
4d755d618b75739d8982ac9887ae9c668c7d486c5e4a6e6084a69681a291749381
55725e829e8792ac93c7dfc5f4fff1ecf4e7f5f8effefff7fffff7f7f4edeae7e0
e5e2dbe4e5ddd9dfd59aa69a6274665a75647194807da79178a89073a38b729c84
71978080a38da7c4b0d1e8d8ecfceffbfffafefffafffffbfffdfcfef8f8fef8fa
fffbfdfffafef7f2f6eceeeda0b0a579907e637b6b6784706a89775f826e638672
739682719281405c4d6b8174cfe1d5ecf8eef6fdf5fefffbfffdfcf7eef3fef5fa
fffcfffffefff3f4f6eff5f5dae6e2aebfb964786f83988f93a99d8da3979fb5a9
d1e7dbf2fffaf5fffafbfffbfafff9eff5f1dce7df8a99926e827773887f869e91
82998f94aa9ebfd3caeffff5f9fffdf4fbf4fbfdfafffffff4f1f8fdfafffffdff
f6f6f8f4f8f7f8fffcbcccc29bafa37d98876b86755d756795a79bf8fffaf9fbf8
f8f2f4fffcfffffefcccd1cd8e999372837b9aafa6dbf0e7f4fffdf2fdf7fefefc
fffafafffafbfffcfdfffffdf9fefaf3fef8f3fefaedf1f0fefffff7f9f8f7f9f8
fefffdfcfffbfefffafbfef7fdfff9fdfff9fffffbfffffdfffefffffefffffdff
fffefffffffffffffffffffffffffffffefffffefffffdfefffdfefffefffffeff
fffefffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffdfdfdfdfdfdfcfcfc
fcfcfcfbfbfbfbfbfbffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffefffffefffffefffffefffffefffffefffffdfffffefffffeff
fffefffffefffffefffffffffefffffefffffefffffdfcfffffeffffffffffffff
fefffffcfffdd4dad6a3afa57e908492a99991ac99a2c4ac96bea46a977a78a98b
688f74b5c0aff9f9edfffff4fcfff6f0fcf0effff4f2fffbb0c8bb8aa6976e8f7c
5f826a6e9276749c7a85ad8a8fb8907fa4827e9b858ba395b7cbbfedfdf3f9fffd
f1f5f4f3f3f5fffffffdfffeeff4f0dae4dbb5c6b67c947e516f55597e5d78a181
8eb99d739b81789a8269856f9fb29ff9fff4f6faecebebdfe8e6dac6c6bac9cdbf
b5c0b070816f586f5b6d8a74698b734068503f6951668d7884ab9882a9978aaea0
81a597567a6c486a5a7ea08f7b9c8988aa92597a5f739477779978afccb0f4fff4
effdf0f0faeffefff8fffff8f8f3edf0e9e3f1eae4e1ded7c2c5bc8f9b8f647b6b
5e7f6c719b857cae957bad9279aa8d84b19483ab9184a78fa9c4b1def3e2f3fff6
eaf1e9fefffdfcfbf9fbf7f8fffbfffffcfffffcfff6eff7e6e4e7d0d5cea6b2a4
7a8b7b647b69617e6a61826d5e846f5e846f7297855e806f527161688072cadcd0
f7fffafbfffbf5f5f3fffcfffff7fffff6fefffbfffbfcfef5fbf9e6f2eed1e2da
8ba097768e81728d7e86a19292ad9e9db8a9c2ddccf2fff8f7fcf6fffffbfcfffb
f9fffbb9c9bf7c908560786b799386829c8f88a295a1b7abc7dbd0ebf8eff9fffb
fbfffbfcfefdf3f2fafbf8fffffdfffcfbfffcfefdfbfffbccd9cf97ae9e7b9683
5a7a6563806e6d8474dfece3fefffbfffdfdfffafdf9f8f6e1e6e2a6b3ac5f746b
75918597b3a7cde4daeffef7fefffdfffdfdfffcfdfff9fafffcfbfcfffdf7fffd
f5fffbfbfffffefffffeffffcccecbd1d6d2fcfffaf8fdf6fcfff8fdfff7fdfff7
fefffafffffbfffefffffefffffdfffffefffffefffffffffffffffffffffffeff
fffdfefffdfefffdfefffefffffefffffefffffeffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffdfdfdfdfdfdfcfcfcfcfcfcfcfcfcfbfbfbffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffeff
fffefffffefffffefffffefffffefffffefffffefffffefffffeffffffffffffff
fffffffffefffffefffffffffbfbfdfefffffcfffdf3f9f5d8e4daa5b5aa809787
94af9c90b29a99bfa687b2967aa88b577e637b8a77b7beaefbfff4f9fff6f0fcf0
f5fff8f4fffae1f7ea96aea084a18f7c9c876b8d7444694a799e7d97bf9c94b998
7797807691808ba292b9cbbfe4efe9f9fffbfefffffefffffefffff1f6f2e8f2e9
e0eee1a7bca95f78624b694f63856a759c8184aa916f8f786b87716a7d6a9eab9a
fcfff4fafef0e3e5d8edf1e3d2d8cabdc8b8b6c4b37c917e576e5a728f7972957d
587e6740664f4a705b7196848eb0a090b2a48caea05e80704a6c5b77988587a893
65876e44664b6083656a886ec4dbc9e5f5e8f8fff8fbfff8fefff7fffff8fff9f3
efe8e2e5e2dbdedfd7bdc7bc8c9e90698473688b7776a08a80ac937faa8f90b89d
97bda48eb0988aa793a4bba9d2e4d8f6fff9f9fffdf8fdf9f8f8f8fdfbfcfffdff
fffdfff9f2f9ede9eaf0f3ecd0dbcda0ae9f7183735a72625978665b7e6a577d68
5f85707ea18d5170604762536e8477c6d8cce0ede3fbfffbfdfbfefffcfffffdff
fdfbfefefffffbfffff0fbf7e6f5eebecfc77e948861796b7a95868aa596809c8d
95b2a0c5dccce8f3ebfbfffbf9fffbf7fffbeafaf0b1c5ba6e8478657d707a9285
7e96898aa094a5b9aeceded4f0fdf4f8fffbf5fbf9f8f7fdfcf9fffffdffffffff
fefffffbfffbe0ede395ac9c7c978459796463806e506858abbbb1fcfffbfffefd
f9f3f3fcf8f7fbfdfac7d2cc657970648074617f7398b2a7d0e4dbf7fdf9fffffd
fffdfdfef8f8fbfaf8fcfffdf8fffdf8fffdfcfffffefffffcffffaaafaba7aca8
e1e6dffafff9f9fff6fbfff7fdfff7fefffafefffafffefffffefffffdfffffeff
fffefffffffffffffffffffffffdfefffdfefffdfefffdfefffefffffefffffeff
fffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffdfdfdfdfdfdfdfdfdfcfcfc
fcfcfcfcfcfcffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffefffffefffffefffffefffffffffffffffffffffffffffffffefffffeff
fffefffffefffffefffffefffffefffffefff8f8fafffefffefefff6f6f8f7f9f8
fcfffdfbfffdf3fef6daeadf90a59688a09084a48f8fb29c98c0a67ea98e84ab90
748a737f8e79c2cfbde8f6e5f7fff6f5fff8dfefe2f4fffab2c6ba92aa9a94af9c
819e884d6f545a7f60729a7895bc9d88aa9184a48f7a95827f9686acbcb2e9f4ee
fbfffdfcfffdfdfffcf5faf4f2f9f2e6f2e8c2d3c38ca18e69816b5c786161836b
63856d86a38d7b947f546956627361a3b09feff7e8fbfff4ecf4e5d6decfcad5c5
c6d3c2afc0ae8a9b896a816d72907870927a51735b41624d5f806d7596857e9e8f
92b4a48daf9f5a7c6b4f705d63846f71937b70947a698b705171596c8774afc4b5
eafaedf8fff8f9fff5fffff7fffcf5f5f0eaedeae3e5e5ddd8ded4c0cec197ac9d
728d7c698a777699838db09882a68c84a68e93b39c98b5a19ab5a2b7cdc0daeee2
eefef4f2fdf7f7fdfbfcfefdfefcfffffbfffff8fffff9fbf0f1ebe6ece0c7d2c4
95a394667b6c536e5d5574625c7d6a597c686386727b9c8b5170604d6859576d60
b1c5b9ecf9f0f7fbfafffffffffffffbfdfcfefffffcffffeef4f0eff8f3deebe2
a6b6ac73877b6d8577809b8c8ba79889a8968aa596c6d8ccebfbf1f5fffbf3fffa
f4fffbe1f5eaa2b6ab6e8277697f7371877b82968b97aba0b3c4bacfe0d6e8f9ef
f7fffdfefffffffdfffaf8fdfffefffefefefcfffbf0fdf39bb0a17a9584658570
567563526d5e76877decf6eefffffdf7f3f2fffefdfffffddfe8e38fa39a6e8a7e
5b7b6e7995899cb3a9d8e5def7fdf9fffffdfffffdf9f9f7fefffdf9fffdf9fffd
f5f9f8fefffffbfffeacb1ad999e9aafb6aefbfffaf5fdf2f9fff6fafff6fdfffa
fefffafffdfefffefffffdfffffefffffefffffffffffffffefefefefefefefefe
fefcfdfdfdfdfffdfefefefefffdfefefefefefefefefefefefefefefefeffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffefefefefefefdfdfdfdfdfdfcfcfcfcfcfcffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefffffcfffffbfffffcfffffcfffffcffff
fcfffffefffffefffffffffffffffffffefffffefffffefffffefffffefffffeff
f6f4f7fdfdfffffffffbfbfdf7f9f8f9fefafbfffdf9fffbeaf7edccded0889f8f
89a69297b8a381a78e8fb79d91b89d82a08480987e697f68b9ccb8f5fff4eafbeb
e9f7e8f7fff8ebfbeeacbeb095aa99829b867b98825e806755795d72997c94bba0
85a98f799b83799682849b8ba0b2a6d7e2dafbfffbf5faf4f9fef8f9fef8f1f8f0
e1ede1c3d1c294a5956b806d5b7761597660728e787f9883738a76556a57596c59
9aab99eefcebe5f2e1d7e4d3d0dbcbcdd8c8c0cbbbaab5a599a8955f775f658168
75917a607c663e5b47567361809f8d83a4938cad9c99baa9698c783b5e4a678a74
8db39a7c9f875e816950705b65806f9bb2a2ddede0f9fff8f8fef4f9f9f1fffff8
f7f4edebebe3e3e4dcdae2d7bfcdc096a89a788f7f6f887577937d74907a7a9781
8ca99398b8a39cbca7a3bfb0acc7b8c9e1d4ddf1e6f7fffdf9fffdfefffffdfbfc
fffbfffffdfff5f2edefefe7dfe2d9bdc7bc8c9c8f627768516c5b51705e597a67
60836f6384717b9c894a69574e6b5965806fa4baadf2fff8f7fffdf1f7f5f6faf9
fcfffffbfdfaf1f3f0fcfffdedf4edcfdad299a99e6d81756a857682a19185a695
75968593ae9fbdd5c7edfff6f1fffaeffff7ecfff4d3e5d99dafa36a7c7066786c
7084788a9e929cb2a5acc2b5c8e0d2ecfdf5fbfffffffefff9f7fcfffefff7f7f7
f7fcf6f8fffaabbdaf6f8a79648371506f5f5b776861776bb7c4bbf0f6f2fffffd
fffefbfffffbedf4edc1d2c8738f816484756c8c7d759183abc1b5d9e6ddfbfffb
fefffbfcfdf8fbfdf8fcfffbfcfffdf4f6f5fdfefffcffffb8bdb99197938d978e
e5efe6f9fff8f7fff6f9fff6fafff9fdfffafefefefffdfefffdfffffefffffeff
fffffffefefefefefefefefefcfefdfdfdfdfcfefdfefefefdfffefefefefefefe
fefefefefefefefefefefefeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffefefefefefefefefefdfdfdfdfdfd
fdfdfdffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffff
f9fffff8fffff9fffff9fffff9fffff9fffffbfffffcfffffeffffffffffffffff
fffefffffefffffefffffdfffffefffbf9fcfffffffffffffffffffefffffcfefd
fbfffcfbfffbf5fff8edfdf2c3d7cb89a19194b19f7e9f8a88ab958baf9592b597
80a1825d7a5e819981d4e7d3f0ffeff0fdecf8fff6f8fff8e4f2e5bccdbd788f7d
809b887f9f8a6b8e764b7257769f8179a28488ac928aac94708b78647b6b99a99e
e3efe5f9fffbfbfffbfbfffafafff9f3faf2dfe7dcbdc5ba9da99b53685569826d
526955738c7789a28d637c67617a655e75618a9f8cd4e7d4e7f5e4d6e3d2dde5d6
cad0c2b3b7a9bfc8b790a28c70886e627a6260786250695447624f607d697f9e8c
8baa9895b6a59bbeaa60836f3f6550587e6787ad96789e876689754f6e5c577261
94ab9bdbe9dcf9fff8fefff8fffff8fdfdf5fafaf2edede5dbdcd4cfd5cbc1cbc0
a4b0a48492837486766a7f6c72897586a28c8cac9785a69186a99594b5a49ab9aa
bcd6c9e6fbf2f7fffdfbfffffffffffefafbfffafafffdfaf6f1ebe5e5ddd5dbd1
b7c3b789998c5e75654661505978665e7f6c618470587b677ea18d597c684d705c
587767a0b5ace2f1eaf7fffff9fffdf2f7f3fefffdfffffdfffffdf5f7f2e6ebe5
bcc8be86988c627a6c607f6f7395847fa4927fa08f88a797c0dccde6fff2f1fffa
eefff6e9f9eec5d5ca8f9c926c7c715e706472887b8ca49696b1a2a4c3b3bfd7ca
ebf4f1fffffffafafcfffefff5f5f3f6f8f3f9fffac2d2c76981715976645e7d6d
5b7a6a6b8376819288dbe8e1fcfffdfefaf7fffbf8f6fdf6deeee4748e81648475
65877768887987a395aec4b8deebe2fafffafefffbfafbf6fcfdf8fffffdfeffff
f0f1f3fcffffbcc2be8b948f879389b3bfb5f5fff5f5fff5f6fff5f9fff9fafff9
fefefefffdfefffcfffffcfffffdfefefefefefefefdfffefcfefdfcfefdfbfdfc
f9fdfcfcfefdfcfefdfcfefdfcfefdfdfdfdfdfdfdfdfdfdfdfdfdffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffefefefefefefefefefdfdfdfdfdfdffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfffff8fffdf7fffdf7fffdf7fffdf8fffdf8fffd
f9fffdf9fffdfbfffdfcfffdfffffdfffffdfffefdfffefdfffdfdfffdfffefeff
fefffffffffffffffffffffffbfdfcfcfefbfcfffbf9fffbf3fff5f5fffab0c5b6
95ad9d93b09e7d9c8a8bae9693ba9b7ba38181a484678468859b84d2e3d0e6f3e2
fbfff4ebf3e6f9fff6e8f6e9a7b9ab849b8b8aa79586a794547a63578264699677
84ad8f8cb09677978065806d788d7c9aaa9de7f3e9f3fdf4fbfffbf9fef8f3f5f0
e8ebe4d8dbd4c7cdc3889687687b686b806d586f5b6a867087a48e65826c67846e
59755f7d9480cde0cdeffcebd1d9cad3d7c9dbdbcfb6baabb6c4ad93a58d667a61
687b657c927b5d755f425b465974617b9a887b9c8988ab97a8cbb74369544c735e
5f86717aa18c72988364877352715f5b766591a395d2e0d3f5fdf2f9fcf3fffff8
fffff8f6f6eee6e6dee0e0d8dbdcd4cacdc4b2b8aca9b4a6808e7d6173636a8370
819e8a87aa9480a6917aa18c80a5939cbdacc3ddd0e4f8edf8fffdfcfffdfcfbf9
fcf6f6fffdfafdf5f2ece9e4ddded8ced5cdb3bfb58496885a7161536e5d62816f
50735f587e69658d7578a088577f67466c574b6a5ba2baadecfff7f6fffaeff6ef
fefffbfffffbf8f7f3fdfcf8eeefead6ddd5afbfb47c94865776665c816f789f8c
83aa97779c8a91b3a2b5d4c4e9fff3effff7f0fff5dfece2c5d1c793a09665776b
63796c7a95868cab9b91b3a298b4a6c4d1caf3f7f6fffffffffffdfafaf8fafcf7
fbfffadae7dd748a7d5b77687594846281716e887b667c70b0c1b7ecf6eef8f7f3
fffefbfcfffbe6f6ec8fa79a6d8d7e61837360857476968786a294b0c4b9e2efe6
fbfffbfbfdf8faf9f5fffffdfffffff6f7f9fcffffc9cfcb99a49e87948a8a978d
c6d4c7f4fff5f4fff5f6fff8f9fff9fcfefdfffdfefffcfffffcfffffdfefefefc
fdfffcfcfefbfcfefbf9fefaf9fefaf8fefafafffbfafffbfafffbfafffbfcfefb
fcfefbfdfdfbfdfdfbffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefefefefefdfdfd
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffcfffff8fffd
f5fffdf5fffdf5fffdf5fffdf5fffdf7fffdf7fffdf9fffdfbfffdfcfffdfffffd
fffffdfffefdfffdfdfffdfdfdfdfdfbfcfefdfdfdfefefefbfbfbf8f8f8f9fbf8
fefffdfbfffbf9fffbecf7eff5fffaaec2b697af9f91ac9d89aa9587b0908cb895
87af8d719275536b51899b85ecf9e7f4fcedf3fbeceaf2e5e6f2e6f2fff5a6baae
7b9385839f907da08c5c876b58856469947688af9291b39a7d9a846c8570697e6d
afbfb2e0ece2fbfffafcfffbf2f3eef1f0ece4e3dfcecfc9cfd7ca99a796627361
586d5a5b7761708d777fa1895e80685d7d66536f597f9481d1dfcef1f9ead9dbce
c9c7bbd1d2c4b9c2adacbca297a68f6f81695d705a70866f6b836d3d564153705c
70907b84a59289ac98b4d9c7628976385f4c547e6a709782709681678875577462
5d7464889a8ccedacefbfff8fefff8fafbf3fcfcf4fffef7f5f2ebe0ddd6d8d5ce
dbdbd3bcbfb4b3bbac899788576c5b59746183a48f8fb6a17ba58f7ea59289ae9c
a2c1b2c4dccfe3f3e9f7fff9fefffdfefaf7f7efedfff9f6f6f1eddddcd7d2d5ce
c9d3caaab7ad7f9183617969496654547562537962517b63739f867fab9248725a
456a5851706197afa2e8f9eff8fffbfcfffbfffffbfefaf7fffefbf3f2eee4e9e2
d1ded4a2b8ab6a89795678675d847181ac9885af9b85aa9887a897c9e4d5e3f7eb
f4fff7f7fff9ebf7edbbc8be7f8f8463776b6f8a7b87a8978db2a08aa999a4b5ab
e3ede5fcfffbfefffbfffffbfefffbfbfffae9f6ec869c8f6a857684a3936f8e7e
658173627c6f83998dd2dfd6f8f9f4fffffbfcfffbeaf7eeb6ccc0809f905e8070
557a697297866d8d7e8ca699cedfd5f8fffbfcfffbfaf9f5fffefcf2f2f2fcffff
f1f7f5dae3deafbcb580908579897e8c9e90f1fff5f2fff5f5fff8f9fff9fcfefd
fefcfdfffcfffffdfefffefcfefefcfcfefbfafffbfafffbf8fefaf8fefaf6fffa
f7fffbf9fffbf9fffbfafffbfafffbfcfefbfdfdfbfdfdfbffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefefefefefefefefeffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffdfdfdf8f8f8f7f7f7fdfdfd
fffffffbfbfbe6e6e6d1d5d4d1dcd6e1f1e7e4f5ebe5f6eceffff6f0fff7ecfdf3
f4fffbf2fff6f8fffbfbfffbfefffbfdfef9fbf7f4fcf7f4fef8f8fffffffeffff
fffffffffffffffffffffffffffffdfefffdfefffdfbfffbf6fff8f5fff9e2f2e8
abbfb38ea4989fbcaa749d7f81ae8d98c1a180a3855c765b6376609fae99edf8e7
e6eedfeff7eaeefaeeeaf8ebf1fff7abc1b4839b8e8dac9a71987d5883654f785a
6f96798eb29688aa917290785a735e6d7f6facbaade6f0e5fcfffafbfcf7f0efeb
e6e2e1dfdedad0d6cacdd8c8a1af9e6a7d6a536c57516e585e8068799b83668870
63806a5b725e7c8d7be3ebdceef2e4d6d6cad2d3c5ced5c3b7c3adbac6b0b2c0a9
76856e5d6f596a8069516953415d4663806a71927d8aad998db2a0a0c7b45f8674
5178653e6852779e8985a894577664516c5b586f5f768679dae6daf7fff4fefff8
fffff8fcf9f2f9f4eef8f1ebebe4ded9d4ced5d2c9d1d4c9c5d0c294a5955c7562
5f7f6a749a856c937e628c767ca38e95b6a596b1a2c2d6caf3fff6f7fef7fffffb
fffbf8fffefbfffefbf0efebdfe1dce0e7dfcdd9cf8c9c916a7f70677f6f3e5e49
567c656e98803f6b5069977b81af954e78646486755b776873897ceffcf2f4fbf3
fbfcf6fffffafffffaf1f0ebe4e9e3dde8e0c1d5ca90aa9d678677547967608b77
77a38c7fa6917899868da897c4dbcbf0fff3f7fff8ebf7ebddebdeabbbae718677
607b6a76958386a99586a7947e94879ba89edae4dbfcfffafefffaf6f9f2f8fdf7
f2fdf5b4c8bd7f998c96b5a689a99a597868526e5f657d6f99ab9ffcfffafefffa
f5fcf4f7fffae8fcf08ca7986584745072616186747698877d9c8c8ea698c2d2c7
f8fff7fffffafffffbfffffffcfffffbffffd8e3dd9baaa37f91857d9185758a7b
aabfb0edfff1f1fef5f9fffbf6faf9f6f6f6fdf8fcfffefffffffdfffffbfafcf7
f9fef8f7fef7f9fffbf3fef6b1bcb4b2bdb5eef9f1eff9f1f6fdf6fcfffbf8faf5
fafbf6fffffdffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefefdfdfdffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffafafafcfcfcfffffffffffffffffff5f5f5d3d3d3b5bab6aeb9b390a096
a3b4aabecfc5b8ccc1d0e4d9f1fffbf2fffbf0fff7f5fffbf8fffbfbfffbfafcf7
fdfcf8fffdfafffefbfffffffefffffffffffffffffffffffffffffffffdfffffd
fffffdfbfdfaf4faf6f7fff9f8fffdd9e9dfaab9b289a19384ab9076a1838db497
98bb9d819e82627a60697b6599a893f1feecebf8e7f1fdeff4fff5e1f1e4d4e6da
b5c9be8da59583a58d688f745f866b51785b698d718aac917d9d8576927b617864
607262a6b4a5edf7ecf9fcf5fffefafffdfadddcd8d8dbd0d8e0d1cbd8c7acbdab
7b927e4e6a5447675060826a779981718e78627b665a6d5a7b8877ced4c6f2f6e8
d9ddcec0c7b5c2cbb6bbc4afc1cdb7a6b49d63725b54684f70866f5a745b48644d
47675074958075988497bcaa9cc1af7ea592527964476e5972988384a59271907e
6e89786c8172728275d0dcd0f4fcf1fefff8fffff8f8f5eefbf4eef0e9e3dcd5cf
d0ccc3d6d6ccccd2c6bdc9bb9aaf9e5f7a675273607ea48f6b927d759b8685a894
94b3a1a0b6a9bdcfc1e8f5ebf9fff8ebebe9fffffdfffefceeefeaf5f7f2e0e5df
c7cec6bbc7bd9dada06b82724d68554f7159577f655e8a6f59876b5d8b6f8ebaa3
52796446675666817286988cebf7edecf1eafffffafefdf8f6f7f1eef3ede4efe7
cbdbd1a0b6aa7791845e7f6e58826c6b97807da48f7fa08d829f8d9eb5a5cee0d2
f3fff6f7fff8d7e5d8b8cabc99ae9f6b83735d7a6874958289a896839e8b889d8c
b2c3b3ebf5eafcfff8f4f7f0f5faf4f9fffbd0e1d791a99ca0bcaea0bfb07c9b8b
6884755a756673877bcdd9cff8fff7f6fff7eefbf1eefff4b7cdc06f8a7b6e8f7e
5c7e6d698e7c78998878948593a79bdbe8defcfffaf7f8f3fcfefdf7fbfcf8fefc
d9e4de9caba4778b7f788e8179918193aa9ab4c9baf0fff6f8fffbfcfffffbfbfb
fffdfffefafbfffffdfefffbf8fdf7fafffaf6fff8f8fffbecf9f0a6b6ac9fafa5
cbd8cfe9f4ecf7fff9fbfffbf2f7f1fefffbfffffbffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffefefefefefefdfdfdffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffdfdfdfbfbfbfcfcfcffffffffffff
fafafae7e7e7d3d8d4a3aea8a6b6ac97a89e9daea4b1c5ba9eb4a89bb3a6cae2d5
f1fffbeafbf1ebfbf1f8fffbfcfffbf4f6f1fcfbf7fffffbfffffffeffffffffff
fffffffffefffffefffffefffffefffcfafbfbfbfbfbfdfcf9fefafbfffff8fffd
d2ddd991a59a85a5907aa1868aae9490b2978aa88e79937a5f775d637660b2c4ae
e3f4e1e8f9e7e7f8e8e7f5e8f5fff8d7e7dcc3d8c98da89591b19a6b8b745e8067
5b7d6264866b88aa8f82a38864806957705a6f826fafbdaeeaf2e7fefffaf9f8f4
e5e4dfd7dacfcdd3c5cfdacad1dfceb6c9b68aa18d607c6645624c66836d6c8973
6f8873677c694f604e96a392d1dcccdde5d6d8dfcfd2dbc8acb5a2b0bca8c6d4bd
a1b09974866e667a6178907649634a4a664f4d6a5466867188a99680a18eaccfbb
a4cab5537964416450678a7680a18e73907e5d78676b8272798b7dbfcdc0f8fff7
fcfff8fbfbf3fffef7fef9f3ede8e2ddd6cee1ded5d4d6cbced6c9cbd9ca9cb3a1
6a857261816c7596817396807596819bbba69ab5a48da492c0d5c6e7f7ecf4fdf8
fcfffdfafffbfbfffceff1ece1e3dee1e6dfd3ddd4c5d1c5889a8c60776557745e
486b536c9479608d704e7a5f6791797ea68e5c7f6b5f7c6a586f5f849487dae4d9
f0f6ecfefffafbfff9f1f6f0e1ebe3d2dfd6bacbc196aa9f748f805a806b577f67
668c7580a18c8aa7938aa592a4bba9c7dccbf0fff2e1f3e3d2e4d4b8cdbc859c8a
566f5c5b7663819e8a7e9e877a9781899e8bb9c7b8ecf4e9fafff8f6fbf5f7fff9
effef7a4b9b099b3a69bb7a98ca8997c98895f7a695d746496a89cceded3f3fff6
f2fff5ebf8eee3f3e896aa9e89a4956889785e806f6b8d7c6c8d7c728a7cb5c7bb
f7fff8f4f9f3fbfdfcf4f8f9f4faf8dce7e1a1b2aa758b7e728a7c7b9685839b8b
879e8eddeee4f7fffbfbfffffefffffffbfff9f5f6fffefcfcfef9fafff9fbfffb
f5fff8f7fffbe0f1e798a99f8b9c92a6b7adcfdcd3f7fffafafffaf7fcf6fefffb
fffffbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffefefefefefefdfdfdffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffdfdfdf6f6f6f6f6f6fdfdfdfffffffffffffefffdcfd9d1b0bdb4aabab0
b2c3b9a4b8ad95ada090aa9d8ca699b5cdc0dcf2e6f4fffbf1fff7f0faf2fcfffb
fefffbfdfef9fefffdfefffffffffffffffffffefffffefffffefffffefffffcfd
fffefffffffffbfdfcf1f5f4fbfffff2fbf8c3d2cb95b09f8cac978eae9785a58d
81a189809e846c896d657f64637b61b2c8b1d8ebd7e4f5e3ebf9eaeefaeee5f1e5
f7fff8c8ddce9bb4a192ab986d89735b7b6363856a5b7d627ea08575967b739177
657d67718471aebaace3ebe0f5f8f1f8f9f1eaede2d7dbcdced6c7ced9c9cfddcc
c7dac78da4903d5641516d5767836d7089746c836f53685561746194a794dbe9d8
e6eedfe0e6d8c4cdbcb8c1aeb6c2aeb8c6afa9b99f7c8e74566d517b937959735a
3b5740506d5766836f89a9948eaf9cafd0bdafd2be7ea18d4b6e5a5a7b68749582
698876637e6d4b6252738879bac8bbf5fff4fcfff8fafbf3f8f8f0fffff8f6f2e9
e4e0d7dbdbd1d5d8cdd1dcced8e6d7aabfae59725f637e6b73937e6f8f7a81a18c
90ad9983a08c9ab5a2c1d8c8f5fffdf2fdf9f5fffcf9fffde9eeeae6ebe5f2f7f0
dadfd8c8d2c7b0beaf73867368816c517159597d63739b80618c7040684e658b74
8caf996c8c77657d6d62776889998cc8d4c8f6fff7f6fff7eef5eedce6ded6e1d9
d1dcd4b7c4bb94a89c5e7d6b4f725c597c667b9c878eae998aa7938ba6939ab3a0
bcd1c0e9feede4f9e8c0d5c4a4b9a8728776536857667f6a789c827da187728e77
7e917ebbc7b9eef5edf7fcf6f2f9f2f2fff8b0c4bb93aaa0829e90819d8e89a495
748c7c5e76666f877991a79ae1f3e7f7fffae6f0e7eefaf0cbd8ce90a49885a192
5e806f5d82706f918076928399b1a3d6e6dbf5fff7fcfffff7fbfcf1f7f5dfece5
b2c3bb81998b718c7d7895837d9a88849c8cb3c7bcedfaf1f3f9f7fefffff7f2f6
fdf9fafcfbf9fbfdf8fbfffaf9fffbf5fff9f4fffad6eadf8aa09484988d96aa9f
a8b8aee2efe6eaf4ecfcfffbfcfef9fffffbfffffdffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fefefefefefefdfdfdffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffdfffcf6fdf6cfd9d0b2bfb5a7b7aca1b5a9a6beb0a0bcad8ba798829e8f
9fbaabcce2d5f1fff7f7fffaf9fffaf9fff8fcfffbfcfffdfefffdfffffdfffffd
fffefffffefffffdfffffdfffffdfffffcfdfffdfffffefff2f2f4f9fafcfcffff
f0fbf7d1e2d8a6beb093ab9b89a69281a1897092775e8163678a6c597a5d648165
aec6aee3f6e2e9f7e6e2eddff9fff3f4fcf1f7fff9daeadf96ab9c8aa18f75917a
54755a63856a587d5e76997b62836668866a677f67647563a5b1a3f1fceefcfff6
f5f9ebe8ecdedde3d5d1d9caccd7c7d6e4d3bccdbb8396834f6451546b5767806b
6b846f67806b516d576a867094a996d6e0d5e0e6dcd5ddd0cbd3c4bcc8b4b7c5ae
b9c9afa4b69c899d82546b4f72896d5b7359435d44516d5657735d7794808aa795
b9d8c6bfe0cd8aab98587b67587b676e8f7c71907e6683714f6a596e8374c0d0c3
f6fff6f5fdf2f6f9f0fffff8fffef8e9e4dee4e1dae5e5ddd7dacfd1d9ccc5d1c3
a4b5a5637867637c696c88725976605d7d6685a78f8eb1998aa997b9d0c6ebfef8
f1fffbf0fdf6f9fffdf2f7f1e7ece5e6ebe4ced4cac1ccbe8e9c8b697e6b607c65
4b6b5364886c70977c62896e4b6e565f816980a08974917d77927f6e8575829788
c3d3c8dfece2f2fdf5eaf4ecdee5ded6ddd6c9cfcbb7c2ba6e867660806b60806b
6d8d787b9b8683a38e8aa7938fac9892ab98c3dcc9dff4e3cfe4d3b8c9b997a898
717d6f5065526b92757ba78674967d68816c8a9889b8c2b9dfe6dffbfffde5f0ec
c7d8d0a6bbb2809a8d7a95868ca798849c8c6681705776646b8a78b8cfbff4fff5
f3fbf0e6ece2e3ebe09dab9e94ac9c7392805e846f688e797d9e8b8fac9ab2c9b9
daeadffbfffffafeffeff8f5e4f1eac6dad198b3a479958672917f6e8d7b86a190
8fa599d1e1d7f5fefbfefffffcf7fbfffefffbfaf6fbfef7fcfffaf9fffaf6fff9
f2fff8d2e8db859d8f8ba19492a89b91a397b1beb4e7f1e8fcfffaf3f6effffffb
fffffdffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefefefefefdfdfdffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfcfcf6f6f6f1f3f0fbfffafbfffad9e5dbacbcb1
a7bbaf95ad9f829e8f92b1a18ead9d7591827e9688b3c9bce8f8edf7fffaf7fff8
fbfffafcfffdfcfffdfffffdfffffdfffefffffefffffdfffffdfffffdfffcf6f8
fef8fcfffdfffffefffefefffefffffbfffff8fffdcdddd3a3b7ab809b8a74947d
71957b62896c628b6b668e6c44674769866aacc2abeefbe9f3fbecfefff3f0f1e9
f9fef8eaf4ece7f4eab2c4b68ba48f809e86597c5e557a595e8362577c5b658669
668367536954697a68adbbaae0ebdbf7fbedeef2e4e9eddfdfe5d7d5ddced4dfcf
d5e2d1cddbca829381455a47536a566f8b75718e784f6f5852745c4b665396a399
d8dfd7dbe3d8cdd5c8d0dbcac5d1bdb9c7aeb7c7acb4c7ab7c9074576b4f758c70
647c62375138455d47647d687c97849bb8a6a6c5b3b9dac7a4c7b3587b67476d58
789b876e8f7c607f6d526d5c667d6dafbfb2f8fff8f9fff8fbfef5fffff8fffcf6
ede8e2e3e0d9e3e3d9cfd1c6c7cdc1e3eee0a9b7a85c6e5e647b67607d674a6c54
70967d88b09680a6917c9a8ebcd3cde3f8f1f4fffff7fffcf2f9f2f5f7f2eaede4
e4e7dec3c9bdafbaaa667764647c6658745b42634863856a72947b7b9d84577961
597b6372937e6a8a7584a18f6d857582988bb8cabeeefbf2f9fffbe9eee8d6d8d3
d0d0ceced3cd9bad9f829b88627d6a55725e64846f82a28d8eaf9a8cac9788a591
89a491c2d9c7e1f3e3beccbdaeb9ab9ea699617260517a5a61936e7ca38687a38d
839585889289b6bdb6f2f8f4edf8f4e8f7f2c6dad192aa9d7b9386879f918ea595
7f9a89527863678d788aa292c5d3c6fcfff8e5e6dee0e1d9bbc3b896a89a8daa98
7194805d846f6e947f87a89599b6a4acc0b4e8f1eef6fafbf2fbf8e6f5eed4e9e0
b0cbbc87a696779885607f6d7693817c9286abbbb1f9fffffcfefdfffdfffffdfe
fcfbf7fcfff8fcfffaf9fffaf4fff9f1fff9d4eadd879f9191a99b8da3968fa397
839388e2ece3f6fbf4f7faf3fbfcf7fffffdffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefefdfdfdffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfcfcfcfcfcfcfcfcfbfbfbfafafafbfbfbfcfcfc
fefefcfefffbeef3ecf9fffaeefbf1afc3b795ad9f9ab6a78baa9a8dac9c8fae9e
7d98896b837593a599d8e8ddf6fff8e6f0e7fbfffdfcfffdfffffdfffffdfffeff
fffefffffdfffffcfffffcfffffafefdf7fbfffdfffffefffffefffbfafffeffff
fbffffeef9f5d2e2d89ab2a47a9a85789f846a9577628f6e66926f537b59466748
6d856bc0cdb9ecf3e3f6f6eafaf7f0e4e4e2fcfffff5fff7e8f8edc6ddcb9cbaa2
85a88a5f87654b73515e86636489685f80635c765d5268536879669aa796e3e9db
f4f8eaf5f9ebe9eddfe0e4d6d6dcced0d8c9d1dccccddbca8396835a715d57745e
5678604c72594c745a4a6b56546459adb4add8dfd7d8e2d7cdd8c8bfcbb7c2d0b7
c4d4b9a6b99dadc2a38ea3845c73565a71557e967c5369525d755f5e776495b09f
94b19faac9b7cef1dda1c7b2608772436a555379646d907c607f6d415c4b657a6b
c3d3c6f7fff8f5fdf2fbfbf3fffef8f9f4eee7e2dcece8dfe3e0d7d7d7cde0e3d8
e3ebdc8d9b8a687d6a708c7663876d5a82676a977a85af977c9e908ba9a1b8d2c9
e4f7f1e6f3ecf0f7f0fefffbe7e8e0edeee6d4d7cccad2c3808d7b617460698169
49654c54725870907881a38aa3c5ac56785f61836b688a72698a757f9f8a6a8574
8fa598c4d4caecf6eef4f6f1e5e4e0dcd6d6d8d7d3c0ccc09bb09f6d8673526d5a
5c7c6778998486a99383a69084a5907e9b87a4bdaac9dbcbc3cfc1bec4b8babcb1
99a7964a7655477e576d987a90b0988ea090869288a5aca5cdd3cff2fbf8f4fffe
d9ede4b1c9bc8ea6997f97898ca39391ae9a67917b608a7467847299a99ce3e6dd
f5f2ebe9e6dfdcdfd6a5b3a69bb3a386a995688f7a5c836e7399848bac998fa799
bcc5c2e8ecedf6fffce8f7f0daefe6bdd9ca97b8a785a8946c8d7a66857370887b
8b9c92d6dfdcfafcfbfffdfffdf9fafefdf9fdfff9fbfffaf8fffaf4fff9f2fffa
d8f0e28ca79887a29388a09290a498809085c5d1c7f5fcf4fdfff9f9faf5fffffd
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefefefefefdfdfdffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffefffffefffffefffffefffffefffffefffffeffffffffffffffffffff
fffffffffffffdfffefcfefdfefffffefffffffffbf9fbf6f0f5eff4fef5eefef3
c1d5c99cb4a69cb9a78dac9a92b19f97b4a088a5916e87746f8875aec5b3f4fff8
f8fffafbfffbfcfffbfcfffdfffffdfffffffffefffffefffdf7fbfffdfffffdff
faf5fbfef9fff7f4fbf9f6fdfffefff5f9faf9fffff7fffdddf1e5a2bdac72947c
5b8267679070739c7a62876558795a607a5d66785ebdc9b3f3fbe6eceee1fffffd
e9e9ebe4e8e7f1faf5f7fffad8edde9fbba57f9d8552735853755a698c6e66876a
4d6b4f567357678168566c559ead9adfeadaf8fff1e3eadadfe3d4e1e5d6d8dccd
d2d9c9cfd8c7deebda91a491516a5553705c6a8b764a7059486b57647a6d5e6e64
96a399deecdfdae7d6cad6c2d2dec8b8c4acc5d2b8c4d2b8abbba094a78b5c7054
71886c61785e5068504f68535e7764728d7a9cbba9b9dac7ccf1dfbfe6d36d9481
4b725f5f84726f907f637f704b63535b7061a9bbadf7fff8fbfff7f6f6eefffff8
fffff8ebe6e0e5e0dae5e0dacecec4d9dcd1d8e0d37c8d7d5d7460779780598065
4d785c6f998193b8a78fafa285a195b1c9bceafaf0f1fcf4edf2ebeef1e8e4e5dd
eff2e7d8ded2a4af9f62705f6c7f6c6d856f546d577c9a8277977f8faf97badcc3
61836b5376606c8f7b6d8e7b779384778f8191a59acad7cdf4fbf3f6f9f2e4e3de
d5d6cec2c8bcadbaa98d9e8e6b826e5a776360826a71978081a78e779d8698baa2
93b09c9bb29ec9d7c8cad2c3bbbdb2ccd9c7688d6e497753537a5d739179849b89
9aaa9dafbcb2afbcb3d9e8e1e6f7efe1f5ead4eadeafc3b784968885958893aa98
85ad95507c63577865869d8bb6c2b6fefff8fbfcf4eaede4bdc5baa2b0a39ab1a1
85a290597c685f857083a99489a89894a59bd8e3dbf8fffdeaf7eedcede3c5ddd0
a5c1b294b3a387a897648574637f71798f83a0ada6f9fefafffffdfaf6f5fffffd
fdfffafbfffaf9fffbf7fffaf5fffbddf1e593ab9d7b968785a0918aa09393a79b
a0b0a5f8fffafbfffaf8fdf7fffffdffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefffefeff
fdfdffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffefffffdfdfffcfdfffafbfdf4f5fffdfd
fffdfdfaf6f7fcfafbfffffffffffffefffffefffffcfffffbfffff7fbfcf7f8fa
fffefffffcfbf9f8f6fdfffafbfffbeefaf0cadcceacc3b197b39d8fad958dae93
92b69a8eb3947aa18268916f65876cd1e8d6e8f8ebf6fff9f2fff5f2fcf4f9fffd
fcfffdfdfffef6f6f8fffefffffefffffdfffffcfffbf3fefef6fffffdfffcffff
f3fefaf8fffdf5fffbd7e9dd9ab19f77907b7490798ba88c708d6f6d8a6b4f6d4b
536e4b76906dc0d8b6e6f6dcf5f7f2eceaeff4f2f7fdfcfffcfdfffcfffff4fdfa
d4e1da8b9b91677c6d637e6b6989715c7f615e8664618b674d72514f6b52889e89
dff2deedfce7f0f9e6dce0cfdaddccdbdcccdfe0d0d4d6c8dbe3d4a4b0a2465649
51675a7a95865978683a5b485c7b696782719eb3a2d6e4d3d3decdd3dac8d5d8c7
d2d5c2c6c9b4bfc4aec4ceb595a58a6a7e62748b6f667e6449634a425b4568846e
8ca99593b2a2b9d9cad7f9ebbfe3d5779b8f4062546a8a7d5e7d6e4a6657536e5d
526b58a6bbaaeffff2f8fff9fbfffaecefe8fefdf8f6f3eed7d2ceded9d5d0cfca
d8dbd2dae2d78d9e8e546b5763806a668a705f856c7c9f8998b9a683a290748c7c
cadfd0f7fff8e4f0e4f9fff6e7ede3e3e8e1dde4dcd5dfd695a197626f656d7e74
64796a6b846e6f8b726f8b748fac96a8c8b36687766080716b8b7c658475648072
7c94877b9282c3d5c5ebfceae1f0dde2ebdad6d7c9c6c7b9bac0b28d9c8969806c
6181695f856c77a2867aa58a8cb49988ab937c9a8299ae9bcfdecbdee6d7c4cfbe
abbea8718b725872595a735d7a9680819d879dbaa6afccb89dbaa8daf5e4e9fff1
eafff0d4e2d59ba59a90968c919d8f95b5a06b9379547a636f927a8aa793d1e8d6
effdeee8eee2ccccc4c8c5bebbbcb4a1aba0788c805b7c6b65907c85b19a9bbba4
abc2aee3f4e4f6fff6f0fcf2d5e2d9cce0d7aec8bd93b3a865897b6c9082668677
7b9185d2dfd5fefffafffffbfafcfbf8fcfdf9fbfafefffffefffdfbfffdeaf5ed
aebfb57e96897e9a8c74908284a0928fa99ccee4d8f5fffbecf7f1feffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefdfffdfcfffcfbfffcfbffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeff
fffcfbfffdfdfffdfdf9f5f4fffbfafffefdfffffdfffefff9f9f9f9f9f9fafbfd
fcfefdfcfffffcfffffcfffffffffffffdfffffbfdfaf6f7fcfbf9fefffbf7fef6
e1ede1ccdece9ab19d9ab69f8eaf9282a78689b29094c09c7fad885f8866648069
a2b7a6dff1e3f4fff8f5fffaf7fffbf6fff9eef7f2f6faf9fafbfdfffefffffdff
fffdfffffcfffffbfffffdfffcfffff9fffff7fffdf7fffcf7fffbe8f8ebaebfaf
7285717f957e637b6168836454725065835d54744b64845bc6dfc1f9fef7f1eff2
f2f0f5fbf9fefdfafffdfafff9fafff1f5f8e9f2f19eada6546a5d53705a709478
618a6849775257835f5f816655715a778f77b8cbb5f9ffeff2f7e3dadbc9f0efdd
d0cdbed0cec1d4d6c9d1d7cba2aea255655a44584f6d877a5a7d69385e4764846f
738c7993a492dce7d7dde4d4cdcfc1d2d3c3c6c7b5bcbfaac2cab3becbb18a9a7f
5e725670876b597157526c53657e687c978484a09194b3a4badacdd9faefc7e8df
8daea34c6c5f59786965817253705e5873604c6552869b8ce8faeef3fff6f9fffb
eff1ecedece8faf5f2e7e2dfdfdcd7d7d6d1cdd3c9d4ded38c9e8e546b57718e78
5d7d6647695173957d88a8917c9882899e8dcadcccf7fff8e4f0e4eaf4ebe5ece4
e1ebe3e3ede5c6cfca79847e54605c7a8b8159715b657f6685a18a84a08aafccba
a8c7b77594856181747290847a998a6d887992ad9c90a793cde5cfedffecd2dfcb
d9d7cacac6babdbfb1a8b3a28ea18d728e775b7f655b83686a95797faa8e85ac91
7c9c848ba48eb3c6b2ceddcacedbc9b2bfaba9b8a37689756179635e7a6374947c
799c8495b8a0aacbb699b9a4e0f9e6f4fff6d8e4d8bec4ba91928a8a928593ac97
7a9d85668e7450785e84aa9190b099c7dccbf9fff6ebe8e1d4cdc7bdb6b0ababa3
8d9a906c8879638e7a70a0888eb59aa9c7adbbd1bcf0feefecf4e9e8f2eabdcac3
b4c9c28eada57ea497658e7e6d9281769284a5b7a9f3fbf0f9fcf5f9fdfcf6fbfe
f5f6f8fcfcfefffdfefefffff1f7f3b7c7bd7e9488728e806f8f8079998a8fae9f
bed8cbf1fffcf7fffdfcffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffefffffefffefdfffdfcfffcfbfffcfbff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefffffcfffdfcfffbfcfffbfcfffbf7fcf6fcfffb
fefffbfefffdf9fbf8fbfdfafffffffffffdfffffffffffffffefffdfbfefffdff
fffbfdfbf7f8f9f8f6fcfef9fcfffaf7fff6effff0d5ead7aac3ad89a58c88a98c
8caf9182aa8882aa8890b395768f79667b686e8372a3b5a7dfefe2f7fffaf8fffb
f7fffbfbfffffcfffffdfefffbfafffcfbfffffcfffffdfffffdfffcfffffbffff
fbfffff0f9f4f9fffbf8fffae2f0e3afc0ae6d836e70886e6b8568627f6052704e
3e5c3864845f768f71c1cbc0edefecfdfdfdefefeff0f0f2fdfefffefffff5fbfb
f9ffffe7f4edb8ccc0748c7c45654e577b5f688f70547b5c597b6056745c637d64
879a84bccab3f3fbe6e9ecd9d9dac8d0cebfddded0d5d7cadce2d6e1ebe09eaba1
51625a465e516685754869564a675359725f6174619caa99dfead9dbe2d2d6dac9
d0d5c1ccd1bbb7bfa8c3cdb4b7c4aa7b896f72846a6f866c59735a4f685265816b
7b988679988895b5a8cfefe2bfdfd4dffff48ba99d415f53648072648071445f4e
546c5c637a6a6e8374e7f9ebf5fff8f2f9f1f2f3edf7f4eff2efeae8e5e0d6d5d0
d5d8cfdfe9decfddce869b8a526957627e684b6d555a7c6472927b8aa690738a78
8d9f8fe6f4e7f6fff6eef8efe9f0e8f0f7f0e3ede5dbe4dfacb7b166716b6b7b70
6a7f6c506a51819d86809c867f9c8ab2d1c1b9d8c9809f905c7b6c749384728d7e
7a95848ea5919ab29cd3e9d2effce8dee0d2d9d7cac7cbbcbfcab9a7b8a57f9781
62826a51755b577e636f967b82a68c7f9f877d998291a993b5c8b4d0e1cec5d2be
c0cdb99bad977b917a536c565c7a626789717c9e869cbea688a891abc4b1eaffee
f0feefccd4c7adb0a7848f817b927e84a48c73967e648a7160866d6c8e769cb3a1
e9f7e8fefff8e2dfd8c2bfb8b2b5ac9faca27f9a8b658c795e8a7381a88d93b499
a7bfa9c7d8c8f6fff5e5efe7c2cfc8b6cac195b0a790b1a67096876f94836f8b7d
809586cbd7cbf2f9f1fbfffffafffff2f3f5f4f5f7fbfbfbfefffff5fbf7c5d2cb
899f936e8a7c7090817292838cab9ca5bfb2e1f7ebf5fffdfcffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeff
fffefffefdfffdfcfffcfbfffcfbffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffcfffdf5fff9
deeee3e0f0e6ecfcf1edfaf1f7fff9f9fffbfbfffbf5faf4f9fbf6fcfef9fffffb
fffffbfffffbfffefdfffdfcfffcfffffbfffcfafbfafafafbfdfafcfffbf9fffa
f8fff8f5fff6e4f7e4bed6c096b097819d8485a3898eaf9293b19790a8928ba08d
6f8471556a596f8171b3c3b6e8f5ebf8fffbf4fdf8f7fdf9f8fcfbfbfffefeffff
fefffffefdfffcfbfffefffffefffff8fcfdf5f9f8f0f6f2edf7eff3fff3f7fff6
bbceba697f68738b716680635873545d7a5b4b6947617a5d717f6ebfc6beeaefe8
e9eee8f2f7f3fbfffef5f9f8f0f6f4f9fffff0fdf6f5fffbd7ebdf778f7f4a6753
5a7a635f81684f6f5756745c6d8670728871707f6acbd4bff2f7e3e4e5d3dfe0d0
e2e3d3dddfd2d3d9cddfe9deedf9efafbcb344584d4d685963806e506b58546d5a
536857627562b1c0add5e2d0e5f1ddd7e0cdd8e1ccbfc7b0afb7a0c5cdb5b2baa2
83907662765b61795f566e56526b55627d6a75928086a59699b9accaeaddd2f2e7
d3f1e583a1954b675b5e786b5f776950685859746355705f6d8474daecdeecf8ec
fafff8f2f3ede9e8e3eae9e4dad9d4d8dbd2cdd5cae1ede1c9d7ca6c7e70586f5d
61816a597b6355755e7e9a848ea5937c9180a7b7aae7f5e8f6fff7e3eae2edf4ed
e5ece5d5dfd7d2dbd69ea7a25e6b616f826f5a725c627b6674907a637e6d83a08e
d1eddebcdbcc6e8d7e5874656a8574627d6a8ca3918299859caf9be8f7e2f1f5e6
eef0e2ccd0c1bfc8b7b0bfac97aa96839c865e7c644f6f5760806877977f80a088
7a98807b97809bb49ec1d7c2dbe8d4b4c1adbac9b49fb29c6c846e4d69526a8a73
688a727c9c8594b19b88a18ebbd0bff1fff2dfebddc8d0c5a3aea06a7d6a728e77
7d9d8688aa9252755d65876f87a28faabcacf6fff5eff2e9d9dcd3bfc5bba7b4aa
8da5977192815a816c6b93787b9f839ab6a0abbdade8f4e8e5efe6dbe6dec2d3cb
a6c0b58cac9f84a6986a8c7c67867679918399ab9de8f5ebf8fffdf9fffff5f9fa
f4f5f7fbfbfbfefffff6fcf8cfdcd59ab0a47490827090817292837f9e8f8ea89b
c2d8ccf5fffbfcfffdffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffefffffefffefdfffdfcfffcfbfffcfbffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffbfffde8fcf0b1ccbba1bcadb5cdbdbfd5c8cbe0d1e4f4e9
effcf2f9fffafbfffafefffafdfef8fcfbf6fefbf6fffaf6fffbf8faf8f9fdfbfe
fefefefefefefbfdfaf9fef8fafffaf9fffaf8fff8f7fff6ebfceccde0cdb1c6b3
a1b7a292a893859b868ea48f97ad9897ad987d927f5b6e5b58695987978abfccc2
f5fff7f5fff7f3fcf7f4faf6f6faf9f8fcfbfcfdfffefffffffefff6f4f7f4f4f6
fffffffefffdf3f8f2f5fff6f8fff8edfbeccedfcd748a75617961708a6f617e62
577456536d52536451788675a6b2a4d9e5d9f9fffaf5fff7e7f0ebf4fdfaf9ffff
f0fbf7ecf9f2f5fffde6f7ed9aaea25b7164516c5b67846e516f57516d566a8069
6476608b9783b4bca7f1f6e2ecefded8dbcadbdfd1dbe1d5d6ded3ecf6ede7f2ea
adbdb3586e61526a5a667e6e526b58516856637a66687e6997ad98dff1dbd7e6d1
d3dfc9d5dfc7c0c5afb9bca7c8c7b2abb0995b6b50687f636a82684e684f415d47
617e6a7c9b8b769586acccbfc5e5d8ddfbf1daf8ec8aa69a4963585b73665c7768
52715f59796456715e6d8472dcedddeffbeffbfff8edf0e7f3f4ece2e3dbd4d5cf
e1e4ddcdd4ccd1dbd2cfd9d0617365516e5a55775f5777605e7b6587a08d8da291
7e8e819fada0ebf5eae6f0e5e5ece4ebf2eadde4dcd5dcd5c5ccc589958b50614f
7389745067535d7661819c8b77948291ad9ecde9dabcd8c96e8a7b5671606c8774
637a68869d898295819baa97ebf4e3f3f7e8d1d8c8bec7b6b8c3b2b4c3b0a7b8a5
788e795d755f5c755f6a866f7d9b837d9d8577977f86a68ea4c0a9d4e3cec5d1bd
c8d5c1afc1ab94aa936a846b65836b5b7b636d8a74809d8794ad98879e8abed0c0
f5fff6d8e4d6cfdbcd7a8b796076617d998280a0887b9d855e806876967f78917c
ccddcdebf7e9f2faefced8cdaab8ab97ac9d829d8c688974567e636f987a84a48d
abc2b0b6c4b7edf9efeef8f0d8e5dcb8cec299b3a684a4956b8b7c6d8e7d738f80
809b8acbe1d4f3fffbf8fffffbfffff8fcfbfdfffefefffff5fbf7d7e4dda1b5aa
799386698879719182708f7f85a091aac0b3f5fffafcfffdffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffeff
fefdfffdfcfffcfbfffcfbffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffff9fffdf0fffab2d1bf
87a694809d8b829d8c8ca393a1b6a7b4c6b8deecdfe6f2e4f3fbf0fcfff6fefff6
fffff6fffff6fffffaf9f9f7fbfcfefefffffefffffdfffcf7fcf8f5faf4f3faf3
fbfffaeef8edeef8edf8fff6f1fdefcad6c8a9b5a79eac9b92a5917d937e809681
94aa958fa28f6c7f6c6071616e7e71a8b6a9c9d5cbedf9eff8fffbf7fff9f1fbf3
f8fefafcfffffdfbfefef9fffffbfffffefffffffffefffdfbfffbf9fffaf8fff8
f5fff4ddf0dd879c895a725c728b75536d5459735a566d535a6d576e7f6ca1b2a0
dceadbf3fff3f1fcf4f1faf5edf6f1f5fefbf5fefbeef9f5f8fffff6fffeb0bfb8
52665b516c5b65826c57735d546c566d806a72816c75816bbfc7b2e9eddce6ead9
dee2d3dae0d2d8ded2d0d8cddbe2daf4fff6acbcb15b7061445b4b58706058715e
4c6754506c565f7b64a0b8a2d6e9d3d3e2cbd7e0cbd9dcc7c3c2aec7c2aec3c2ad
96a389667a5e556c505c745a4f685246624c5d7a687493837d9c8dbadacdd9f7eb
e0fbf2daf4e987a196455c52637d705576634669535e7e6967826f6f8674daebdb
edf9ebfbfff8f8fef4e8ebe2edeee8e8e9e3cbcdc8d9dbd6e3e8e2afbbb167826f
52745c61816a57745e627b68849b898092847f8f82b2beb2f3fdf2eff6eee2e9e1
e4ebe3d8dfd7d5dcd4bfc9be62705f6a7d695a6f5c59705e849d8a8da897688374
9cb8a9cde9dab5d2c0748f7e6079665e7563718673889b8870816eb1bcabd9e2d1
e7f0dfd7e2d1c3ccbbb7c2b1b3beada2af9d7d8e7b687b67617963728e777e9e86
7b9f857da4898dad95b3c5afe4f0dcc6d3bfaec0aaafc2ac9cb49c617a645d7962
65816b738f7989a28d7f96828ca190d3e5d5f3fff5dceddba3b29f7f8e7b627863
738f788eae976a8c7457796174917b9ab19fd2e4d4f3fff4dceaddb9c7baa6b6a9
95aa9b7f9a87567e635f8a6e7fa18994b09aa1b3a3d7e3d7f5fff6e5f1e7c8d9cf
b7cdc17f9b8d799889799a8965867581a28fa2beafd4e8dff5fffff8fffffbffff
fefffffbfdfcf2f8f4deebe49bafa6748e8162817269897a6b877885a08f9fb6a6
f5fffafcfffdffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffefffffefffefdfffdfcfffcfbfffcfbffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffbfffdf1fff8dbf8e4abc8b4829d8a738c79718a77748b797c9180
8b9d8d97a896a9baaac1cfbed6e3d2e6f3e2f2fdedf9fff4fafffcfbfffefbfffe
fbfffefcfffdfafffbf7fcf8f5faf4f2f7f1fcfffafcfffaf2f7f0f1f6eff6fcf2
e6ece2c7d2c495a69399af988fa28c7f927c899c889aad9a8699865f7060475848
748275afbdb0dfece2f7fff9f8fffaf8fffbfafffcf5f3f4fffcfffffdfffdf8fc
f8f6f7fdfdfbfcfffdfafffaf9fffbf4fff6f1fff4ecfeee94a998657c6a617864
5e7660576f555a73565e755b687e6790a38fcedfcdf0fef1eaf6ecf2fbf6e3ece9
fafffefbfffff0f6f6fafffff0f5f8aebab650685a607d67617d674c654f667c65
72846e73826b8e9a84bbc4b1e6eddbe5ecdcd2d8cad8ded2d1d7cdccd1cae4ebe3
e4f0e6acb9af56685a586f5f56715e3d5a4654745d52725a66826badc5adcfe1c9
d2dec8dbddc8d5d0bdccc3b2cbc6b3c7d1b883967a56684e61755c667e664a634d
46614e6a877590af9f7f9e8fb6d2c6d3efe3daf4ebdbf5ec93aaa23b574b527561
4169514e715b64846f5a7660667d69d8ebd8e3f1e2f6fef1edf3e9fcfff8e0e1db
dad9d5dedddbcac9c7edf4eda9c1b16a8b765d7d685d7a664f6855627967849686
8a9b8b818d7fcdd8caebf3e8e0e8dde4eae0e3e9dfd7ddd3cdd5caa4b1a0677866
5c6e5e697e6d687f6d869f8c748c7c738e7da0bbaacee9d8b0c8b8637c696a816f
5c715e7e917e7485737d8c79a8b5a3e0eddbecf7e6d5decdbcc3b3b1b8a8bec5b5
a2ad9c7d8c7960735f647d6774947c7ba2877ca78b84a88e9caf99c9d5bfbbc9b2
b5c4adb6c8b2b4c7b180967f6e866e5f7862718a746d8671849d88839a869ab19d
e1f8e6dcefdcc8d5c3aab6a26374616c846e7391797b9d845a7c646a8c7478957f
a8c1acd7ecdbe4f6e6d2e2d5b9c7baa4b2a593aa98668e7458856872957d76937d
a3b8a7b4c2b5e0ece0e9f5e9dce9dfcadcd094ac9e87a3947b9c8b658776769c87
82a392a8c0b3e1f2eaf5fffbf9fffdfcfffdf6f8f5eff5f3e6f1eb9eafa7758c82
6685765d7d6e6b8778809b8a95ad9de7f7eafcfffdffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffefffffefffefdff
fdfcfffcfbfffcfbffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffcfffde8f8ebf2fff6dbf0df
a2b7a68ba08f849988778c7b6f86726a816d647b675f7662627a64738b758fa791
acc4aec1d4c1f7fffbf9fffdf5fef9f6fffafbfffdfbfffdfcfffdfbfffcfbfdf8
fbfdf8fffffbfffffbfaf9f5f1f0ecf7f6f2fcfff8d7e6d3a9bca68fa28c99ac96
9aad998598847d907d879a877f9080627363536454738376b4c4b7e7f7eaf2fff5
edf7eef2f0f1f5eff1f7f1f5f8f4f5faf8f9fafafaf6f8f5f1f6f2f0f7f0f9fffb
f7fffaf4fff9dbede1b9cbbd6075664d624f566e54546f505c75585870565e715b
93a692d5e6d6effdf0f2fdf5f4faf6f1f5f4f5f6f8fefffffffefffffefffbffff
b5c9bd4b66534b6653627b6660786250664f6d7f697a89727a8773c2cebae8f1e0
dae1d1d4daccdbded3d7dad1d1d4cdd5dcd4f9fffabecbc1475c4d496453658570
496a5554775f5c7c646b8770bdd0bae0ecd6d1d4c1d0cbb8d1c5b5d9d2c0b6bea7
bfcfb58a9a8052644c5b715a6179634e67524f6a5764816f738f807a9688cbe7db
def8edd6f0e7e5fcf6769286456a58547b664268513b5c4756765f59755f667d69
cfe2cff1feedf1f9ece5ebe1eff0eadcdbd7c9c5c4e3dfe0e4e9e5cae1d18faf9a
597662597461516a574e65537489787e90807c8a7b818d7fc9d4c6f2faede9f1e6
e0e6dacbd1c7c5cdc0cbd6c88997884d5e4e738575697e6d687f6d79907e728b78
8ea696adc8b5c9e2cf99b09e5469586b806f677969677a677689757d8e7bb9c8b5
e5f2e0eef7e6d5d9cab1b3a5bcbeb0bbc2b28d98876273605a725c6a8a727aa186
7faa8e84ab8e98af95899780b3c1aac2d1bab7c6b1abbda7b0c3ad819780617963
5f77616f887379927d8ba48f8fa8939ab5a2e7fce9dee9d8b6bfac909d8b5d705c
5f786277977f82a48c4d70586a8c7485a58eb9d4c1e6fdebe9f9ecc8d4c8abb5aa
a1b2a2759880648f7352755d77947e96ad99acbeaebac8b9eefaeceefaeec9d9cc
b5cabb8ca79874938372948361887373988686a293cbdfd4ecfcf2f7fffbfcfffd
f2f7f3eef4f2eaf5f1a7b8b27a9187738f815574646b8a787794808ca592d3e5d7
fbfffdffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffefffffefffefdfffdfcfffcfbfffcfbffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffefffdfafff8fbfff8f9fff8e9f5e9c0ccbea0ae9f94a79496ab988ba48f
76927b67856d64856a67896e688c706f93777c9c8496ab9cb6c6bcdce9e0f5fff9
f8fffbf7fff9f4fbf4f3f8f2fcfefbfefffdfffffdfffffdfffefdfffcfbfaf6f5
f2f3edf6fff1e4f6e0ccddcaafc0ad97a8958c9d8a8c9d8a90a18e899c89768976
627562586a5a5d6f5f7b8d7db6c8b8edfbeefdfdfbfffefdfefafbf4f3f1f3f2f0
f7f7f5f6f8f5f0f5f1ecf2eef9fffdf8fffbf5fff9f7fffbf3fff8bfcfc47c8e7e
4f664c5770525770535f775d6b7e686174607a8b79b9c7b8f8fffaf4fbf4f0f4f3
f6f7f9fffefffffefffdfafff2f6f9f4fffb9fb7a75069565067536c846e5d735c
546a53788b756f816977866fc0cdb9e4efdedde3d5dde0d5d3d6cbd5d8cfdee1da
eff6eee4f0e6b5c7b9637b6b3f5f4a5a7d6755786041634a4e6c546b816abbc9b2
e8edd9e4e1d0d0c4b6e3dcccc6cbb7c5d1bbc5d3bc9dac9552654f495f48657e68
4a66504964516d8a787995868da99bc5dfd4e1fbf0daf1e9d4f0e4678979486d5b
5b816c54776144664e5a776165816a778f79c1d2bfecf9e8f3fbf0e8ebe4eff0eb
e9e5e4dad4d6dbdbd9cbddcfe2fdea9fbaa7556e5b5b7461556c5a455a49667868
8495857583748a9688d5e0d0ebf6e8dfe7d8e2eaddc6cec1cbd3c6c7d2c4889486
5f6d5e7284745b705f7087757a937e78917e9bb4a1bbd2c0d4ebd9839887566b5a
6a7c6c6a7f6e7287747187727b8c79d2dfcde7f0dfc7cbbcd9dbcdbfc1b3adafa1
b3baaa818e7c667c6767856d60846a6c94797da185829a808c9c829fae97c6d5be
bdccb5a9bba3bcceb8b0c3ad7386725b715c576f5977907a738c778aa69095b29c
a2b9a5eaf7e5c3ccb9b2beaa8d9c87576d56627e6577977f5e826856796171937b
7b9b84b9d2bdeafcecd7e3d5bfc5b9a8b4a685a58e789e8563876d55755d6b846e
98ad9abccdbbc6d4c3e7f3e5d8e6d7cddfcf96ad9d8ba8966e917d59806d6a917e
7594848ca496eafcf0f1fcf4fbfffdf1f6f2f1f7f5e1ece8bccdc780978d7e9a8c
648373658570728f7994ad97b3c5b5fbfffbfefefefbfbfbfdfdfdfefefefefefe
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefdfffefdfffdfcfffcfbff
fbfafffbfaffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffdfffcf7fdfdf5fdfdf5f9fcf3
ebf1e7d0dbcdafbdae96a99699b29d9cbaa28fb196789c806c9577719c7e6f9c7b
67907277927f7d928390a294b3c5b7e0ede3f7fffaf9fffafafffaebf0eafbfdfa
fffffdfffffdfffefffffefffffefffffffbe7efe0f1feecf6fff1e0efdcbbcab7
9ead9a96a59299aa978a9b898a9d8a889b887b8e7b627464566858687d6c88988b
dee3dcf1f0ecf7f8f3f2f3eef1f3f0fafcf9fafffbf4f9f5f2f8f4fbfffdf9fffd
f0fbf5f7fffcf8fffbf7fffcd7e5d89aad9770876b586f5560775d697c66627561
657663738170c2cec2e1ebe2f5faf4f2f4f3f3f3f5fffefffffdfff6f7fbf7fffd
edfff599ae9f4f645359705c637b65526a52546a5363775e81937b808f7ac0cdb9
eef7e6d1d7c9d5d8cdd4d7cedadbd5eaefe9f3fdf4e7f7eca8beb157746243644f
5578624f715949674f657d677f8e79cdd4c2d6d7c5e3dcccd2ccbcc5c8b7c2cbb8
c1cdb9b9c6b2859781596c565e766068816b435c475a75626c87767b9788a4beb1
d2ece1e0f7edd0eadfc6e6d9688a7c3a5c4c5f826e51725d3d5d4665836b65816a
849a85c6d7c4eaf6e8e7efe4e9ebe6e7e6e4ded8dad9d9d7cedbd1d1e8d6c6ddcb
8ea593546b595065545e7362596e5d6476667b8c7a7a8877a7b5a4e3f0dfe7f4e3
dfeadad7dfd0d6ded3c2cabfb6c0b5768274677868677a67677c69788f7b89a08c
6b846fb2c9b7c0d7c5b3c8b77186755b6d5f5e73625e75617b937d86998594a390
c8d3c2dfe6d6c8cabcc4c6b8bec0b2a7ae9ea0ab9a96a794667f694d6d55668a70
7193787890767f937890a28aa6b8a0bdccb5c2d1babbcab5bed0ba8e9f8c657864
5a705b5c745e70897468856f7a9781819a84b4c3aee5eedbc6cfbc98a5917c8e78
60765f65816a6f8f775578605d8068799b839cb9a3cadccce6f2e4d4daceadb8aa
98b19c84a48d6b8b735a7a6265816a859e88a5bba6b6c9b5cedccbe1efdec9dac8
afc4b388a0907b9a88678c7a658c796b8c7988a392b2c7b8f7fffafbfffbf8fdf9
e7edede5eeedcbdad58fa49b839d9065847261816c6b897189a58cabbeabfbfffb
fdfdfdfcfcfcfdfdfdfefefefefefefefefeffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffefdfffefdfffdfcfffcfbfffbfafffbfaffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffdfff9f8fef4f2fef4f2fffef8fffff8f8fef2d4dfd1b3c4b29ab19d8fad95
89ab9089b09387b3927ead8b72a4816e9b7c73937c849d8a8ea5938fa69495a799
acbeb0d8e6d9f8fffaf9fffbf9fff9fdfffcfffffdfffffff4f2f3f6f4f7fffffd
fcfff6f2faebe8f3e3effaeaf6fff1e5f2e1becbba99a7969aab999dae9c9eb19e
95a8957b907d6378655d725f6778685b655aaaafa8edf2ebf8fdf6edf2eceff4ee
f5fcf5f4fbf4f6fcf8fbfffdf9fffbf0f9f4f1faf5f9fffdf9fffff9fffbe8f6e5
dfeedb9dae9b677865637461596a57536451717f6e808d7cbac5b7eef6ebf6fbf5
eef0edf1f1f1f8f6f9f7f9f8f2fbf6f5fffae3f3e69cae9e5e7360637b65678168
466047536b51677e64738670889782c0cbbadfe8d7d4daccd9dcd1e3e4dee3e5e0
e8efe8f3fff5e4f6ea97af9f526f5b58786353735c5a765f4c644e6b7d67808c78
d2d6c5dedfcdd9d7c8d6d8cacfd3c5bdc6b5cad5c4c2d1bc8799835c725b546c54
637c6639553e56725c7d98857893829eb9aad8f0e3d4eee3e3fef7bfdad3648278
4d6c5d5b7c6950715c53735b4f6d536d8970647c66b2c5b1f3ffefdce4d9e2e5de
f5f4f2cdcdcbd0dad1cbdbcee2f2e5c9dbcd788a7a556a59607562576c59526754
7287746f826f829581bdcebbe1f0dde6f3e1dce7d7d5dbd1ced4cae0e8ddabb6a8
7b897a6778665b6e5b5b715c7d957f627a64879e8ab9d0bec4d9c8a6bbac637569
54695a69826d627b657086717f907da6b3a1d4dfced4dbcbc4c8b9c3c7b8a6ad9d
b7c2b1b9c8b5829581576f5957735c6e8a71718b70768f7281987c84987db2c4ac
cfdec7b7c5aec4d2bbb7c4b08e9d886d806c5b715c718a7466846c718f777c9881
899b85dae6d0e4edd8b6c2ac9daa9672846e5a705977937a6789704e72586f927a
84a48da7bca9deecdbd9dfd3bec4b8afc0ae95ac987a937d65836b607e646a886e
85a188a0b8a0afc0addae9d6d0decdc8d9c995aa9b839e8d7e9f8e63857463846f
7696817d9484e6f6ebf9fffbfbfffce5ebebe8f1f0dbeae7a2b7b086a093688573
5c7c65628068809d81a1b7a2f6fdf6fcfcfcfefefefdfdfdfdfdfdfefefeffffff
fefefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffefdfffefdfffdfcfffcfbfffbfaff
fbfaffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffefffffafcfff9f9fffafafffdfafffffa
fefff7f1f9eee6f4e5bed3c29eb7a284a48c86aa8e8bb49682af8e78a78578a584
789a81809e8684a089819d8681988489a08e9eb0a0afbfb2d5e2d8f4fef6fbfffb
f8fdf9f5f7f6fefffffffffff7f7f5fcfff6f3f9edeff5e9f4fcedfbfff6f6fff1
e4efe1d1decdadbbaca4b5a3a0b19f9fb29f99ae9b859a87697e6b576a57526051
525e50808c80d0dacff7fff6eaf4ebe0eae1eff6efeef5eef1f7f3f9fffbfbfffd
fcfffffbfffef8fcfbf9fefafbfffaf8fff7f9fff6dbe7d98f9d8c6574615e6f5c
546350576653778473aeb9abe1e9def5faf3f3f5f0f3f3f1fafcf9fbfffbeaf4ec
f8fffaf2fff595aa99566e5854705959755c526f5348624771897173867081907d
c1ccbbdae2d3e6ece0ddded8dadbd6e0e5dfe0eae2edfaf0d3e7db89a191688370
5c7764506c565b735d54675365745f919e8ad6dec9eaeedddadcd1ddded6c7cdc1
ccd4c5d6e3d1b8cab480937d455b446e866e526c53536f5865816b617c69708b7a
a8c0b2d6ede3d3e7e5f0ffffc8dedb5b756c4a69596687724d6f564d6f54537459
567259677f67a5b8a4eaf6e8f1f9eedfe1dce2e4dfd5dcd4d6e0d5d9e5d9dae8db
bbccbc788a7a5065525a715d59705c6078627088727c927d8c9f8bbfd2bce7f9e3
d8e5d3c9cfc5dfe2dbd8ded4cfd7caa1ad9f6775646273605669555d735e79917b
6b826ea1b8a4bacfc0c3d8c999ab9f5f74655d76615e77615f77618396828c9d8a
a7b4a2dce7d6ced7c6bdc6b5b3bcabb7c0afb7c2b1b4c3b08899865669556c826b
708a6f739072779174758c709aac94becdb6b9c5afbbc7b1b6c2aeacb9a5798875
6174605c745e6d897269876f7d99808a9d879fae97e4f0dad9e2cdb1baa79ba793
6d7c676c826b7d9b835a7c6363866e7a9a8395ae99b7c8b6c9d1c4d5d8cdc1c9ba
a5b2a1879a86728b755e7f64587a5f6d8e738ca88f9caf99bac9b4dce9d7d4e1d0
b3c4b48ba0918ea89b6b8a7a62856f5f81696d8673b6c8bcf9fffbfcfffff0f6f6
eaf3f2e4f3f0b2c5bf87a1946986745a7a635c7d6279977b9db39ceff6eefbfbfb
fffffffdfdfdfbfbfbfefefefffffffefefeffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fefdfffefdfffdfcfffcfbfffbfafffbfaffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeff
fffbfffffbfdfffcfdfffcfafcf8f5f9faf4fcfffaf9fff8e8f9e9d5ead7afc8b2
88a68c7e9f8489ad918cb39485ac8d8aaf907fa2847394796d8e73718d76738f78
738a7671867596a89ab7c4bae2ede5f9fffdfbfffff7fdfbf3f7f8f9fbfaf4f5ef
fafbf3fefff7f7faefeef1e8eaf0e4f1f9eef9fff6dce8dcc7d5c6adbeaea0b2a2
9eb3a29bb09f8ba08f7a8f7c697c69677a67576959596a5a98a697ebf9ecf8fff8
edf7eee5ece4e2e9e2ebf0ecf9fefafefffffcfefdfafafafcfcfcf8f8f6fffffd
fefffbfcfffaf4fff1a4b1a055645146554063725d586752697865a1ae9dd7e2d4
eef6e9ecf2e8e8ede6fcfef9fbfdf8f1f8f0f7fff7dceede7c947e4d69527b997f
6280644e6c50466347748c72788a747e8d78cdd8c7eef4e8d7d8d2d6d6d4edefea
e4e9e3dfe9e0e9f6ecbed0c28da4926e85734d6651546c56556b565268515f725c
a8baa4deebd9d8dbd2e2e3ded7dad3cbd1c7c8d3c3d0dfccbcceb87e957b4b6349
7d977c637d62415b425e7761667f6a748d7ab7cdc1e0f0f0dce9eff1ffffafc4bf
536d604c6b59587c625d816544694a597c5e5a785c6b836baabba8dfecdbebf3e8
ecf1eadfe2d9e2e5dcccd2c8ced8cde0eedfb1c2b2677c69536a5658715b57705a
6e8771738d7470887098b096cbe2c8deefdccfd5cbdfe0dac1c4bbc8cec2bac5b7
7e8b7a67786570836d50664f758b767c917e788d7aacc1b2b9cebfc9dbcf8ea296
42594570897368806a677d68798c78879885b2c1aed4e1cfc5d2c0b9c4b3b2bbaa
b3bcabd1dac9bfcab97881705b6a55648163698b6a6b8a6b758f728094799faf95
c2ceb8b7c0abb3bca7c3cfb999a6926c7e68566c576c856f6a887077937a8fa78f
7b8f76b0bea7dde5d0d1d4c1bbc0ac949d8a62745e768f7974947c6082696d8f76
87a38d96a996bec9b9e3e7d9cbcbc1b3b5a896a3917f978165876c557c5d608768
7a9b7e90a88e96a892d4e1cfdce7d7c9d5c7a3b1a48ca0957c978865887055795f
6d8875869b8ce8f3ebfbfffffafeffeef6f8e5f4f1bccfc9849e916c89775c7c64
5c7d607796779cb49ce7eee6fafafafffffffdfdfdfafafafffffffffffffdfdfd
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefdfffefdfffdfcfffcfbfffbfafffbfaff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffefffffdfffffcfffffcfefffdfcfffffdfffffb
fdfffaf9fff8f4fff4eeffefddf0ddbbd1bc9bb39d89a38a84a08785a38796b999
97bc9b93b89786a98b74957868866c66826b69826d6f84736d7f718c9c91c7d4cb
eef9f3f2fdf9f5fefdfbfffffffffbfffef9f9f8f3f5f6eef5f6f0f3f6ededf3e9
e9f1e6f9fff8effbefdae8dbc0d1c1b1c3b3aabfaea2b7a698af9b8ea690758e78
647c66637865637663758676b1bfb0f0fcf0f9fffaf6fdf5f4f9f3f7f9f6f8f8f8
f8f6f7fbf9fafffdfefffcfff8f3f7fcfafbfffffdf2f7f0eaf5e7b6c3b1586752
61735b596b5355674f68776294a18fc6d1c0e3eedeedf3e7f2f3eef7f6f2edefea
edf7ecf2fff3c9e0cc8da9927293786c8d70608164466448567055748a73798b75
98a593cfd7c8edeee9dcdbd9e6e7e2e5e7e2dbe2dae7f1e8deecdfbdcfc18ea392
677c6b4259455e7660435c46546e556d876eabbeabeaefe9e7e6e4d5d6d1cacfc8
c5d0c2d3e2cfdbedd7b8cfb5587154617b5e627c5f5b755a556f56566f5968816b
85998dcad5d9d4dce7e2edf3eafdfba2b9af4f6e5c54785e557c5d4f77553e6644
698c6c7794785b715a97a895edfbeceef6ebe7e8e0e0e0d8d3d4cccbd1c7d5e0d2
daebdba6bba858715c49654e58745d607c635a765d6a876b7e987d9bb59adef1dd
e4eae0dfdedad1d2ccc8cec4c9d1c2a2af9d586752697c665b6e5860765f809681
738875889d8eb5c9bdc2d3c9c4d8cc79907c546d575e766059715b68806a7f9580
7e917db0c1aecfdecbb7c4b2bac3b2c0c7b7ccd0c1d9ddcea9ab9d56624e567556
5a7f5d5f806173907271886c88987ec0ccb6bac3aebec6b1cdd6c1c0ccb87f8e79
6b7e6a6079636a866f6482687b987c829a8073816abbc3aee6e7d5c9c8b6b6baa9
75816d607661819f8765876e5d7f6673907a869d89bac8b7dbdfd1d3ccc4c4bdb3
a7afa08ca28b7193786089695d8966688d6c83a084889c83bac6b2e2eadbd1d9cc
c0cac18c99908aa0936a8d755c836867846e6e8374b3beb6fbfffffbfffff6fbfe
e6f2f0c5d8d2849e91728f7d6080685c7d6073927398b098e0e7dff9f9f9ffffff
fdfdfdf8f8f8fffffffffffffcfcfcffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefdff
fefdfffdfcfffcfbfffbfafffbfaffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeff
fffdfffefcfffffefffffffffefffdfcfffbf8fff7fbfff8f6fff3f3ffeff1feec
d4e3d0a7b6a1889a8481987e8bae8d8bb39094bc99a4c9a8a9cead9ec1a383a38b
6d8a74546d5a667d6d65796d6273698f9e97d8e7e0f7fffff2fbf8fffefafffefb
fffefbfffffaf8f7f3eeefe9ebeee7eaefe8e7f1e8f1fdf1f5fff6ebfbeedbeddf
c6d8caa4b9a8879e8a9db9a096b49a8fab92819a84667e685469566273637c8a7d
d3ddd4e8efe7fafff9fefffdfdfdfdfffdfefffefffffdfffbf1fafffbfffffcff
f4f2f3fefffbfbfff6e7f4e2a3b29b5d6f55596d5254684d55674d687a6295a48d
c7d4c0eaf2e3f9f8f3f2eeebfefffaf8fff5e2f3e3eefff1cfebd475967b6e9173
638668638467486549627a6281947e6f7e6b919c8cdcded9dcdbd9d7d8d3dee0db
e3e6dfe4ebe3e9f3e8deecdfbfd0c08fa1916d826f445d4757735c4260485a785e
6d8470d2d7d3e2e0e3d2d2d0cdcfcad4dcd1d4e1d0d4e6d0cae1c79eb79a566f51
577253748e715771564c664d6781686d81758f96a0d2d3e5d6dfe8e8f6f9e4fbf3
94b0a1597c64486f504e7755557f5b587d5b6081626d876c7288719eaf9de8f3e5
eaeae2e0ddd6e1e1d9d7dad1c9d1c4ddebdccfe4d18ea7924f6b5454725a57755b
4a684e58765a688569789577b8cbb5e9eee7eae9e5e4e5dfdbded5d0d6c8bcc7b6
68776251654c61755c5b715a6e846f809582708274acbeb2b5c6bccce0d4c7deca
5a735d566f595f7862617a64728b756a826c839984b5c6b3becbb9c8d1c0cbcfc0
c7c9bbd6d4c7c9c5b9848b79597859537d595b805e69886870876b809076a2ae96
b9c1aac4c9b5c0c8b3c2cbb897a691788b755971595c755f4e6c526283667c9679
6c7b64929a85cdccbad4d1c0c9c7b89da492657862708c73688a715b7d64607d67
7b947fa3b4a2c0c4b6dacfc9d6c9c1bbbdb099ac967d9f846c98775d8b67537d59
779677899d84a2ae9ad4d8cadde0d5cfd4cd9da49d8b9d916f927a658d72597962
607767869189dde3e1fcfffff8fdffe9f5f3cfe2dc87a19479968464846c5b7c5f
6c8b6b8fa78ddae1d9f8f8f8fffffffdfdfdf7f7f7fffffffffffffbfbfbffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefdfffefdfffdfcfffcfbfffbfafffbfafffffeff
fffffffffffffffffffffffffffffffffffffefffffefffffefffffefffffcffff
fcfffffcfffffcfffffcfffffbfcfefffffffffffffefefef9fbfafafcf9fefffd
fcfffbfcfffaf9fff5f4faeef3f9ebf8fef0f2f9e9d1d8c6a9b7a09ab79b8db090
89ac8e91b496a1c2a5a7c8ada2c0a898b59f8aa3907a92826d837662786c576b60
63776c9aaea5dae7e0fefffbfffffbfffffbfffffbfffefaf9faf5f4f5eff0f3ec
eef3eceef5edeaf4e9eaf6eaf4fff5f5fff8e7f8e8cadfce96af9a94b09a96b29c
97b09d889f8d6f86746075645e70624d5d50869389c4cec5e4ebe4eff4f0f9fbf8
fffffdfffdfffffcfffaf2fdfffdfffffefff6f8f7f9fef8f9fff8eaf7e695a491
70826c5a6c545f735a677b626c806584967ea5b29ee8ebe0edeee8f5f8efebf3e8
e1efe2f4fff6f1fff6c7e0cb738f7967856d607c656f88725e7660556b546f826c
5f6e5b98a093d1d7cddde3d9e3e9dfe8eee4dce2d8e5ede2ebf5ead9e5d9ccdacb
889a8a576e5a47634d55735b496951526b56868d85d2d3cedcddd8d3d6cfdee4da
d3dbceccd9c8dae9d6cfe1cb96a993586f55556d536983685a775b537054728977
778183aaaeb9d8e1e6d8e6e6e3f8f1cfe9dc7797824e71595b8265598061496e4f
5273547492767c967b859c82aebdaae8eadde3e0d7e7e7dfe4e5ddd0d6cccdd8ca
d7e5d6d3e4d4697e6d4c634f5b745e4e6a513e5a4158765a6d8c6d829a80d7e2d2
f2f5ecdaddd2dfe5d9cbd3c4c4cfbe9fac9a5a69566273605f725e6b7e6a758a77
7c9180899e8dc5dacbb0c5b4cee3d0abbeaa6e846f576f59637b65627b65657e68
78917b899f8ac8d9c6cbd8c6c6cdbdcdcfc1cbc9bacfc9bdc1c5b46882675c7f5f
638263617b5e738a6e7d8f757e8c73b0baa2d2dcc4c2cbb6bdc9b3c3d2bd8fa18b
7588726177625c765d5a7b5e5d7c5d889c8377836d9b9e8be2e1cfcacbb9bcc4af
7f8e795b735b6b876e67856b58765e6d8670839984a3ae9ddcd8cdddd4cbc4c8b9
a2b19c88a589799e7f618967496e4d6f8e6f89a18798a792b9c2b1eaf0e2ccd2c6
b3b9af86948777957d6d8f7654715b556c5c728278b6c1bbf8fffff5fffeecf8f6
d9eae48da39781998969856f5a785e658465879f85d5dfd4f7f9f4fefffdfcfefb
f6f6f4fffffdfffffffbfbfbfffffffffffffffffffffffffffffffffffdfffffd
fffffdfffffffffffffffffffffffffffffffffffffffffffffffffefdfffefdff
fdfcfffcfbfffbfafffbfafffffefdfffffdfffffdfffefcfefefefdfdfdfcfdff
fafefffbfffffbfffff0f9f8eef8f9f4fefff8fffff7fffff8fffff3f9f5f8faf5
fafcf9fdfffcfefffdfefffdfefffdfffffdfdfef9fffefafffff7fcfcf2f7f7eb
f3f4e6f3f1e2eff3e2d9ead8b9d0bc9cb39f94ab97a0b7a3abc2b0a8c1ae9fb8a5
a7bfaf96ae9e88a09080988a6f8a7b5d78695671625e7467aab5adcbd2cbe8efe8
f6fbf5fefffafefffafdfef8eff0eaf2f3ebeaede4e5e8dfe6ece2f0f6eaf7fff2
f9fff4f5fff5e8f9f1cbe0d9a8bdb68da299a8bdb492aa9d789082637b6b587060
4f6656516657839589bacabfdce9e0f6fffaf8fffff7fcfffcfffffcfffffcffff
fbfefffafdfffcfffffbffffeef7f47f8a82606e615f725f5870584f694e6b8568
758e71a0b29ccad7c5ecf9e8f0fceee9f3eae9f3ebecf7f1ecf7f1d8e5de86968c
79897e6b7d6f6b806d4b614c597157677f6560775d8c9f89bfd1bbdae9d6d7e2d2
d1d9cadce2d8eef4eaf2f8eee8f0e5c8d4c8809083586d5e58715e4d6855415844
4653418a9181c9d0c0dde1d3e7eae1e3e4decdcec9d4d6d1d8dfd8dfe9e069796c
596e5b607963648266476a4a496a4f61766769796fa2b2a8cedfd5d9ede4f1fffd
c7e1d656726465817355746266866f5a7b605573577796767c9a787c9577b9c5b1
e7ebdde6e9dedcddd5dbdcd4d0d1cbd3d4cedaddd6c9cec7707a6f657364566b58
556f564a684c5679596d8c6c8ea287f5ffeadfedd6cfdbc7cdd8c8bec9bbbcc6bb
737d725662566876696778687d907d7c947c718b7098b597bed6bcbcc9b7d3dbcc
bfcaba72806f54675358705a556e5876927b7a947b859d85c9dcc6e4f1ddcfd8c5
c7ccb8c4c5b5ccd0bfa8b5a16e806a4c5e4863755d617359788a707b8e727a8a6f
b2c2a7bdcdb3c1d1b7c5d4bdbbcab57b8a757582706679655a785c5475566c8669
8094797280679ba58dd9e1cabcc6aeb0bca663725b667a617c93795b755a648165
658266799177a7b4a0d6dfccc1cdb9b4c2aba5b79f7a9177738b715a775b5a775b
6c896d839d82849a83d0dfcad6e2cecad1c1a1aa996e7f6c788e79788f7b576f5f
687e717d9289d6e9e3ebfcf6ebfaf5d6e2de9daaa185958a6b806f62796568846b
88a289c2d0bfeef9ebf8fff5f6fbf4fafdf6fbfcf7fffffdfcfbf9fffefffffeff
fffefffffffffffffdfefffbfefffbfefffbffffffffffffffffffffffffffffff
fffffffffffffffffffdfdfffdfdfffcfcfefcfcfefbfbfdfbfbfdfffefdfffefd
fffffdfffefcfefefefcfefdfcfdfff9fffff9fffff6fffef5fffef7fffff7ffff
f4ffffecfafae4f3f0f8fffbfbfffafbfffafbfffbfafffafafffcfcfffdfefffd
f9f9f7fbfcf7fdfcf7fdfdf5fbfbf1f9f9edfaf8ebf5f9eaeaf6e8ddefe1cee0d2
c0d2c4b7c9bbb0c5b6adc4b4abc3b3aec6b6a7c2b1a8c3b2a9c6b49bb8a6819e8c
6d8a78688372536859566659677369869286b1b9aed3dbd0edf0e7f8fbf0f6f8ed
f4f6ebeef1e6ebeee3eaf0e2f1f7e9fafff3f9fff8effef9efffffe3f6f2bacfc8
aec5bb8ea89b90ad9b9dbaa67e9b876c8973536e5b5a73606c8371889d8ebcd1c2
deefe5eaf6f2ebf5f6eef6f9f7fcfffbfffffcfffff6f9feeff2f7f8fefeb2bdb7
748177667b6a5b755c4e6d4e5b7d5c78977778917398ac93c5d6c3e8f6e7eaf4eb
dee4e0e2e8e8f3f9f9eff4f7ced7d698a39d6673697183735f77614963484d6849
5e7b5c637e5f7e977ab0c4abd5e2cedde8d8dde3d7e0e3dae5e8e1e6ebe4e4ebe3
b3bfb376887a435a48566f5c4f67515062485d6a50aab39edee5d5ddded6deddd9
dcdadbd4d2d3dadadcdbdfde9faaa26476665f78625a7b5e4f74534b6e4e61795f
5d705c798e7ba7bcabcaded3e2f7eed2e9e1a2b9b1627c73607a6d6582705a7761
4f705370926f6d9068748f6c8a9982d5decddee4d6d7dacfe5e5ddd9d6d1d0ccc9
dedad7dad9d5b9bcb5869183495a4849614b49674b4164445f815e728b6bacc1a2
daeacfdeedd6d3e0cfd3ddd2cdd4ccafb9b159635b6e7a706472655d705d778f75
708d6e6d8c6aa1ba9cc0ccb8c9cdbfccd2c4a1ac9c5b6c59536954647d6746624b
6d897069836ab1c7b0e7f9e3d1ddc7c1cab5cbd0bccacebdc4cbbba1ac9b63705e
6170595c6b5477896f697d616d8165869a7ec2d6babdcfb5bfd1b7b7c4b0abb8a4
6974646c7b68638064557657627f617a937674866c79876eaab69ed0dac2b1bba3
98a48c66745b6d7f657992755a77596081626c8b6c8ca389b9cbb3d1e0c9bdcbb4
afbba5919f8882947c6b826859765a6c8a6e6a886c8aa489acc0a7d9e7d0c5cdb8
b1b6a27c87766877647489785b73635b7667668274a7beb6e7fcf5dcebe6cddad3
acb5b08e9a90748477657a67637f69839c86c0d1beeefbe9f9fff4f8fff3fbfff7
fbfef7fffffdfdfcfafffefffffefffffefffffffffffffdfefffbfcfffbfcfffb
fffffffffffffffffffffffffffffffffffffffffffffffffdfdfffdfdfffcfcfe
fcfcfefcfcfefbfbfdfffefffffefffffefffffdfefefefefcfefdfcfefdf9fffd
fbfffff8fffef5fffcf6fffff7fffff5fffff0fffaeaf9f2d8e8dddae8dbdae8db
dbe8dee0ede4e6f3eaecf7f1f0fbf5f9fffdf9fffbfbfffafbfff8fbfff6f9fff2
f5fdeef0fbebe7f8e8e9feedebffefe8fdece0f5e4daf1dfdaf1dfdcf5e2c5decb
b9d4c1b0cbb8a8c5b19bb8a488a8937f9f8a809d898198846c826d5f705e5d6e5b
606d5b63705e7a8372939c8bc0c7b7cfd6c4dfe8d5e8f1dee6f2dee4f0dce6f3df
e8f6e5e3f5e9f2fffbf1fffbe0f8eacae5d2a2bfa994b29a94b59a8eaf948caa8e
749278648067536d54556d57829883a5b7a7dae7dde6f1e9f3fef8f8fffcf4fdfa
f4faf8f7fdfbf9fffde8f2eae2f0e396a7957d957d6380624766443e603b61815c
627b5d6d81668c9e88bac8b7d9e5d9e1ebe3e4edeaeaf3f0f9fffff1fcf8ddeae1
647467798e7b526a526680634966474b684956715260795c778b72a8b7a2d9e4d4
e8eee2d9dfd3e3e9dfe7efe4f5fff4e2f0e3acbeb0506755647d6a5d766052664b
55654a76846da7b09dd9dcd1e9eae4d9d9d7dcdcdad9dbdadbe0dccfdbd1879989
5c755f5a795a577a59537554597255576e545d735e7c917eabc1b4cfe5d9daf1e7
daf1e7819b906b857856736158755f628064708f6f5b7d586785637b8d759fac9a
d1d9caf0f6eae4e5dddad9d4e5e2ddd3d0cbd1d0cbe0e3dab5c0b26e7d6a50664f
5572563a5b3c3d5c3a6079597a8f70c0d0b5ecfbe4dce9d8ccd8ccd0dad1cdd7cf
79837b6b786e5f6f624d624f667e646e8b6c5675537a9375bbc7b3bdc3b5c3cbbc
c0cdbc7d8e7b53695460786239523c526c536e866e869c85b7c9b3dfedd6d3dcc7
c6cbb7cad1bfd4ddccc9d4c38895835a69525d6c556f816764785c677b5f6a7e62
a2b69acddfc5b2c4aac4d1bdc2cfbb8691816a79666b886c5c7b5c587557637c5f
71856a6b7b61828e76c9d3bbc0cab2b6c2aa7e8e74667a5f80997c5d7a5c607f60
5f7e5f6c836993a58dd0dfc8c8d6bfb5c1aba0ae97899b83758c725d7a5e638165
59775b809a7f8ca087c9d7c0c7cfbac0c5b1939e8d5e6d5a6f8473647c6c567162
547062748b83dff4edd1e0dbc7d4cdc0c9c495a1977f8f826c816e5d796378917b
bbccb9edfae8f9fff4fbfff6fcfff8fcfff8fffffdfefdfbfffefffffefffffeff
fffffffffffdfefffbfcfffbfcfffdffffffffffffffffffffffffffffffffffff
fffffffffffffdfdfffdfdfffdfdfffcfcfefcfcfefcfcfefffefffffefffffeff
fffdfefefefefcfefdfcfefdfafffbfbfffdf9fffdf7fffbebf6f0dae5dfc0cdc6
a4b1a88f9f94879c8b859c8a859a89839a8a82968a81958a80948980948badbeb6
b0c1b9b8c8bec4d4c9ceded1d4e5d5d4e5d5d1e4d1b7ccbbb9d0bec0d7c5c9e0ce
d2e9d7d5eedbd6efdcd2eddae4ffece5ffeee7fff0e3ffeed4f4dfbcdcc7a4c4af
97b7a093af968ba58a81997f758c72667a61596b535e6d566c7a6368765d748269
85937a97a78dabbba1bfd1b7d5e7cde3f6e0def3e0eaffeff0fff6eefff4e9ffed
c4e5c89fc0a187aa8983a58490b2918daf8e89a888728f715d775a657d636a8069
7889769dab9ac9d7c8e6f4e5effbefeefaeef1fdf1f7fff7f6fff5f5fff4b2c8b1
98b19486a48261835e4f744b4c6f4758735260775a6a7e657e8f7ca8b6a7d4e1d7
e8f3ede5f0ead3e0d9e6f3ece4f4e9c2d4c4758d77718b706a8769425f4042603e
5a7554647d5f60745975846fa7b4a2d5ddcee4ecdfdbe1d5e2eaddeefaeef5fff4
e5f7e791a894617a65516b525970535d705256664c66735fb3bbace7ede3e0e2dd
e2e4dfdcded9e0e7dfdae6dabacbb9677f675f7c5e5d7c5c59785650694b586f53
5b7258657b66869d8bb9d0c0d6eee1d7efe2bdd7ca829d8e53705c57745e7f9d81
708f705476535b7859768d7374836ea2af9de3ebdce2e8dcdbddd2e3e3dbc9c9c1
dbdcd4dcdfd4c6d1c19aa99652664d5a7356567354466442526a4a6c81628a9c82
dae9d2e3f0dfbfcbbdd4ded5c4cfc7aeb9b16a776d5b6b5e5b705d556d53647f60
668462647d5fa7b39fbac0b2b0b8a9b9c6b5adbeab697f6a4a624c57705a476148
6f876f6177607e907ac7d5bedde9d3d4dcc7c1c8b6cbd4c3ced9c8b0bdab64735c
62745c62745a6f836765795d697d61778b6fbfd1b7bed0b6c6d5c0c5d2beb6c1b1
7988756f896e5f7e5f5572544b644765795e7b8b717b876f9fa991ced8c0b1bda5
acbca27c90756c85686d8a6c5e7d5e597658566e5472866daab9a2d0dec7bac6b0
a6b49d8b9d85748b7169836854725659775b6380647c9379a4b39cccd4bfc7cebc
acb7a66f7d6c6a7f6e6d85755d78694f6b5d5c7369c2d7ced6e5e0ccd9d2cfd9d1
9ba79d89998c7a8f7e5b77616b846eb1c2afe7f4e2f9fff4fbfff6fcfff8fcfff8
fffffdfefdfbfffdfefffdfefffdfefefefefefefcfdfffcfbfffafbfffcffffff
fffffffffffffffffffffffffffffffffffffffffffefefffefefffdfdfffdfdff
fcfcfefcfcfefffefffffefffffefffffdfffefefefcfefdfcfefbfafff9d5dcd5
bfc9c1a2aca38d998f8692868896898f9d9091a3937d96817c9a827e9a847e9b87
7d9887799485748e81718b7e718b80738d827c96898aa59699b4a3a0bba89db8a5
98b3a06f88737089747089746f88736e87726c88726c88726c89736c89737b9b84
93b39ca8c8b1b4d4bdb5d7bfaed0b8a6c8af9ec1a19ec09f99b8988eab8c87a283
7d9678687f6254684c65795d5f73575b6f535d7457698063768f7180997b839d80
9ab29aa5bfa6b2ccb1b4d1b3a1c0a090b28f82a6807ba17883a87f8bb08787aa82
8cac8586a48075906d698463566f5182967b84967c8b9d859cae96b8c7b2d4e3ce
ecfbe8f5fff1edffeadaf1d79db69987a2818cac87789b73759a6f496c424c6744
5b725561785e6376607487749cac9fc4d4c9d8e8ded8e8ded8eadedaefe0e6fde9
9ab49b7c997b6e8d6d4b6a48557351506b4a566f51657c606a7c66727f6d9ba696
cbd6c6dbe3d4e2eddddae6d8d5e6d4e4fae5c9e1c9647e656683676d8666516949
566a4f5a69526f7c6ab5bdaee3e9dfe7ece5dee3dce0e8ddd2ded0d8e7d48fa68c
627b5d6782615b7653546e4b4c6444556e505f785b69816995ac98c0d8c8c4dcce
dcf7e8aec9b87e99865f7b6485a3896e8d6e638262547152566e546e816b697b65
95a290dbe6d5e3e9dbd1d4c9d3d5c8d9ddcfced5c5c9d2bfc5d3bc7e90765f7659
587153587151455d3d5d725362745aa6b8a2deeddad4e2d3d8e4dacad6cccfdbd1
8391845465555f7560576f57536d506b88696780628a9682afb7a8b2bdadadbbaa
c2d3c093a9944d654f627b65587259506850556b5473856f86957eb8c4aee7efda
c0c7b5bdc6b5c7d2c1c7d4c2909f8864765e5f71576e82665c735669806372866a
899b81ccdec4c0cfbacad7c3c2cdbda4b3a0728c715c7b5c5d7a5c4f684b596d52
7d8d737d8b727b876fb6c2aabbc9b0c1d1b798ac916d86697592745f7e5f617e60
597157647b61768870cfddc6c3cfb9adbba496a58e799076758f745471555b795d
5370546e856b85947dc0c9b4c9d0beb8c3b28e9c8b657a696d85756984754e6a5c
58706391a79bdcebe4d6e3dad5dfd7a3afa591a194899e8d5e7a64617a649fb09d
dae7d5f4ffeffbfff6fcfff8fafdf6fffffdfefdfbfffdfefffdfefffdfefefefe
fefefcfdfffcfbfffcfbfffcffffffffffffffffffffffffffffffffffffffffff
fffffffefefffefefffefefffdfdfffdfdfffdfdfffffefffffefffffefffffdff
fefefefdfdfbfcfefbfafff9b7bcb5b2baafadb5aaa6b1a39faa9c93a08f83907f
74877364806765866b6c8c7474947d7c9c8782a18f86a59588a79878968a779589
7a998a83a3948dae9d8dae9b83a4917999846c8973718e78708c76607d674b6751
3f5c4643604a4a6a534e6e575070594e6e574b6b5451735b60826a6c8e766d9175
779c7b83ab868cb08c88ac888cab8991b08e8ca7867a9574667f615f78585a7556
5e795a6683646b88696887676382626a8769728f717b987982a17f6c8e6b72976e
7aa07782a97d89b08389b0837da27782a57d8aaa8386a4807b9975627d5c627a5a
667e5e7084687c9074899d8291a58a93a78e92a68d9db49892ab8e88a384799775
7898736c8f677da277597c544f6d494d66484f684b5b715a6277646d8271889d8e
a6bbacd8eddedcf1e2f1fff6def7e2d1edd4698869749675688a6763815f4c6a48
4762435b72566d7f676e7d6873806e7e8b7ab9c4b4d5e2d1dcead9d3e4d1e1f7e0
e2fce16d8a6e7b987a6886645c77565f785a576b5050624c717e6cabb6a8e9f1e4
d9e1d4d5e0d2d0ddcbd5e4cfc2d6bb677e616d8666597350607a553c5631445e3b
5d76565b74576d856d9bb49fb6cfbccbe6d3d5f0ddb9d5bf76927b729076678569
729172526f5149634860785e556b546c7e68afbeabdde8d7ebf2e2e0e7d7d0d7c7
d8dfcdcbd4bfd8e6cdb8cbaf6a7e62445c3c5c745451664751654962745a788a74
bdcebbe8f6e7cedccfd6e3d9cedbd1aebeb15e70605467536177604c6548587354
71886c717e6c969e8fbdcab9b4c2b1bacbb8b9cfba79917b526b5559735a4c644c
556b546d7f696c7b64818f78bac3aed4ddcabbc6b5c6d3c1cad9c6c0cfb872846c
65795e5a7154546b4e637a5d758c6f6a7e639fb197ceddc8c1d0bbbecbbac9d8c5
849e83627f61698366698265586c5166765c76846b72806788947ccddbc2b9c9af
abbfa48ea78a7690736885676c896b637d62647b61596b53b5c4adc6d4bdbac8b1
aab9a28da1887e987d65826658765a5774585c735972846ca1ad97c5cebbbac5b4
a8b6a56b806f6b8471748f7e4e6a5b597163647a6dcadad0dbe8ded4ded5b1bdb1
92a39392a796627e685d7661889a84c9d6c2eaf5e4f6feeff8fef4f5f8f1fdfcf8
fcfbf9fefcfdfefcfdfefcfdfdfdfdfdfdfdfcfefbfafffbfafefdffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefffefefffefefffdfdff
fdfdfffffefffffefffffffffefefffefefefdfdfbfcfefbfafff8dee4dad8e0d3
d3dbcccdd8c7c9d4c3c1ccbbb6c2aea9bba57993787290766b896f66846c65826e
6885736c8b7b708f7f6e8e7f6d8d7e7292837fa1918daf9e8fb29e85a894799c86
71917a74947c74927a64846c54725a46664e47674f4c6e554c6e5553755c54765d
4f7158507259597b625a7c6353775b5a8361638f6b6e96736e96736e9170719473
7c9b7b82a18187a4867c997a6d8c6d618061597a5b5a7b5c5c7f5f5f80615e7d5e
607d5f6382626f916e5a7e5a678d646c92696b9468699266769d7172986f789d74
80a27d84a38184a280738e6d637c5c627b5b647c5c667e5e6b826572896c789174
7c95786a8467718e70819e7f809f7f7193706d8f6c779b7570926d5d7b594f6a4b
486245536b515d755f5f7662667d697188768aa390bbd4bfc7e3cde3ffe9a9c7ab
6f90716688676486636482605d7b59516c4d4d664960745b72846e6c7b68566552
7683729dab9ac8d9c6d4e7d1d1e9d1c7e1c66b886a6380615b7a58688765617e5f
4d66494e654b53654f6e7d6ab7c4b3c7d2c2d0dbcad2dfcbcbdac3d8ead0819579
677c5d5c74505d7750435f37405c36546f4c587354546e536d867095ae99b0c9b4
daf3decbe7d19cb8a168846b6380646f8c705370544f6c50425f43546e536e856b
73856fa5b49fe9f5e1e6efdce7f0dde5eed9c9d5bfc5d3bab7c7ac6d8062596c4e
657a5b5a6e5251684b667a5f6376608c9f8bc8d9c9c8d8cbd7e7dacadacdc9dbcd
8799895669555c725b536c4f4d66486b82666572607a8575a7b4a3b8c6b5b9cab7
c5dbc6a8c0aa667e685068505d755d596f585d6f5974836c6c7a637d8973cbd7c3
c7d2c1c2cfbdc9d8c5cddcc5a0b29a6d816652694c576e515a71546b82656b7f64
6c7e64c1d0bbbfceb9c4d1c0cadbc8a5bda37a97796b856872896d5f735857694f
6b7b6168785e6f7d64aebea4b8cab0bbcfb4a6bda1829c7f7996786f8c6e627c61
5c745a566a5183927bbccab3c3d1babdccb5a2b69d86a0857794785c7a5e5d7a5e
556d5365775f85937cbac6b2bdcab9bac8b9859a89738c79849f8e526f5d587060
536a5aa0b0a5d5e3d6d1dbd0c2cec290a19193a89765806d5f786373856fb8c5b1
dee9d8eef6e7f2f8eef0f3ecf9f8f4faf9f7fefcfdfefcfffefcfffdfdfdfdfdfd
fcfefdfafefdfafefdffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefefffefefffefefffdfdfffffefffffefffffffffefefffefefe
fdfdfbfcfefbfcfff8f2f8eeecf2e4e5ebdde1ead9e1ead7dde9d5dae3ced3e1ca
c4dbc1b3cdb29bb59c849d87758e796f8a77728d7e759182759183719081749485
81a2918eb09f8fb29e83a6927598828cae9586a68e7e9e867a9a8278988072927a
66886f5d7f665c7e65698b7271937a6e90776d8f766e907765876e567a5e578362
477551436c4a4c75535479584f74535374575a7b5e607e62668468698a6f66876c
5a7c615274594e72585173585d7b615d7b5f607f606487674265444c724d4f7850
527b513b643a547d555e845d648a65688a696d8e6f7d9a7c7794766e886b5f785b
526b4e5770536881646f896c67816659765a6c896d6684685e7d5e668566648566
749576648566698b6a5e7b5c647f605d775a4e684d4c664d58715b617a655d7963
5f7b6569876f78967e8dab915172555071527c9e7d5678556c896a6784655e785b
556d53546a535e715b6879666c7d6a6a7b696e7f6c859884879d867c947a7c9679
6e8b6c6786665e805d587a57638262506d4f3f573d546b516779636a7966b5c2b0
d1decad2e0c9cad9c2d5e5cb9eb195596c4e617957506a4359754d4e6a444c6744
5b7655506a4d4d674e6b846ea5bea8c6dfcab9d5bfbcd8c16d8972617d645f7b62
547155466448355337425f43627a60546a535b6d55abb9a2e7f5dee6f2dcd5e1c9
d4e0c8cfddc3b2c0a67a8a6d7a8a6d4f62464e624652694d576b5262755f6b7e6a
97ac99d6e8d8d5ead9d1e3d5cddfcfb3c6b36a7d694c624b5f765c586f535d7158
606f5c6b78677e8c7bb0c1afc4d7c3c2d5c1bfd5c095ad97546c54586e5761745e
5d705a6c7e6673826b73816a9fac98cfdccab7c6b3cad9c6bbcdb5d0e4cb6d8468
59705360775a52694c60775a667a5f687c618b9d87d6e5d0c9d6c5bdcebbbfd7bd
98b295688164667d6165795e5e705669795f58684e71816774866cc7d9bfc7dbc0
a5bca097b0938ba5886b886a5572564f694e5a715755674facbaa3c6d4bdc5d4bd
aec2a98da58b7e9b7f66846859765a5b7359566a5177866fb1beaac6d3c2c3d1c2
a0b5a480998692ad9a597662597161576e5c7b8b7eccdacbced8cdcfdbcd8d9e8e
90a59466816e637c67667862adbba4d7e3cfe9f2e1eef4e8edf0e9f7f6f2f8f7f5
fefcfffefcfffefcfffdfdfffdfdfffcfefdfafefdfafefdffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffefefffefefffefeff
fffefffffefffffffffffffffffffffffffdfefffdfefffafafdf4f7fdeff5fbed
f2f9e9eff6e4ecf5e2eaf2dde6f2dcd9e8d1ddefd7dceed8cbdcc9afc2af95aa99
8b9f938aa093849c8e85a0917f9b8c7895837d9c8a8dad988fb09b87a99183a58c
82a4897fa1867b9d8277997e74967b7193786f917665876c67896e6c8d72719277
76977c7b9c817fa0857fa3876c97796a97786b94766b947673977d7a9e8484a48d
89a99295b29c94b19b8dad9883a38e7697826f907b6e917d72937e6986707c9a82
82a08673957a6d90727196756c94715e86635e866358805e5277564c71524c6d52
4f6f5755715b58745e5a735e5e776158715b4b644e47604a4a664f48644b3e5c42
49674d46674c3f5f473d5d454b695154725a49674f335137506a4d577053556f52
4c664b48644b4f6b52547059516f575371595070585c7c64597a5f5a7b5e618263
5e7f606688676b886a728f71748e71647e63526a524f65505f7461748774718471
6f8570768c77667e665d775c647e61678465749373698b6a5e805f557756517051
496348455d43556b546d806a63755f8c9b86bfceb7d6e5cebcccb28b9e826d8064
667b5c56724c4362393f5d374e6c48577553526f51526c5159735a59735a829b85
c5dec8c7e0ca7e9781587259627c63617d6457755b304e343c583f4b654c688066
60775d4b5d459eae94d3e1c8e9f7ddd6e4cad0dec4a9b79d76846a7381675c6c51
4c604560775d5d745a4f654e546a556a816d9fb4a1daf1ddcce1d0d0e5d2bcd1be
7a907b586b555f735a586c534d614866756255635262705f92a391b7cab6bdd0bc
bbd1bcc3d9c4738972596f585f725c586b554e604872816a61705972816ca5b4a1
b9c8b5d5e4d1c2d4bcc1d5bca2b99d5b7255627b5d688163556e505a71555c7055
63755fa6b8a2dae8d7c2d3c0b9d0b6b5ceb1688164566d51667a5f54684d596b51
56684e6f816761735990a288c7dbc0c2d9bdabc4a792ab8e6a8467658367506d51
536b515c6e56707e67b1bfa8d1e0c9a9bda49fb79d84a185628064567357587257
556c5265775f889581d4e1d0b7c5b6a4b9a88aa390839e8b617e68556e5b425945
637464bdcbbad6e1d3c5d1c37c8d7d8ca1907d98855c7560697b637c8a71cfdbc7
ebf4e3f5fbeff5f8effcfbf7fffefcfcfafdfcfafdfcfafffbfbfdfbfbfdfafbfd
f8fcfdf8fcfdfffffffefefff9f9fbf5f5f7f4f4f6f6f6f8f9f9fbfbfbfdf9f9fb
fafafcfafafcfcfcfefdfdfffefefffffefffffefffffffffffffffffffffffffd
fefffdfefffafcfff6fbfef3f9fdeff5fcecf4f8e9eff6e6f0f4e3edf4e2f1fae7
e4eddad9e2d1dbe6d6e3efe1deecdfc9d6ccb3c3b89eb0a496ad9d95ad9d95b09d
8ca892819e888aa89099b9a1a2c4a999bba08aac917c9e8373957a709277719378
73957a688a6f6a8b706b8c716d8e73708e747091767391777193786c94796c977b
72997e769d827d9f8781a38b86a38f87a4928ca79692ad9e97b3a496b2a38ead9e
87a69783a39484a39384a18f839e8b829f897e9e8672947b688c707196777fa687
678e71789c8087ab918daf9788a89383a08e85a09188a3948ea6988fa797839b8b
6d8673637e6b67847066836d5d7a644b6b544f6f584969523d5a463754403d5847
3e594838543e3a523a41593f435b413f59403f5b42425e453a58402e4c3435553d
33533b3f60453f604542634847684b3d5e41426044506d515774585a745b506a51
425b453f564249604c566d595f76645c735f647c665f7960607a5f6680635c795b
5e7d5d5476555477575d7e5f6786676481655a74595b735b657b646b7e68687b65
6c7e6674866e72846c687a6063755b637a5d57724f56744e516f4b486644436041
476446536d525c765b5c765d627c63829b85869f89627b6558715b637d645a735d
5270584d6b5346624b435f46607a616a8268586c516074598fa286b6c9adbeceb3
c5d5baa3b39873816873816862725853674e5b7258516750465e464e665058715b
6f86728ea591d3ead6def5e1d2e8d391a79266796362755f586c5353654f576855
5c6d5b6172606c7f6c90a38fb8cbb7c4dac5bcd2bdadc3ac647a63697c66647761
56685061735b63755d6f7e6973826f94a390c0d1bec2d6bdc8dfc5adc4a8667f61
6881635e7759556e50566d515e7559647761758771a2b09fc9dac7bad1b7b3ccaf
6a8165556c5062765b52664b566a4f54684d54664c5f73587e9277a3b79cb8cfb3
b8cfb398b1946f896c607e62527054536d5254684f63715a99a58fc4d2bbbed0b8
b5ccb2a0ba9f79967a5f7c605a7459556c525e705875846fb5c2b1c6d4c5bcd1c0
9bb4a18ba79167846e5a735e637b6560715f96a493d2ddcdcad7c6a7b8a8758a79
79948167806b62745a77856bb5c1abe9f2dff0f6e8f6f9f0f7f6f2fcfbf9fcfafb
fcfafdfcfafffbfafffbfbfdfafbfdf8fcfdf8fcfdfefefffcfcfef8f8faf6f6f8
f6f6f8f8f8fafbfbfdfdfdfffbfbfdfbfbfdfbfbfdfbfbfdfbfbfdfcfcfeffffff
fffffffffffffffffffffffffffffdfffffdfffffbfffffafffff8fdfef6fafdf2
f9fbf0f6faecf6f8ebf5f7eaeef0e2f2f4e7f6f8ebf4f7ecebf1e5e4ece1dee8df
dde9dfd3e1d4bfd1c3b0c5b4aac1ad9eb7a18ca88f86a3878ba98da1c2a59fc2a4
9dc0a298bb9d91b29587a88b7e9f82799a7d6f907372907475937779977b7e9b7f
809e8284a18582a38881a58b789e856f917964866e607d695f7c68647c6c667e6e
82988b869c9088a093879f92839d92839d9287a2998ca89c9fbaaba8c3b2a6c1b0
97b4a08faf9894b69d96baa090b49a90b49a8bae9686a79287a69490ac9d99b3a6
9fb9aea3bab08ba097798e856d847a758d807c978875918265827058786354745f
5878635875614e6b594a65544f675951695b5168585469565c725b627a62657e68
6a866f6d8972607e664c6c5443634b4161494868503d5d4536543c3a583e3b593f
4a664d37533a3c583f415d463f5b453a55423a53403d5643425b483c5444304936
354e3936523b405d414865473c593b3a593a3d5e3f45664950715459775b557158
526c535a745b6880685a725a556b54556852586c5355695050644b54684f5c7357
4863445b7a5a6281615170504663454e6b4f57745857735a5b755c4a644b506852
556d574b634d546c565e766050685256725c63806a4a6650345039405a415e765c
768f726c8367667a5e73876b65775d6b7d6363755b56654e64735c5b6d555b6e58
5c725b5169514860484b644e4b6750536c56627b65a6bfa9b8d1bbbbd3bd8ba18c
6477615e705a5567515567513e4f3c5c6f5c687b685d705d687b6795ab96bfd5c0
cde3cecae0c960765f6177606177605569504a5e455b6f56647660647360748370
94a592a8bca3c6ddc3bad1b5748d6f637e5f5772535e775952694d52694d60735d
5466506d7b6ab0c1aeb8ccb3afc6aa70876b5c7357647b5f576e52597054576e52
54684d61785c62795d758c70b0c7abcce3c7a0b79b637d605a7b5e56775a536d52
4d614854624b76826ca9b7a0cbddc5b0c7ada7c1a6819e825c795d536d52536b51
576b525f715b96a495c9d7cabed3c2a0b9a68aa6906f8d75546d576179615b6c59
768572bdc8b7cddac9becfbf7388777a9584758e795c6e546e7c62939f89e0e9d6
edf3e5f5f8edf5f4eff9f8f6fcfafbfcfafdfcfafffbfafffbfafffafbfff8fcff
f8fcfffafafcf9f9fbf7f7f9f7f7f9f8f8fafafafcfdfdfffffffffcfcfefcfcfe
fbfbfdfafafcf9f9fbf8f8fafffffffffffffffffffffffffffffffffffffffffd
fffffbfffffbfffffbfffffafffffafdfef6fcfdf5fafbf3fbfbf3faf7eefbf8ef
fbf8f1f6f6eef2f3ebf0f3ecf0f5eeeff9f0ecf8ece9faeadef1decee6cecce6cb
cdeaccc3e0c1b0cfafa0c1a297ba9c89ac8e7a9d7f6f907366876a628366628064
4e6c50516e525471555a74595f795e647e636781666784684a6b5047674f46644c
4a664f57705b69806c7c9180899b8d819387889a8e92a39999ada2a4b8afb1c6bd
c2d7d0cde4dacee4d7def6e6e1f9e9d4efdcd1eed8d0f0d8b8dac295b8a085a78f
7a9c8471917c74917f809a8d8ba2988da49c8ba099879c979eb3aeb8cdc8c8dfd7
d1ebded7f3e4d5f4e2cfefda87a79284a18b7d9a867a95827b9383768d7d677b6f
596e5f6b7e6b7285717287746c846e6a836d68846d5f7d655171593c5c443a5a42
42624a3e5c443d5b4349654e4e6a5460796468846e6c8872718c7977927f799483
7a95867893847692835c7768476251405b483b57413f5b424360443b583c415e42
39573b3253383250363553393c5a404561484f6b525872593d573e415941475f47
4b614a40563f31473032452f385038304c333f5d41476549415f43435f464e6a51
506c5347634a4761483c563d415943445c463a523c3f5741475d483e55414d6855
4f6a57425d4a39553f354e383e583f526a504d66494861444f6649485f43586c53
5f735a586a545769534657444a6049506850506850486249405c45435f48526e57
6480695a765f6e87718098826b816c5a6d575c6e585867525b6a57384b38495c49
586b58586b584f65505c725d869c87afc5b0aac0a95b715a596f58617760576b52
465a4150644b60735d677865637461687b6773876e92a98f93ac8f668162597455
5c77586a8566516a4d3f563a546751596c565c6d5b7889769aae9593aa8e698064
5e7559657c605b7256586f53546b4f566d515b7256566d515f765a8ca387aec5a9
8da488506a4d5b7c5f5a7d5f506d51485f454f5e475c685285937cbdccb5abc2a8
adc7ac8aa78b5c7a5e506d51567055536a5050624c849283c0cec1c3d8c7aac3ae
7c98816b896f526c53546c525668526e7d6899a591ccd9c7b7c8b68fa4937e9988
7a937e5b6d536574577a866eccd5c2eff6e6f2f5eafaf9f4faf9f7fcfafbfcfafd
fcfafffbfafffbfafffafbfff8fcfff8fcfff6f6f8f6f6f8f7f7f9f8f8fafafafc
fdfdfffffffffffffffcfcfefcfcfefafafcf8f8faf6f6f8f4f4f6fefffffeffff
fefffffefffffffffffffffffffffffffffdfffffdfffffdfffffdfffffdfffffd
fffffdfffefafffefafffefafffdf7fef9f5f8f5f0f1f2ecf1f4edf3f8f1f5fff6
dfebdfefffeef2fff3e2fae0c7e1c4adcba992b08c7b9b7680a281799a7b6c8d6e
5e7f605574554e6d4e4b6a4b4b684a537052556f52556f52566f52566f52566f52
566f52577053536d505670535b7359647b616f826c7a8c7684938089968596a294
a3afa1b5c1b5c4d1c7d1ded5daeae0e5f4edecfdf3daefe0ddf4e0e2fbe6dffbe4
c9e7cfa3c4a984a48c74967d63836b69897270907b759280799386849c8f94a9a0
a1b4aebccfcdddefefecfffce1f8f0e2fcefe9fff6caead59abaa37b9981729078
6b877069826c677c695e73605567574f6050697a6a7283717587776d826f6c8570
76927c7e9b85809d8769897268887175927c728f79728e78758e796d8472708775
758d7d708b7a6c8977698576678375617d6f5a7668527162658173526e5f506d5b
4c69554b69514a684e4764485673575e7a6355735b516d565a78606c8a7276947c
6f8d75627e675e7a63546d574b644e49614b445c463f5741455b464d6651496650
3c5c4534513b3a57414c6a5259775f56725b4c68513b553c344e35374f37374f37
314730334932374d38324935425a4a30483a334b3b38513e3d5640425c43344e33
2b45282f492c344d302f472d31482e2f452e3245313f523f445744364c373b533d
445c46455e483f5b424260464f6d5357755b3b593f425e45556f56556b54576a56
5d6e5b566552586754526552465b484a5f4c576c59556b564a604b5669556e816d
7689736679635b715a647a635a71574f664c435a405c725b6c7d6a6c7d6a697c68
61755c637a60647d605e795a688364637e5f668162566f5241583c495c465c6f59
5f705e5364516d81686b7f645a6e53596d525f765a597054516a4d4b6447455e41
4760435c735762795d5b6f546c806574886d556e515d80625c7f614f6c504b6248
55644d515d4765735c96a58eb0c7adb8d2b798b59967856959765a5c765b536a50
475a446e7c6da7b5a8c8ddccb7d0bb6a866f5f7d63617b605e775a5668505e6d56
788470c7d4c2bacbb9a0b5a47994837089745e70565f6e516f7b63b0b9a4edf4e4
f0f3e8fffffafdfcfafcfafbfcfafdfcfafffbfafffbfafffafbfff8fbfff8fcff
f5f5f7f6f6f8f8f8fafbfbfdfdfdfffefefffffffffffffffafafcf9f9fbf8f8fa
f6f6f8f4f4f6f2f2f4fefffffefffffefffffeffffffffffffffffffffffffffff
fffffffffffffffefffffefffffefffffefffffefffffefdfffdfafffefbfffefb
fffefbfffffbfdfffafbfffaf9fff8f7fff6dbeedbaac2aa849e8164826055754e
5d805670936b5b7d5a5b7c5d5c7d5e5a7b5c5877585271524d6a4c496648506a4d
516a4d526b4e546b4f556c50566d51576e52576e51637b5b677f5f7285677d9074
8c9a8097a58ca4ad98a9b29faab1a1b1b8a8b9c1b2bfc7bac0cabfc5cfc4cbd7cd
d0ded1e2f5e2ebffece6fee6c3ddc495b2967694786c8a6e6b8c6f5a7b6068866e
78957f86a18e92aa9aa2b8abb6cabfc4d7d1c0d0cfc7d7d7d2e5e3ddf2ebd7efe2
b4cfbe83a08a5c7d62668468638064607a5f59715752654f51634d627360798875
7b897a8694858e9e9192a4949eb5a3b3ccb7c2dec8c5e2cc7797807e9e878aa791
75907d5b7461526957556a5b677e6e859d8f7f9a8b7995877793857995897a988c
7c9a8e7e9c908fada17e9d8e839f9084a18d7e9b85729078668269728e75536f59
617d676d89736c88726986706c8a72708e76718f777290786e8a736b87706a836d
617a655c735f647b67738c7984a18f7594846e8b7977948089a69290ad9786a28c
76927b566f594761483a523a38503840563f485e47475d484156434e6457526a5d
5d7567587060617a6569826c536d54496348344e31395336425c414b634b4f6751
4f64514b604f495e4d475e4a455d4750695359755e57755b5374594d6e533e5f44
46644a3e5a414862494a60494e614d505f4c455240485744435845455c484b604d
4e63504b614c465c47485b474c5f4b4b5e4862755f536952566c554e654b486046
344c32495f486174606273605b6e5a546b5152694f536c4f5873545e795a5b7657
526d4e556e5150694c435640495c4656675550614e576b5255694e55694e596d52
5d74585e7559556e5150694c4861443e573a5a7155667d614f6348596d5271856a
627b5e5a7d5f587d5e4f6d5150674d5a6952525e4854624b71806991a58c99b398
829f835e7c605875595a775b536b514c5f495866597482759db2a39ab39e5e7a63
59775b68826759725557694f46563c65715db3c0aebecfbd8da2916c87785f7863
5f71575d6c4f6a775d929b86dde4d4f0f3e8fffffafffefcfcfafbfcfafdfcf9ff
fbfafffbfafffafbfff8fbfff8fbfff6f5faf8f8fafbfbfdfdfdfffefefffefeff
fdfdfffbfbfdf5f5f7f5f5f7f4f4f6f3f3f5f2f2f4f1f1f3fefffdfefffdfefffd
fefffdfffffffffffffffffffffffffffdfffffdfffffdfffffdfffffdfffffdff
fffdfffffdfffffdfdfffafaf9f5f4fffefcfffffdfcfffbe1ebe2c9d5c97e8f7f
6379644e684d4d6a4b4f714c4f7449537a4d5d82566486635f7e5e5574544c6b4b
4a67484c694a546f505873545f785a60795b647b5e697d616c80646f836772866a
7487698b9f7c8da17c93a37f98a786a2ad8faab499b4b9a2b8bda6b7baa5bbbeab
bdc1b0bec2b3bfc5b7c6ccbed1d9cad8e3d2d0e2ccd3ead0b7ceb27d96795a7556
5f7c5d6b8a6a6988686c8b6c7f9d819ab69db0c9b3bad1bdbcd1c0bacfc0bacbc1
cbd9d9d2e2e1dcefebd1e6dd9db5a7607c664f6d535f7e5f6180605b7957577251
526b4b4d61455265496f7d648d9a8695a19399a5999ca99fa1b1a4adc2b1b3ccb9
a6c1ae92af9b617e6a607d6965806d4f6a574158484d625362766a82968a789083
758f8274908479958984a29698b6acaeccc2bcdcd1b5d5c896b6a78dac9c87a694
7f9c8868866e4e6a51506c555a7360728b787f9885718d77627f69698670809e86
91af978aa8908aa8908ba8928ba7917f9a87758e7b78917e829d8c617d6f708e82
7897887594847a9785829f8b7d99836d89727b947e6b846e576f57516750596f58
5c725b576a544f6451697d728da299889e9283998c839c896f88725a765d4c694d
627f635471554c684f4862495069545e7563607767647b6b748b776f86727a937d
7d99826c8a7061826758795c4566495371554663474b654c4a6049485946455441
404d3c4d5b4a3a4f3c47604b4d6450415844364c37384e3942554145584441543e
4b5e4840563f3f553e3e563c3b53393d553b4159414c5f4b4657443a4d393d543a
435a40445d40445f403754354461423f5a3b4962454d664940533d3a4d37485947
51624f51634b4a5c424e62474e624750674b576e52536c4f536c4f4f684b435c3f
4b6246556c50566a4f61755a6a7c625b7457507355517657516f5352694f57664f
54604a55614b5f6e5763775e6c846a5f7c604d6b4f516f5355725651694f50664f
4d5b4e505e51697e6f6b846f5b7760516f535a74594b644754664c44543a5c6854
87948296a795718675668172556e595b6d535d6c4f626f557b856dc0c7b7f2f5ea
fbfaf5fffefcfcfafbfcfafdfcf9fffbfafffbfafffafafff8fbfff8fbfff8f7fc
fbfbfdfefefffffffffffffffdfdfffafafcf7f7f9f0f0f2f0f0f2f1f1f3f1f1f3
f1f1f3f1f1f3fffffffffffffffffffffffffffffffffffffffffffffffffcfcfc
fcfcfcfcfefdfcfefdfefefefefefefffffffefffff5faf4fbfffbfbfffbe8f2ea
bbc6be89968c6272654e6352475e4a526e5757755950725153775361875e6a9367
6c92695e805d6180606382626685656a87686d8a6b718c6d738c6e819a7c82997d
83977c84967c83957b83957b84947a8593799eab8da8b192b4bd9ec0c6aac6ccb0
c7cbb2c3c7aec0c4abcaceb7d0d4bdd7dcc5d9dec8d6dec7d5ddc8d7e0cbd8e4cc
d0e2c8abbfa37b92755d745758715165805f779273829d7ea2bc9fb6d0b3c7dfc7
c2d8c3b1c4b1aabcacb8c8bbc8daccccded2caded2a7bbaf6c83735168545f7761
667e645b7457617a5c566d5055694d6275597181667f8d7395a288abb7a1a8b3a5
a4b0a4a3afa3a9baaab6c9b6adc4b0849d8858745d68846e4b67513c58423d5643
5a71617b918482968a869a8ea1b3a79aac9e8ea296859b8e869c8f91ac9da7c1b4
b6d2c495b4a46a897957746254715d56725c49654e344e353850387788757e8c7b
7a8b787386727890788ba58c95b19894b09798b69c7898805c7c6456735d5a7763
5b76635a75645c77685470647e9a8e90ac9e7a9586708878869d8b95ac9891a792
879d88829881738974667c67607862556d5749604c455e4b7d95888ca699526c5f
576f5f6a83705168545b735d576f57516951566e56657d675e7660546b574f6654
485f4f4e66568ba7918ba79097b59d8dab9169876d5b795d627f635e7b5f5b755a
50684e566e56546a554e614e495c494f6050667b6a7a93806f8c78627d6a546d5a
4b624e485d4a4c5f4b4f624e4e614d3b4e38374d36364e363d573e3a563d56745a
4c68514e66504e644f475d484a624a455d43415b404963463f5c3e324c2f375134
3a54393b53393b513a3b513c3e543f455b46445741374b323a4e35364a31354c32
41583e425a40445e433b583c425f433d5a3e3b553a475f454e654b4f61494b614a
48694e4c7056537159526a5250624c54634e5968535a6c56596f5861796157735a
4d6b51527056506e564c654f5068524859495061516479665c75605d7962435f46
4a664d526c514d634c5466505665525b6c595a6d5a6279676b8373556c58596851
5f6b535c68526d7965a8b0a1f3f9efeef3ecfcfefbfafcfbfafbfdfbfafffbfaff
fafbfffafbfffafbfffafbfff9fafcfcfdfffffffffefffffffffffbfcfef7f7f9
f3f4f6ededefecedefeeeef0eeeff1f1f1f3f1f2f4fffefffffefffffeffffffff
fffffffffffffefffdfcfffbf9fef8fbfffaf9fff8edf7ececf8ecf8fff6f8fff6
e2f3e3c5decba3c0ac77948054715d43634e43634c4a6a534e70585f816861856b
65896d658c6f69907172997a7ea7858ab29097bb978fb18e82a481789775759273
7a9778849e818ba487879e8284987f819079808f7888958196a38fa7b2a1b5bcaa
c0beafcec8b8d3cdbdd1cebdd8d5c4e3e2cee0e2cdd4d8c1d0d4bbd9dfc3dbe4c7
d8e3c3deeccbe6f4d3d9e8c7c1d2b08a9d7d7c91726c81626a7f6072896c7f9679
98af93b7cbb0d3e7ced0e3cdcfe0cdcedfcdc9d7c6c1cfc0c0cec1c2d3c194af90
708e6c55704f516a4c53674c4f614956634f636f5b5059465c63517276658f9382
abb39ebfc7b2c3cbb4bdc6b1c0cbbbbfccbbc2cfbebdccb9a4b6a07e92795e755b
51684c4d654b3c543a445e455a735d6c857289a1919cb4a697a99b818878949583
9da08f9ca3919ca894a1b09b99ac988aa28c506953526b555470594c684f3b553c
365037556d5580927a8287718c8e78939780949c8493a08694a78b9bb295a1bb9e
7996785c7d606181695c7c655c7c67607d6953705e6581728aa6987a95866b8272
6378676c7a69778472828e7a899581929e8a8b98846e7f6c617663425b482e4b39
5f806f8cae9e87ac9a6a907b50715e6f8c78819a87586a5a49574663705f43503f
4c59485563524758464f61514c61503d56435e7b6798baa18bb0916a8d6f476647
3d573a485f43485c413c4e345c6b54576953526350465b483a513f405b4a6d897a
a0bfaf95b7a781a39388a99890ac9d7b9383667b6a5b6c5a4b5c495263505c6f5b
5c745e536f595f7f6881a48e8bb39b7ca28b709079537159526e57526e574b654c
4c664d49634a4660475b735b49634a4d674e4d674e59725c45614a46644c47634c
47604b425945445744485b484d604d4f64514c655045624c44664e52755d476a52
3c5e4647644e445b47384b383c4f3c2b48362e4d3b395644425d4a445d48435a46
475d484c644e5169534d66505c78623b5741405d493d5a483d5a48486350435b45
40563f4c644c5670574d69524c68524d695345614b4d6855445d4a435a484e6553
556c58516854506954576c59566352616c5e5661534e5a4c6d796f9ca99fc7d4cb
e6f3eaeffaf4f6fffcf6fcfaf9fdfefdfefff3f3f5f6f4f7fffefffefffffcffff
fefffff9fdfcf8faf9f3f7f6f2f3f5eff3f4ecedf1edf1f4f4f5f9f7fbfefafbff
f8fcfffffdfffffdfffffefffffefffffffffefffdfefffdfbfffaf5fcf4f5fff4
f8fff6f7fff4f7fff4ccddca94a5926880684c6e554970554b725751785d587f64
5e856a5f866b5f866b5d84695a81665c83686990757da4898bb2978fb69b90b498
759877749673739270719070728f707791747c957880977d7d91788a9c86a2af9b
b8c3b2c7d2c1d0d8c9d1d9cad5d7cae6dfd5e1d7cedcd2c8ddd5cae1dbcde3e0d1
e6e5d3e7ead5e9efd5e2ebcedbe6c6dceac7e5f5d1dbecc8aec09a7c906b6b8061
6b7f6375896e7b8f74899d82b4c8afd3e5cdc9dbc5d4e3ced1e0cbceddcacfdecb
d2dfcdc8d5c3a9b6a5899b835e7a545473494c68424c64425a6d516977606e7764
6a6e5f8385789b9b8fb4b2a6b8b9abb4b7a6b3b8a4b9bea8bcc4afbbc7b3c1cebc
becbb7a5b39c7b8a735c6c5253654b596d524d614651684c667e647f977f8ea792
99b29f99b1a195a694989987a39e8aa7a590abad97b0b8a0acb99f92a28872866b
5c73595c745a50684e3f573d435a405f765c7b8e788b998291917994907795957b
9ca085a4ad90a8b798a5ba9ba0b99b92af91607e6265866b82a28a84a48f678470
577462809c8d8faa9b869d8d798e7d788977818e7c8f988598a08b9ba38e7d8570
77836f5f6e5b465b483f57474f6e5e7c9e9096bbaa91b7a27fa28a5e7e6954705a
556a5956675556625441493a575f525f6a5a6874668a9b89617363364d396d8875
81a18a73957a5e8163436145345133435a3e56694d5260463e4c334d5b444c5b46
4e614d4158443956445e7f6e8bad9c91b6a58bafa185a99b92b2a39ebaab94ac9c
7f948370816f6475625667545b6e5a455c484a66507a9b868db39e86b09c96bda8
80a38b66866e68866e617d66607963566f59455d47667e687d957f7c947e728a74
67806a59755e58765e54745c55755d4d69534f6853475c4b516451758777839683
6e8573597660496a554c72594c745c4c72594f705b4e6a544b604f475c4b567162
5b77685e7a6b597664536e5b506c56516a555069533e574238513c3b5741334e3b
3a55443753443753453d5a484d674e435c3f435d42486249425e4745614b486553
3f5c4a4e6b59415e4c3d584745604d4e67544e6752526a545a6f5c4e5c4f58645a
515e5449594e55675b607167667a6f72867bc3d4cceaf9f2f8fffdeff8f5f6faf9
fffffffcf8f9f3f1f2f9fbfaf8fcfbf8fcfbf8fcfbf5f9f8f1f5f4ecf0f1eaeeef
f1f5f8f0f4f7eff3f6eef2f5eef1f6eff2f7fffdfffffdfffffefffffeffffffff
fefffdfefffdfbfffaf2f9f1f9fff8f8fff6d6e4d396a493657663627360728873
69876f6a8c736f91786f9178698b72608269597b6255775e6e9077799b8286a88f
8eb0978aac937fa18871937a698a6f6c8b6c6b88696b86676d876a758e71839a80
92a68d9bad97bac9b4c5d2c0d5e0cfe3ebdceaf0e2e7ede1e0e6dadddfd2fef7ed
eae0d6e2d8ceefe7dcfaf4e6f2efe0e9e8d6e6e9d4fbffe9eaf3d8e6f0d5e5f2d4
c9d8b998a9877e8f6d7e917370836d8194818497849bae9bc9dac8d7e8d5d5e6d3
e7f9e3ceddc8cfdec7dbe9d2dcead3b8c6ad8290776270575d705458704e4a6441
50684864785c6877606874608b9282bbbfb1c8cabdc1c1b5c3c4b6cdcec0cacdba
bec3adc1c6b0ccd6bec8d6bfc7d6c1a1b09963725b48574055644d55674f42543c
6d7f697f927c8fa28c97ad989db39e95aa978ca38f91a28fa4a995afae9ab5b7a2
b9bea8b6c0a8a2b0977e8d765b6f56586f5551684e455c42465a4161735d849680
95a48f929e889fa1899c9c829c9e86a9af95b8c2a7b8c8aba9bda197b09288a285
7c9a7e87a58b83a18973907c6b867375907f9bb3a38aa191879c8d8fa1919cad9b
a3b09e9fab97a3af99aebaa29ca892717e6a465744354a375069567a958489a898
91ad9e94ad9a778f796075626376626677657e8d7a8f9c8b6d7a688c998883927f
849784627a643f584356745c7e9e878dad95758e784e644d40533d63775e899b83
8c9c8278886e6a7a6050624a5d745a556f56405e4650715c789e897ea590668d7a
6c8e7e7493847b9788809b8a7f98856c816e5a6d5a586b575a6d594a6049415943
607c668eab9793b49f8bae9a98bba566866e55735957755b4e6a51536d544b634b
40563f7b917a8ea48d98b098849c846f89704f6b525a785e55735956745c506e56
526e574b624e61746099aa98adbeab8fa28f6e877166836d5c80665c82695e856a
577961506e565067534a614d839e8d8da89989a49576918069826f657e69607963
567057566f594a634d40594456715e5873624f6a59466152435e4b536d54466043
435d42425c433d594244604a4964533e59484a6554425d4c405b4a45604d49624f
415a453a533d39503c495b4b4b5d4f44594a475e4e556c5c556d5f566e60627a6c
7c9286cfe0d6f7fffbf8fffdf0f6f2f6fbf7f9f9f7f6f6f4f8faf9f9fbfafafcfb
f9fbfaf7f9f8f3f5f4eeeff1ebeceefafbfff7f8fcf2f3f7eff0f4eff0f5f2f3f8
fffdfffffdfffffefffffefffffffffefffdfefffdfcfffbfbfffaf9fff8e3ede2
a8b4a67b87797583728593828da08c728b75718f77738f786e8c746b87706c8a72
75917a7c9a829db9a29ab8a094b09982a088718d7665836b65816a69856e6d856b
6e856b72896f7b92788fa28ca7b9a3becdbaccd9c7e4efdfe6f1e1e9f1e2ecf2e6
eff2e7f0f2e7eff0e8f0f0e6f7f0e6f1e9def2eadffbf5e9fefbecf8f6e7f0f1e1
eff2dff0f8e1f6ffe8e6f3d9bac8ae8b9b7e78886b7a8d6f82947c8ea09291a298
c5d6ccf0fff6e4f4e7ddeedee7f8e6e1f2dfd4e3ceebfae3d0dec5818f75526144
5e6d4e67765757684855694d5f735862745c6978638e9988c0c8b9d3d7c9c7c9be
cfd1c4cfcfc3cfd0c2ced1c0cdd2becfd7bfd7dfc7dee8cfb8c6ad7b8b7152614a
5867505d6c57505f4c5465526d7e6c7485738fa08e99aa989bac99a2b3a09bad97
98ab95aebda6aeb6a1bbc0aac1c9b4b8c2aa9dab947d8c755f71594d6148455940
3e5239495b43697b63889581919e8a94a08c9ba48faaae95abaf94b0b69cbcc5aa
c2cfb3b7c7ac9cb094849d80668065839f868ba79067836d57705b708976889f8f
90a5968d9f918fa0909cad9bb0bfacb3c2adabbaa3b0bea5bdcdb397a68f586a52
40533d4b614c738a768ea79488a09096ab9a96a4938691807b86758e99889ca997
a8b5a3acbba88fa08d7c8f7b97ad9892ab9548644d496951789a816c90767a9880
6876655b645365705f98a490c1cebabbc9b297a68f798d725f775d6d876c4d6b51
40624770967d81ac9168927a6289746c88797d95877890807089767087735b735d
485e494e644d546a533951395e76608ba48e859e8986a18e92ad9c7e9b8768866e
5e7a615672594c664d4860484d634c647a638ca28b889b858ba18a7d937c6c846c
546e55536f564d69504a684e4b6b5344644c546d57788b779baa97a6b5a295a491
778a767a937d6b8b735e80675a7e64587a614c6a5248644d57705b94ac9c9eb9a8
99b4a3819c89718a756e8771668067577158617b62556f564a634d819a857f9a87
718c7b617c6b546d5a516b524d674a4f694e4b654c415d464c6852587362526d5c
546f5e4f6a594d6857516c59566f5c566f5a526b554f68524a634e47604d3e5946
445f4c526f5d53705e54715f658071566e6085998da7b7adb7c4bbd2dcd4e7eee7
e8eae7e3e3e1e8eae9e8eae9e8eae9eaecebedefeef0f2f1f3f4f6f5f6f8f6f7fb
f4f5f9f0f1f5edeef2ecedf2edeef3fffefffffefffffefffffefffffffffefffd
fefffdfcfffbf6fdf5dae4d9b0baaf8f9b8d8a9688909e8d8b99887a8b79798e7b
7c937f8095828097838398858aa18d99ae9ba3baa6c7dcc9b9d0bcabc0ada3baa6
a7bca9abc2aeaec3b0adc3aeb9cab7becdb8c4d3c0ccdbc8d6e3d1deebd9e5f0e0
ebf3e4e6ece0e9efe3f1f4e9f7f8f0f9faf2fafaf2f8f7f2f9f6eff1ede2fefaee
fffff3faf8ebf3f1e4f6f7e9fdfff1fefff1f2f9e7c8d1bca0ac96919f8885947d
788a727f917991a290afc0b8e2f2f1f2fffeeaf9f4f5fffdf0fff5e8f6e7f6fff3
d7e6d19eae946a785e5b6a4b5c6a495967445f6d496c7b5a5d6b545e6b5a808c7e
bcc7b9e2e8dee0e3dad6d9d0dadbd3d2d4c9dcded1d9dbcdd2d7c3dde5cee7f1d8
c9d3b899a68a5b6b4e5e715557694f4a5c464f5e4b6573647886797d8a80839086
9da99da5b1a3a6b3a2adbaa6a9b7a0aab89fbfcdb4c1cdb7beccb5b4c1ad9baa93
76887255675142553f3d503a3d4f394e5d486e7b678f9c889da6939aa3909fa694
adb29eb2baa2bcc5aac7d1b6c9d6babbcbb0a0b29882967b6d846a5d755b647c64
647c66667d696e8370788d7a8294847f9080a1ad9faab7a6abb8a6aab9a4b9c8b3
c9dbc3bdd1b6a0b79b586f53435a40556c52667c65738972778d78758875929f8e
8b8d7fa5a696a3a494adb1a0c0c9b6b7c4b09cae987e947d8ea88f86a289416247
43654a6e9075779b7f84a88c7f98825e6458827f76a6a69cc5c9bbd6dfcccad8c1
9baf966b83697e9b7d5f8061496e4f5c83667aa38575a0846691766c8f7779927f
91a39390a2928398857d957f667e664f674f50684e3f573d4860467c947c92aa94
768b7881948199ab9b859a878da78e7f997e66806558705642593f5b6f5694a88f
879b827b8d7574886f798d74738a706f876d567055506a4f4a684c476b4f3d5f44
6682698da38c88958186927e8f9b877f8e797b917a6e886f4c6d5246684d55775c
47684d4a684e738f7888a18e94ad9a93ac99819a85728b756c866d627c63556f54
536d524e684f5670579db6a0a2bba697b09d87a08d718a755670555872555a7459
4e684f435c465a735e7890807f9787748c7c667e6e516959435c49425b484b644f
546d5755715a4b685253735c56765f5e7e676787725e7e6953735e5a77655e7666
788f7f7c8e827683798791889ea59da7a9a4a8aaa5a2a4a1a3a5a4a7a9a8b0b2b1
bec0bfd0d2d1e0e1e3eaebededeef2f0f1f5f3f4f8f6f7fbf7f8fdf6f7fcfffeff
fffefffffefffffefffffffffffffffefffdfcfffbd2d7d1aeb5ad9299918c968b
8a9489828e8087938594a2918b998a8e9f8d9aa899a4b5a3b6c4b5c8d9c7deecdd
e8f9e7e0eedfe1f2e0e7f5e6eafbe9eefcede9fae8e5f3e4e1efdee9f4e4e7f2e2
e4efe1e4ecdfe2eadde3e9dde3e9dfe6e9e0f3f4ecf6f7effbfcf6fffef9fffef9
fffcf7fbf8f3f9f6effdfbeffffff3fffef1f9faecfefff1fffff3f3f7e8d9e0d0
bcc5b4909b8a74816f7c8b788495828b9c89acbdaad7e8d8f4ffffe6f6f6effdfd
f5fffff5fffdf1fff7dae8dbaab8a771806b606f58556349596849647251667451
63714d616e50838b7cbac1bae5eae4e4e9e3dfe1dce9ebe6edeee8e1e2dcebece4
e3e7d9e6eadbeef6e1e3edd5b5c2a67b886c5564455063454f624653654b586a54
5c6a5967756886938aa7b2acafbab4b7c1b9b5bfb4b3bbacb5beabb6c0a8bac4a9
c4d1b7c8d7c0abbea88a9d896e816b576a564457413c4f393d4f395d6c57808d79
9eaa96a4ad9aa3aa98aeb2a1bcbfaec1c6b2bfc9b0c7d6b9cdddc0c2d2b7a3b59b
81957c677e645b715a5c725b5b715c596e5b7386738192807f907e909e8d96a392
abb3a4c3ccbbc3cfbbb6c3afc7d9c1daeed5a7c0a3587255354f32405a3d536c4f
556c525b6f566d7c677a87758d9484969384b3ad9db6b4a5c9ccb9ced7c49fae97
7b917a7a94796a886e3f604340624771947682a4897c9d807293785c725d88887e
a89f9ad2cdc7eef0e5dce5d4a9b8a37f967c708d717798794368475e866493ba9b
82a98a72997c789c806b89718495839eab9aa6b4a39bac99889e876f876d577156
4b684a334d326b856a859d837a907980917e94a190a6b1a3b5c3b29db39c7f997e
627a60556c5245594073856da7b9a1788a726d7c65687a627e90787f937a7c9379
556d534f674d4a684c456c4d4a71527b997f94ab917d8a767e8772959c8a919d87
8b9d876e866c49654c4465484d6f544063454a6c517d9b817f9883879e8a8ca38f
87a08a79937a678166597358536d504e684d4b654a688267a0baa1a2bba59cb39f
90a793778e7a607a5f5e785b597358466047405943657e6992aa9a9fb7a79bb2a2
8aa2926d8575536c594a6350506954556e58516d5656765e7191797d9d867d9d86
82a28b7d9d8674917d748f7c7a917faec3b4b8c8bb929e9280887d898e8791948d
92938e8d8f8c888a898385847f81807f8180838584898a8c8d8e909c9da1a3a4a8
aeafb3babbbfc3c4c9c9cacffffefffffefffffffffffffffffffffffffffefffd
fcfffbe1e6e0c0c7bfafb6aebac4b9c3cdc2bac4b9b5bfb4bcc7b9c3cdc2c0cbbd
c0c8bdc1ccbecdd5cad6e1d3e1e9dee3eee0ecf4e9eef9ebf0f8ede7f2e4e0e8dd
dbe6d8e3ebe0ebf3e8f0f6eceff2e9ecefe6ecede5eff0e8f6f7effefff9fffffa
fbfaf5fbfaf5fcfbf7fffbf8fffdfafffefbfffefbfffffafffff4fdfff1f8faec
fbfff0fefff3edf4e4c6ccbea2aa9b78837397a49398a4967d8b7c8c9d8dccddcd
f4fff6f1fff5f5fffff0fffce6f5f0f3fffbf7fffdbfccc2748275546251596654
4c594554604a67745a69765a667357889577bac3aeeef3edeeeff1eeeff1f0f2f1
efefefececeaeceee9f1f4edeef1e8e7eddfe8efdfd9e2cd9da99158674a475639
5d6e4e4b5e3e596e4f5d6f555c6e587c8a7bafbcb2c9d4cec3cecac7d0cdc0c6c2
bfc6bec2c8bac2cab5c7cfb7cad0b4c0caaf9db09a7d957f5d746049614b415643
4558445568546a7b6894a18faab5a4b9c0aeb7bbaab6b9a8c1c2b2cdcbbccccfbc
ccdac0c9debfc0d4b8a8bca1869a7f667d63586e57546a55566c576c7f6c70816f
8293818b9a878f9e8baebba9b6c1b0b9bdaec9cdbcd3dcc9d2e0c9c4d6bea0b79d
637d602d4a2c3251313f5c3d476243576e526e7e6484907aa0a893aaad9ac3c0af
c7c2afc8c7b5d4d9c3afbda66b7f645a74596a896a45684a395c3c6e917368896a
5370546882656f876d909f8aaca9a2c0b8b5d9d6d1dde0d7adbaa96f826e587259
6283664568484469477398769cbf9f8eaf9087a48890aa8f8da08aaab5a4b7beae
bac6b2a4b39c81957c6c85685d7a5c4c6b4b4663457b987a869d837c8e789ba896
bac0b2c6c9bed4dccdabbfa6758e71637a5e52694d5f735897a98f9dad9374846a
6472597a8a7092a48a8da18671886c516a4d4a63464a694a3f6745668e6c82a084
7f967a838f79969e87a7ac98a8b099a2b099697d62516e5258795a486b4d3e6342
5a7f607a9b7e8da58f8da28f95ab969cb49c8ca48c698167536d50526d4e4b6548
466043748c7289a189859d858399848196836b816c5e785d567355506a4f425c43
49614b748b7797ae9e96ad9d7a8f80738a7a6178684f66544b6451546d58547059
4d695263816989a78d92b0987f9d85809c858ca58f8fa6928fa491a1b2a0beccbd
c1ccbeb7bfb2c4c7bccdcec6bfbfb7aeada8c3c3c1bebebeb3b3b3a4a4a4949494
84848478787a7171736c6b706e6d7272717676757a7a797f7d7c82fffefffffeff
fffffffffffffffffffffffffefffdfefffdfcfffbf8fdf7eff4eee4ebe3dee5dd
dbe5dae0e7dfe2eadfe0e6dcdee1d8dcdfd6dee1d8e3e6dde4e7dedee1d8d8dbd2
e0e3dadfe2d9e0e3dae6e9e0edf0e7eff2e9ecefe6e7eae3f4f5eff7f6f2f9f8f4
fbfaf6fdf9f6fbfaf6fcf8f5fbf7f4fffefbfffefbfffefbfffefbfffefbfffdfa
fffbf8fefbf6fffff4fefff3fefff3fafff1dde4d4b3bcab9aa293949f8f9ca89a
8f9d8e93a194b3c3b6e1f1e4f4fff8f1fff5e3f5e9f0fff5f5fffaf1fff6c1d1c6
839086606e615866575563545c69586976656671605d68577c8874bdc9b5e8f4e0
eef6e9e4e6e5f5f4fafaf9feeeeef0ebebedf4f6f3f5f7f2ebf0e9fcfff8e8f0e1
b3bcab727e685462495a6a4f5e6e51526547617657586c50687a6297a895c2d0c3
cfdcd3d2ddd9d7e1e0d6dcdcc8cecad2d7d0dce2d4d5dac6cad0b6b7bc9e919b80
657b64526d5a445d4a39523d374c3b495c49768775a3b29fbdc8b7b6bfaeb8bfaf
c7cbbacecfbfc7c8b8c7c5b6cacdbad6e9cdc7e0c2b0c9ac8fa78d70876d5a7059
5369545568555a6d5a6b7c6a7482719ba897acb9a7a7b4a2bac5b4bbc4b1d1d4c3
c4c7b6d1d9c4dfedd6a7bba2486046223f23395839446546537252637e5f8ea286
99a78d8c967da4a992b5b7a1cccbb7d0d2bdd1d6c0b6c2aa74866c4d6649577657
5174543f6242597c5c4b6a4b5c76597c937782947a99a78eacb3a1b2b2aae3e2de
ebeee7aeb8ad72837360786259775d4b6c4d3c5f3f7c9e7d87a6867a97788da488
8b9d838a9881afb8a3cbcfbec4c8b7b9c2ad93a188607459526b4e526f50426141
6584647993768aa18797a691b1baa9d9dbcee6e3dad1d3c6b8cab46e876a647b5f
4b62466d7f65a1b3997381685d6b5269775e98a88eafbfa5a0b4996a7e63576e52
4d6649526f51355d3b79a17f7e9d7e647b5f8b977fb2baa3b4b9a3b4bca5a4b299
55694e5670536d8e6f4a6d4d496e4d779c7b86a488a1b7a29bae9aa4b7a3b1c7b0
9db49a6c8568506a4d536e4f546f504c6748869e84859c828197808a9d8794a794
829883526c514b684a49634847614858705a8095828fa4957b9081788a7c6f8475
5c7162475e4c465f4c556e595a765f56725b5c765d8ea88f9cb49c859d85889e89
a3b6a2b3c1b0b4c1b0bbc6b6bac0b2b5b8adbfc1b6d1cec5cbc8bfc4bfb9ccc9c4
d1d0ced7d7d7e2e2e2ebebebf0f0f0efefefeaeaece7e7e9d0cfd4c8c7ccbab9be
a9a8ad9a999f8f8e94fffffffffffffffffffffffffffffffffffffefffdfefffd
fdfffcfbfffafafff9fafff9fafff9f8fff7f9fef8f9fef7f6f7f1f5f6f0f3f4ee
f1f2eceff0eaecede7eaebe5e9eae4e9eae4eaebe5ecede7eff0eaf1f2ecf3f4ee
f5f6f0f7f6f1fffdfcfffcfcfffcfcfffdfcfffcfcfffdfcfffcfcfffdfcfffefd
fffefdfffefdfffefdfffefdfffffdfdf9f8f7f6f1f6faecfbfff3f9fff2ccd4c5
a8b0a19aa5959da89aa3afa1829083a7b7aad2e2d5eafceef4fffaf4fffaf4fffa
f4fff8edfeecb7c6b37988755f6e5b5b6a575664535e6a5c727e70717b70646e63
768077aeb8afdee5dee9f0e9e6ede6e9eeeaecebf0f9f6fdfcfbfffafafcfafbfd
f8faf7f5faf4f8fff5c0cbbd818e7d5764525c6b565d6c55495b414e6046697c60
596d51798d72aec0aad9ead8e5f2e8d7e4ddd1dcd8d4deddd8dedcd9dfdbdfe4dd
dfe5d7cbd0bca2a7907d8166656f545168543c5746354d3d465f4c677c6d8ea090
b5c6b6d4e2d1ced9c9c5cebdc4cbbbd1d5c6d9dacad5d6c6d7d5c6dadfcbc4d8bd
abc8a98ca689688267526a524b614c4c61504e60505869597b897aadb9abbac5b5
a7b2a1adb8a7c6cfbccbd2c0d9ddccd5d9c8d0d9c68e9b874a5d473b5339324f33
365536628162658264819a7c9db094a1af95a8b196b9bda4c1c5accad2badae6ce
b9c9af6d81664962455673554d6e4f2a4d2d31523357765770896c8193799aa68e
a8ad97b3b5a0c9cabadee4dacfd9d1c4d1c78a9c8e708775526e574a6b50406142
5a795a5b7859677e617c8f7396a28aaeb39dbfc0aecac9b7c7c8b6d7dcc8c9d2bd
5d6b525b6f5450694b536e4f6885668fac8e97b0938b9f86b3c0acccd3c3f0f0e4
f4f0e7dfdfd3b5c4af738b7162795f4a6147a4b69e7c8e7677856e57654e85937c
a7b69faebda695a990697d64637a6071896f405d414d72517da2815c795b708469
a3af97b7bfa8b6bba5c8d0b985937a74886d627c5f5c7d5e476a4a5f8262a4c7a7
adcaaea3b6a2b6c5b2b8c9b6c3d6c09ab1975c7558597356617c5d476243748f70
7e967c82997fadc0aa92a48e9eac9b778a765771564865473650354b634b5f7560
879a878d9f9193a5978e9e917e9082586a5c4f64534c6351465f4a536f584e6a53
6b816a92a58f9fb19bacbba6b7c4b2b5c0afbdc3b5bfc3b5ced0c3d3d1c5d7d3ca
dbd4ccdbd4ccdbd2cbdacfcbd6cecbcdcccacececed2d2d2d7d7d7dcdcdce2e2e2
e5e5e7e8e8eae9e8ede9e8ede8e7ece8e7ece7e6ece7e6ecffffffffffffffffff
fffffffffffffffffffefffdfefffdfdfffcfdfffcfdfffcfafff9fcfefbf9fef8
fbfdfafbfdf8fdfcf8fcfbf6faf9f4f8f7f2f6f5f0f4f3eef2f1ecf1f0ebf1f0eb
f2f1ecf4f3eef6f5f0f8f7f2faf9f4fcfbf6fffbf8fffcfefffbfefffcfefffcfe
fffcfefffcfefffcfcfffdfcfaf6f5fffffdfffffdfffffdfbfbf9f8f8f6fffffd
fefffafbfff6dde8d8bcc7b7a5b2a198a5949daa9998a4967b897ac0d1c1dbeddd
f4fff8f4fff8f2fff6e8fdeeddf2e3d4e7d4a0b29a6a7a5f5161475e6d5666755e
67766363705f54605479837ab9c3bbe8f1ece8f1f0e5eaedf1f6f9f1f6fae2e5ea
f2f1f7f2f0f5f4f4f6eef0eff0f4f3fbfffbdae1d9919d91727f6e6675625c6d5a
5b6d5757695355675162745e7587717a8d77b0c3addff0dee2f3e3d7e4dad6e3da
dbe6e0dce7e1d4ddd8e7eee7dce4d9afb6a689917c7a826a696f554b573f425746
4560514c64565d7366889c90b9cbbdccdacdc3cfc1c3cbbeccd2c4d1d7c9d6dacb
e2e4d6eaeddcdfe2d1c6cfba96af9283a283628064415d443d56405065525d6f61
5c6c5f9daaa0bac6bab9c4b6b6c1b1c7d2c1c1cdb9bdc9b3dae3ceecf3e1b8bfad
85917d55644f3b4c39415740455f46405d415e7b5f7c96799fb398a7b79ca4b195
bbc4a9d2d6bbccd2b8d7e7cdc4dbbf7d957b4963465572565170513a5b3e446344
59765a647d60788a72939f87a8ad99afae9ac1bbabdbd9cacad6cabcd0c4798f82
859d8d45624c4361493a5b40547256597356647b5e7b8b70949e86adaf9ac2bfae
d5ccbdded7c7e7e8d6dee6d1929e8857674d54684d496043627b5d647f608fa88b
97ae949fb19bc3cebde9eddffbfbf1f1ece6f2f2e88a9b88546c52516750647b61
a3b6a08799817c8b766e7d669ba894b4c3aca4b6a0879b82677d665a72585f775f
4360447a9d7f86a98978927784987dacb8a2bbc3acc6ceb9bbc5ad95a48d748b6f
6885695c7d5e57785b74957693b1959eb69cb2c1aebfccbbc5d4c1c9dbc599ac96
5c745a5b74575c7758516b4e728c6f738a7098ab95b0c2acabbaa7a2af9e7e8d7a
536d524463444a64494a624a6d836e8192809bab9e9fafa298a6997c8c7f5e6e61
526756536a58516d5755715a58715b80917ea8b4a0b3beadbfc8b7cbcfc0caccbe
d2d0c4d3cfc4d9d2c8ddd4cde1d8d1e7dcd6eadfd9ece1ddeee0ddeae0ded6d2d1
d4d4d4d4d4d4d5d5d5d7d7d7d8d8d8d8d8dad9d9dbe1e0e5e1e0e5e1e0e5e0dfe4
e0dfe5e0dfe5fffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefefefefefdfffcfdfdfdfcfefbfcfcfcfcfcfafffffbfffefbfffefbfffdfa
fffbf8fdf9f6fcf8f5fbf7f4fbf7f4fcf8f5fdf9f6fffbf8fffdfafffefbfffefb
fffefbfffcfefffbfffffcfffffcfffffdfefffdfefffdfefffdfefaf9f7fcfcfa
fefffbfdfffaf8fdf7f6fbf5f9fef8fbfffad4dfd1b1bfb08f9d8e94a2939eac9d
889989a2b3a1efffeeeeffeef4fff4f4fff6f2fff6e3f8e7c6dbca9aaf9e768c77
65785c67785854644752624766745d6a77637e8979aeb8adecf6eeebf4eff3f9f9
f9fefff4f9ffe9edf6ebedf9f4f7ffeff0f4fafcfbf5f7f4f1f6f0e5ece5a9b5a9
737f716d7e6c6374625265515164505f725f6073605b6d5d71827294a595cedfcf
d1e2d2d8e8dbe1f1e4e5f2e8e1eee4dfece2e1ede3dfebe1cdd7cca6b1a1798271
57604b4c563e4e583f4d5b44475c4d52685c7084799baca2bfcfc5d0ddd3d0dcd0
cdd8cacdd5c8d8ded0dfe5d7e0e7d7e3eadadce3d3c0c7b59baa93789275557657
3e5c403a563d3f58434b604f6d7d72929f95c5d0c8c7d1c8c7d1c6c1ccbcc3cebd
d2decad8e4cccedac2a1aa976671603b48363e4d3a394a38374a36546a556b816c
b1c7b2a2b59fa2b49ab0bea4b8c5a9c7d0b5d1d7bbc8d2b7d1e8cc819e824c6a50
476549436147405e424b674e556f545a705974866e919e8aa1a994b2b3a3d0caba
dad0c4c6c4b7a9bbab77948285a29032523d45654d3452384d6a4e587257657c60
7e8e749ba58db3b6a3c5c2b1d7cdc1e8dacfeee4d8ebefdeb3bfa95d6b54536349
54684d596d526d846871886c94a88fa1b39bbdcab8d9e1d2fefff8fbfaf5eeeae7
f2f5ee7e8f7d4c664d465e48738972879a867e907a78897682947eaebdaabed0ba
97a895738670677d68556d55536b555c765d8dab917a977b81978094a68ebac6b2
cad3bedde9d5b5c3aca1b49e6f896e5c7a60496a4d5d7b6187a48891a991a6b9a3
c5d0c0cdd5c6d6e3d2d3e2cf96a9935e765c5a7258516b4e5670556f896e7f967c
acbfa9bccbb8b7c4b3b1b9aa85928150684e466546516b50526a52748773869785
a9b7aab4c2b5aab6aa7d8b7e6676695a6c5c5d7462617d6755715a637b6596a190
bec2b3c9cbbed2d2c6dcdacedbd7cce3dad3e5dad4e4d9d3eadcd9f1e3e0f8eae7
fdefecfff3f2fff6f4fff7f6e8e4e3e5e3e4e2e0e1dfdddedbd9dad7d5d6d5d3d6
d3d1d4dbd9dedad8dddad8dddad8ddd9d6ddd9d6ddffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffefefefefefefefefefdfdfdfdfdfd
fefcfdfffffdfffffbfffefbfffffbfffefbfffefafffcf9fefdf9fffcf9fefdf9
fffdfafffffbfffefbfffffbfffefbfffefdfffcfefffcfffffcfffffcfffffdfe
fffdfefffdfefefefcfefffdf9fef8f4f9f3f8fff8f9fffbf5fff6e1ebe2cedace
a4b2a596a797a0b1a1a0b2a29fb0a0c9dbcbf4fff4eeffeef0fff0f2fff3f2fff3
cfe5d095ab96687e69546c565369528093775666495363486a7a607c8a73a9b6a4
dce7d9e5efe4f5fff7e6efecdfe5e5eaeff3fbfffffbfffff8faffeceff6fcffff
f6fbf4f4fbf3c8d2c77e8a7c6273616376624d634e556b564d654f546b57657a69
667b6c728478a8b8aee8f7f0e8f7f0dfeee7ddede3e4f4eae1eee4d6e4d7d8e6d7
e5f3e2c1cfbe929f8d667361586551525f4b47544049564256645364756b7a8b83
a6b5aecddcd5dae5dfcfdad2d0dad1dee6dbdfe5dbdae0d4dde5d6e3ebdcd2ddcc
adbaa88d9a867b8f766582644d6e4f43614749654e5067555e73648f9f95c5d0c8
c1cbc3bec8bfc6d0c5c2cdbdbfcab9d4e2cbc8d6bd8c9c82495642495746414f3e
4657473c4a3b495a4a93a192b9c7b6c4d2c1b0bfacb1bfa8bdc9b1bec8afc5d0b2
dde6c9e9f8db95af94496a4f3d5b4148664c314d3438543b6078606a7d67748670
93a08cb2bba8b2b6a5b2b3a3ccc9bac3bdaf888c7d6c83717b9c873e5e494d6d56
2d4b314f694e61795f63775e8393799fa991bbc0accacbbbd5d2c3e3dbd0f1e4dc
f2ece0cdd6c570826c51634d55674f586c53687c6166785e81937ba1b099b8c5b1
d6e1d1ecf4e7fefffaf1f2edf6f6f4d6ddd67385754d66504b644f7088726b806d
74877380938090a38fb6c7b5c2d5c18fa28f637964657c68526b55536c57849d87
859e8870866f7f917b9fae99c4d0bcd2decaccdbc69caf99859f865e7c6244654a
3f6045637f668ca48c9fb19bbac7b5d3dbcedae0d4e8f3e5d8e6d595a894637962
566e56455f44587257718971a2b8a1b2c5b1cbd9c8bac5b7c1c7bb848f7f51694f
4b6a4b425f435b735b6e816d9eac9bb4c0b4c8d4c8c3cdc2828e827381745f7161
637a686a86704f6d556a826ca5ad9ecaccbfd5d3c7dbd7cce5ded6e3dad3eadfd9
eddfdcf3e5e2f7e9e6fdefeefff5f4fffbf9fffcfafffcfbfffefbfcf8f7f8f6f7
f4f2f3efedeeeae8e9e5e3e4e1dfe2dfdde0dad8dddad8dddad8ddd9d7dcd9d6dd
d9d6ddfefffdfefffdfefffdfefffdffffffffffffffffffffffffffffffffffff
fffefffffdfffffdfffffdfffefcfffefcfdfffffdfffffdfffffdfefefcfffefc
fdfdfbfefdfbfdfdfbfefdfbfdfdfbfefdfbfefefcfffefcfffffdfffffdfffffd
fffdfefffcfffffdfefffdfefffdfefefefefdfffcfbfffcfbfffdf9fffbf5fff7
f6fff8f3fff6e0eee1bdcdc0a3b3a691a395adbfb1a0b2a49cb1a2d8eadaf2fff6
f2fff4e6fbe8ecffedc4dcc492aa926f876f61795f5d755b5d755b5d745a606f5a
6d7a666e7b67929f8dd5e2d1e9f5e7e1ebe0edf7eedfe6dfe7ede9f3f9f7f9ffff
f7fbfef3f6fbf5f8fdfafffff8fff5dfead996a391606f5a62745e5a7157496147
506a4f546e5558715b5b74616980708fa398c3d4cee6f5f2f2ffffe4eff1ebf6f8
e9f5f3e0ede6dfece2ddebdac5d6c3a9bba377896f5e70564a5c444c5e46566754
5a6b595a6c5c5e6e6392a19ab6c2bed3dedad6e1dbd5dbd7dae1dadde2dcd9ded7
e0e6dcd9e1d4d4dfcfccd9c8adbeab879a8670866f6d876c4a694a547556547258
4e6752657a6b99ab9fc1cec5cbd6d0bec7c2d0dad2c7d1c8c4cfc1d4e1cdb7c7ad
72826746583e3245314d5f4f45574738483b414f42808c80cdd7ccd4dcd1b8c0b5
b5bdaebcc5b2c4cdb8d0dac1dfecced6e3c5b2c2a54d674c44624a35513a2e4731
3c523d536652707f6c8b98869ca7969fa897b3baaabdc4b4b6baabb2b6a7a0a495
758270647d683858404a685037533a4e664e5d71586978618d99819ea691b7bca8
cccfbed6d7c7deded2eceadef0ede4e8ebe0a0b39f516b52546a535a71575a6e55
5b6d556b7a638e9b87b1bda9d4ddcce9f1e4fcfff8fbfffaeef3effcffffb4bfb9
4960503d59434f6a57667f6a6d84728297849db2a1a4b9a6c1d3c3c5dac793a897
5f76625c75624d695357725f9cb5a08a9d898b9a878f9c8ab1beaccddac8cad9c6
8ea48f6a866f56765e4d71573c5e45517159738c76879885abb6a5c1c7b9dde0d7
e6e9e0f2faefd1ddcf8fa08e647a654f674f415b42637d647d957db0c6b1b9cab8
d5e1d3cdd5cac0c3ba6f7a6c556d554766473a573b587058798a77afbdacc6d0c5
d6e0d5dae2d78b958a79877a637464637a6867836d4a6850708872b4bcadd8dacf
e0ddd4e4e0d7ece5dfeae1dcf1e6e2f3e8e6fdf2f0fff4f2fff8f7fffdfbfffefb
fffefbfffffdfffffdfffefffffefffefcfdfbf9faf7f5f6f4f2f3f1eff2f0eef1
e2e0e5e2e0e5e1dfe4e1dfe4e1dee5e0dde4fefffdfefffdfefffdfefffdffffff
fffffffffffffffffffffffffffffffffefffffefffffdfffffdfffffdfffffdff
fdfdfdfdfdfbfdfdfbfdfdfbfdfdfbfdfdfbfefefcfefefcfefefcfefefcfdfdfb
fdfdfbfdfdfbfdfdfbfdfdfbfdfdfdfffdfffffcfffffdfefffdfefefefefdfffc
fbfffcfafffaf6fff8f8fffaf6fff9e8f8ebd1e3d5b9cbbda4b9aa9aafa0a8bdae
97ac9db8cdbeeafff0f1fff5ecfff0e6fbe8d3e9d492aa927d957b667e64587154
546d50577052647d5f738a70717f70899589c4d0c4e6f2e6d8e4d8d6e2d8e4eee5
dee8e0f5fcf5f1f7f3f4faf6f9fffbf7fbfaeff3f2f2f6f5fbfffbbac7b574846a
56684e61755a576e51506b4c526f504a694a5c795d637f6876917e9cb4a7cde2db
eefffff0feffdeebf1edf7ffe4eef7dee9ebe0ece8e0ede3c8d7c493a58b66795b
56694b465b3c43573b4c6349546a555b705f73897c95a69ecdd8d4d2dbdad7dddd
d7dddbdadedddfe1dedee0dbdaddd6e6ebe4e3eee0cedacca5b6a48197826f8872
627e655573573d5e4149674b526e55657e6991a697c2d2c8d3ded8c7d2ccc4cdc8
cdd7cfdbe5dcdde9dbb8c7b273856b43563a394d32364e382d443234493a5f7165
95a197c2ccc3d6dbd5c1c4bdd0d1cbbdbfb4bfc3b4d7dfcae3f0d6d0dfc28f9e7f
4356383d553d3b543e3249353144304d5b4a7b887699a1929aa1919ea496a8af9f
b7bdafb9c2b1b1beada7b6a38b9c8a667c6748644d47634a304a3142593f5b6d55
6b775f9da58ea4a993b3b6a3c5c6b4d3d6c5dcded0e9ece1f1f7ede3ebe0c7d5c8
6d86714f6d55425e455b735b5d705a5a695297a38fafb8a7c2c9b9ecf0e2f4faf0
fcfffafbfffdf6fffcf8ffff91a09b3b53453a57434f6c5a597461758d7d8fa694
b4c9babacfbecee3d4c1d8c696ad9d5d76634d68574c69555c796797b09d919f8e
a2ad9ca7b2a2c6d1c0dae7d6c3d4c168816c5171594b71584c7459466c5367876f
788f7b83927fb8beb0ced0c3e4e5ddf0f3ecedf4ecb6c2b67e8f7f6075624a624c
4b654c77907a8da58faabfacc8d9c9dae6dadce4d9a4a7a0596154536b533f5e3f
4764485a725a97a895bbc8b7dbe5dae0e8dde4ece18e988d7783776172625d7462
5d796349674f7a937ec5d0c2eaebe3edede5f1eee7f8f1ebf5edeafdf3f1fff5f3
fff8f7fffbf9fffefbfffefdfffffdfdfffcf8fdf9f7fcf8fdfdfdfefcfdfdfbfc
fbf9fafaf8f9f9f7f8f8f6f9f7f5f8eceaefeceaefeceaefebe9eeebe8efebe8ef
fefffdfefffdfefffdfefffdfffffffffffffffffffffffffffefffffefffffeff
fffefffffdfffffcfffffcfffffdfffdfdfdfdfffefdfffefefffffefffffeffff
fefffffefffffefffffefffffefffffefffffefffffdfffefdfffefdfdfdfffdff
fffdfffffdfefefefefdfffcfbfffcfafffcf8fffaf4fff8edfdf2def0e4c3d8c9
aac1b19fb6a4a2bba8aac3b0b4cbbbd8eee1eafff1eefff5f0fff5d0e7d595ac98
7189736b836b5e765c5a7356667f61718a6a6f88686a85646d846ab5c2b9d1dbda
dce7e3dee9e5e5eeebdde6e1d8e1dce7f1e9e0e7e0f0f7f0f3f8f1ebf0e9f9fef7
fcfffadfe5dba4ac9d4f5f456378575f7755546e4b5b76535b7955537250547655
5f7d6188a68ebfdac9e0f7eddff4efd8eaeae6f3f9f5ffffe0e9f8dee6f3dfe8ef
d5dfdeabb8ae7786715c6f535e7450546a464a623e4a6343566f52637c67799183
a2b9afccdfd9e2ebead5d9dad3d4d6dfe1e0e3e3e3dbdbd9dbdcd7e5e8e1e9eee7
d6e1d3afbdae829582667f695c7a624f70553f62444566494c6a4e6b876e9fb6a2
c4d6c8ccdcd2ccd7d1cfd8d5cad0cec5cbc7d5dfd6bfcbbd73826d485a404a5d3f
40573a36523c334e3d71877ac1d3c7eaf5ede9eee8d5d5d3cac9c5c6c3bec3c3bb
d8dacddfe6d4b3bfa779886b5063433b5031445a433247343f50405b6857737b6e
9b9f91b2b4a9a3a598b1b3a8c4c8babfc7baa7b5a499ab9b849d885e7b673f5c46
3f5b42455d434f634a55654b6c765eaaaf98b2b49ec0bfabcccbb9d6d7c7dddfd1
e3e9dbeefaeeeafaefc0d2c68ba393496b534a6e543b59415a745b64776183907c
bac1b1ced2c3d7d9ccfbfdf2fcfff8fbfffaf9fffff5fffeb5c1c15f726e3f5b4d
405f4d4d695a5f7a69869e9098b0a0b1c7bac2d9c9d1e7daadc4b48ca295576f5f
425d4e587563688777859d8d909c8ea3a99bbec4b8d1dccce1eddfb9cebb65826e
53765e58826a4b775c5e866e7c9e8682978696a191c9cbc0e6e3daeeede8fbfcf6
e2e7e0939d92677868586d5a49604c607963829b8694ab97b5cab7d8e9d9e4eee3
c5cac380817c575f54455d45405f405a775b758d75b0c1aeccd9c8e9f1e6eaf0e6
e2e8de8d958a6d796d5c6d5d566d5b526e58506e568ba48fd1ddd1f5f8f1f7f8f2
f7f6f1fdfaf5fbf6f3fffcfafffdfbfffafafffcfbfffffdfefffffbfffff7fffe
f3fffbf4fdfafdfdfdfffbfcfffbfcfefafbfdf9fafcf8f9fbf6fafbf6faf6f1f7
f6f1f7f6f1f7f5f0f6f5f0f7f4eff6fefffdfefffdfefffdfefffdffffffffffff
fffffffffffffffefffffefffffefffffefffffefffffefffffcfffffdffffffff
fefffdfefffdfefffffefffffefffffefffffefffffefffffeffffffffffffffff
fffffffffffffffffffffffffffdfefffdfefefefefdfffcfbfffcfafffaf8fffa
f7fff9f5fffae2f4e6bed3c4a1b6a595ac9a9cb5a2adc6b1bad3beeafff0effff5
f0fff6daf3e09db6a169806c59715b5c745c4f674f5e755b70876d788f7371886b
778e719eb598ccdfc9d3ded8d5dddfdbe3e5e0e6e6e1e5e6eaeeedf3f8f4f2f7f1
fcfffaecf2e8edf5e8f9fff4eefbeab6c5b27c8b785c70575c75574964434c6746
5c7a585d7a5b5774565f7c5e6d8a6ea5bea8d0e7d5ecfff4e4f8efdeede8e3f1f1
e4eff1d8e3e5dde8eadde9e9c8d4d09ba89e6f806e586c534f66494b6343405939
5d76566780636078627e9585bad0c4d8ede8d4e2e2cfd3d6dedde2e3e3e5dcdcde
d7d7d7dee0dde4e9e2e4ece1d9e5d7abbcaa7d937e69826c607c6552725a46684d
43654c49674f6f8b75a5beabcce1d2d7e9ddd3e0d6d0dbd3d2dcd4cdd7cfd9e5db
adbbac6576644b5e484962453e5739334d302e47346a8073cbdfd3e6f6ebd6e0d8
d4d9d3cfd0cad6d6cec5c5bdd8dacde2e6d8b6bfac6d7c65475b3f435a3d40593c
3a4d394859474e5c4d758070acb2a6a7ab9d999b90b6b8abcacdc2bfc5b7a3afa1
92a592829b885777603a5d4746684f455d43495b4159694f7b876fa5aa94b2b3a1
c9c8b6cfcdbee1dfd2e7e8dae7ede1e9f4e6f1fff4e0f4e89eb6a85673614a6e54
496e4f4b694f5e765e697a67b3beaeb5b8adcfd0c8e6e5e0fffffbfefffdeef4f0
f8ffffe9f8f567777433483f344f3c3c59434d665179907ea6b8aaacbeb2abbdb1
c1d5cac9e1d493ada07894854c68593b58466782717a95827e9382999f93a0a297
ccd2c6d4dfd1dcedddabc2b268877551776258846d426e57779d8897b7a29aac9c
b5bdb0d3d3c9eeebe4f4f5f0fcfffdd4ded676847755675751695348614b6f8b74
7f9b8592ab96cee5d3e1f3e5edfbee97a198656a63606b5d394d344c6548677e64
9bae9ab9c7b8dfebdfe7f1e8f2f9f1dae1d98791866371625669565169534e6751
57735a98af9bd6e0d5f8faf5f9faf5f7f8f3fcfbf7faf6f3fffdfcfffefdfdf9f8
fdfcfafefffffcfffff9fffff8fffff6fffef7fffdfefffffffefffffefffffdfe
fefcfdfcfafdfbf9fcfbf9fcf8f6fbf7f5faf7f5faf7f5faf6f3faf6f3faffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffefffffffffefffbfefffbfefffbfefffdffffffffffffffffff
fffefffffefffffefffffefffffefffffefffffefffffefffffefffffffdfffffb
f7f8f3f6f8f3fbfffbf9fffaedfaf0eafaedcadcceabc0b1a3b8a9a0b5a496ab9a
b1c6b3e2f7e4f1fff4edfff3ceefd497b59b67856b55715a59725c5d755d5c745c
667c65677a66697a677988759cab96c2cfbbd2dfcdd0dbcdd6dcd8dde1e2e5e6e8
e9e9e9eceaebf2eeedf9f6f1fcfcf4e3e3d9fefff4f9fff3c8dac47f977d547354
4568484166454c71524b6f534e705550705855705d6b82729dafa3cadad0e1ece4
e4ede8e6ece8e4ebe4e0e7dfdde4dcdde4dcdde8d8cadabfa4b7977d9271687d5e
5b7255536c4f546e535b775e627b66546d5a697d71a4b5abcfded9d8e4e2dce6e7
ebf0f4f2eff6e9e4ebdddbe0dbdddcdee4e0deeae0d7e5d6ccdfcb8aa28a7c997d
6c8a6e5c7a5e4b6c5145664b4f6f575f7c687c9389b3c6c2d7e8e2cdded6c6d6cc
d7e5d8dceadbcfddccccdbc890a38d5f755e3d573c3d5b3f3455381e4123405e46
5e6f65b3beb8e7f1e9e7eee6e0e6dcd7dacfcbcfc1ced2c1dfe6d4c0c9b4abbaa3
677b623e563e415d443d5b4137553b4d634e445542798776b0bdabaeb9a9aab3a2
b9bfb1c0c7b7cbd3c49aa5948596848ca28d627e6835553d385b433b5c4151654a
5360467f8971b4bca7bec2b3bdbfb2ccccc2d6d6cee9eae4e6e9e2ecf3ebf4fff6
ddefe1a4bbab6a837046644c3b5c3d4d6f4c5a74576578628e9b8ac5cdc2e2e2e0
dcdadbeeeceffffefffcfffff9ffffe3f2ed73877e435b4e3a5340466142465e3c
819176a3af99acb3a3c1c7bdcbd5cdd3e4dcb4cec587a79a4d6f5f345645597662
91a993a6b5a09aa392a7a99cb0b2a7d7ddd3e4f0e4cde2d37f9a8b5879684d7260
3b624f5c816f89a89894ac9cadbbaeccd2c8d9d9cff7f8f2eaf3f2ebfaf7a9bab0
697e6f5d755f425f436280645c7a5e69876facc9b5d3eedddff6e6a1b6a7728476
607161505f4a4c593f58654b929e8ac7d2c4dbe5dde1ece8e0eae9e1ece8b2bfb6
61716460735f5b715a5d755b4a6346627c61bacdb9ecf3ebf3f3f1f7f7f5fcfcfa
fffffdfffffdfffefffffefffffefffffffffffffffefffffefffffcfffffcffff
fcfffffefffffffffffffffffdfdfffcfcfefbfafffaf9fefaf9fef9f8fef9f8fe
f9f8fef8f7fdf8f7fff8f7ffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffdfefffbfefffa
fefffbfefffdfffffffffffffffefffffefffffdfffffdfffffefffffefffffdff
fffefffffefffffffdfffffbf9faf5fefffaf8fdf6eaf4ebf8fffaf2fff5afc1b3
a6bbacc2d7c692a796708574b6cbb8f2fff4f1fff1e5fde797b49876977a5d7b5f
5573575673575a745b6a826a7e947d70836f7384718d9a88b2bdadc5d0c0c4ccbd
c5cdbed0d6ccd6dbd7d9dbdadbdbdbdfdedcebe7e6f7f2eff7f2ecf1eee5fffff4
e1e8d89ead98657c625372535a7f5d537d59406c4950795b5980655c7e66617e6c
81998bb5c6bed7e3dfdee7e4ebefeeeef0efeef0ede8ebe4dfe2d9d5dbcdd0d7c7
cbd7bf92a47c71885a556f42506b42526d4a516b4e536f565d78654f6a5b72897f
a4b7b1cddcd9dee8e9dde5e7dde1e4e1e2e7e8e3eae6e1e7e4e4e6e9eeeae9f3ea
dceadbbed4bfa7c1a87694786d8e715c7d6048694c4061464e6c54607d676e8678
b5c8c6cbdaddd2e0e0c5d4cfc2d2c8ceded1d0e1cfc4d6c08fa38a4b6447486245
48664a345538385a3f42664a53705a99a69fe9efedebf0eacacfc8dde3d7dce3d3
c7d0bdd9e2cdc5d1b9b0c0a544583d425a40506a513c5a422e4e37324f394d634e
7f907dadbca9b2bfadb5c2b0b5c0afafbaa9cbd6c5b3c0ae77867394a793778f79
3d59423959412c4e3545614845553a6a725a9fa790c5c9b8c7c9bcc5c6bed2d1cc
dcddd8f0f2efedf2eeeef8f0e4f1e7b9cbbf7c9383526b58456148496848456341
5b74578fa18bbdc8bad3d8d2dededee7e5eafffdfffffefff2f6f9f8ffff98a9a1
495f53526d5c37533a48623d687d56939e80a9ae97b8b9abc6c6becbd0cad9e5e1
9fb8b26b8b803a5e50385b475b776181947e98a18ca0a390b4b4a8c6c8bddee6db
e7f5e8bcd2c5809c8d5777684e7362496e5d7a9a8b99b4a595a99daebaaed7ddd3
e6e6dcebeee7f2fefeebfefcaec3ba728a7a5f796045644562816252735667876f
b6d6c1ddf8e9c4dfd07f9588657c6a5a6f5c50624a4e573c73795fadb1a0d8e0d5
e3e9e7e4eeefeaf5f7e1f0ed97a8a06678685c725d586f55556e515c7557718a6d
c7d8c5eef3edf4f4f4f8f8f8fcfcfcffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffefffffefffffefffffcfdfffbfcff
fafbfff9fafef9fafef9fafff8f9fef8f9fef8f9fef7f7fff7f7ffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffdfefffbfefffafefffbfefffdfffffffffffffffefffffeff
fffefffffefffffefffffefffffefffffefffffefffffffdfefffafefffaf6fbf4
fafff9f8fff8e4f2e5b2c2b5b4c6b8a1b6a5738a78879e8ccce3cfeffff1ebffed
bfd2bf7a907b5e785d5976584d674a445e41597255768d7374886f5b6d558b9a85
a1ae9abac6b2c7d0bfcad1c1ccd3c3d1d8c8d7dacfdde0d9dbdbd9e4e4e2f2f3ee
eeede9e0dfdae6e7dffafdf2c6ccbe838e7d5769535f775d6481654e6f50476c4b
557d5b54765b57775f6c887291aa97b9cebfd7e7dce6f1e9edf3efe9eeeae0e5df
dadfd8dce2d8dde5d8cdd8c8b0bbaa95a38a728661627b51526b434d67425a7554
688267617d66536e5b71897ba7bcb3d6e7e1deeae6dae3e2e2e8e8e6eaebe2e3e5
e3e3e5e3e3e3e4e6e3e3eae2d9e5d9c0d1bf9eb49f859f866d897054725848664c
4e6c544d6a54506b58738e7da5bbafcfdfdcd6e4e4cfdfdcc4d5cdcddfd3d3e5d5
b2c7b4859b84587056445e43425c413d5a3e39573d3b594152705889a28fe1ece4
e8ede9e3eae3d2dacfc5cdc0c8d3c2d0ddc9d1dfc8a0b09645573d3f533a3f563c
445c44314a3449624d475e4a92a390b6c5b2b5c2b0b6c3b1acb9a7b7c4b2d3e0ce
a5b4a16e7f6c98ab976c826d38503a4d665045614a335139637b63657159959a83
b9bea8c5c8b7c9cbbed0d0c8dbdcd6ebece7f4f6f3fafffcedf8f0bdcdc282968a
5a716149624f425e474d674a536c4e7e9279becdbae0ebdddfe4dee4e6e5f5f4f9
fffefffbfcfffbffffc7d3cf53645a455d4d415e4a435f465169478e9f7da5af94
aeb19ec4c5b7ccccc4ced3cdd4e1da869d95516f63335545476855667f6a75876f
8d977fabae9bc0c2b5dbded3e3ebe0ddebde9fb5a87692834f705f496b5a648675
8fb09f9cb7a89fb3a7bac6badbe1d7efefe5e9ece5f4ffffe5f7f7b3c8c17d9585
5d76604e6c506d8b6f5b7c61799982c1e0cedaf4e79fb9ac61776a647b6b576c5b
4b5d47586048969b84cacebfebf2eaebf1efe9f3f4f4ffffd7e6e37b8c846a7f6e
5b715c556c5252694d70876b859c82d8e9d6f0f5eff6f6f6f9f9f9fdfdfdffffff
fffffffffffffefefeffffffffffffffffffffffffffffffffffffffffffffffff
fefffffefffffefffffcfdfffbfcfffafbfff9fafef9fafef9fafff9fafff8f9fe
f8f9fef8f8fff7f7ffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffdfefffbfefffafefffd
fefffdfffffffffffffffefffffefffffefffffefffffefffffefffffefffffffd
fffffdfffffbfefffafcfffafbfffaeef8edcbd9ccbcccbfa9bbad859a896a816f
9db4a0d6edd9ebffeed0e5d297ac99697c6956695352694d4f66495b72556d8467
6a7e625f715776866c9caa91acb8a2c0ccb6cbd4bfc2c9b7c2c6b5d1d4c3dfe2d1
e2e4d7dcddd5e9eae4ecede7e7eae3eff2e9f1f7edd0d8cba2ad9d677462627360
586e57526a525470575b795d597a5d5472565e785d71897199af9ac5d8c5d8e6d7
d3dfd3d6ddd5e1e8e0d0d5cecfd4cdcfd7ccd0d8cbc5d0c0a9b6a482917c64765c
5a704c556e4756704d5b74545b75585c765d647d686f8777b2c8bccfe3dadfeee7
d6e2ded5dedbe7ebeaeef0efe3e5e2e1e3dee2e7e0e0e8ddd1dcceb6c4b394a793
778d766680675c785f45634b44604a597461647f6e70887a9eb6a9d7ece3d2e3dd
c8d7d2c5d6ced0e4d9d4ebdbb7cebc7d96814e67513b573e49654c405a412e482f
3d564059725d8ca391d6e8daf3fdf5cfd4cecfd6ced4ded3c0ccbec6d5c2c1d3bd
94a68e495d4445593e445b41485e472d432e4a5d494f624faabba9d2dfcdbbc6b5
b5c0afb4c1afacb9a7c2d1bebfd0bd7d907c889e898298834c644e3b533d435b45
415943566e586376609ca68ebabda8c1c4b1c3c6b5d6d6cadfdfd7e2e3ddf0f2ed
f2f7f1f7fef7d4dfd78b9b90586d5e4f67574c6754425b4650684e80947bb5c7b1
d3e0cfdbe5dae4e9e3f3f5f4fffffff2f3f5fcfffff2fbf87282784d62534e6754
36533d4a664d667a5ea2b194b0b8a1b9bcabcecec2dadad2dadfd9c0cbc56e837a
4a665a405f4f5e7b67778f79808f7899a18abcbfaacbcdc0e5ebdfe3ede2c0d0c3
81978a617c6d4968584163527b9c8b92b1a192ad9eaec2b6cedaced8ded4efefe5
f4f6f1eef9fbdceef0b3c8c17e9688536c575472587f9d8379998199b8a6c6e5d5
c9e3d8859f945a70646c8275526756475845757d65bcc1aae1e5d6f6fdf5f0f9f8
eef8f9f0fbfdb4c4c16c8077697e6f5d735e546b51597056758c7296ad93e9f7e6
f3f8f2f8f8f8fbfbfbfefefefffffffffffffffffffefefeffffffffffffffffff
fffffffffffffffffffffffffffffffefffffefffffefffffcfdfffbfcfffafbff
f9fafef9fafef9fafff9fafff9fafff8f9fef8f8fff8f8ffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffdfffffbfffffafffffdfffffdfffffffffffffffefffffefffffeff
fffefffffefffffffffffffffffffdfffffbfefffaf7fcf5f9fff8f8fff8d7e5d8
a4b4a791a393859a896c8371c1d8c6e0f9e4e2f9e5a6bea8607661485e49576a56
61745e485b3f6b7b5e78886b68785b68775a89977dacb99fb8c2a9c0c8b1b9c1aa
c0c5afd0d3c0d4d7c4d0d1bfd6d7c5e3e4d4dcdcd0e0e2d5ebede0f0f6e8dee6d7
aebbaa7a88775669555a705b576f595169534e6751556e585f79605e785f596f58
8c9e86b6c4add6e4cddbe7d3d3decdd4dccdd2d8ccccd2c6c1c9bcd1d9ccd5e0d0
bdcab88f9e89677961586c535a6e5351684b496244556e516a8268627c635a735e
859d8dc5dbced4e8dddcede5e0ede6dee9e3e1e7e3e5eae6e4e6e1dde0d9dbe3d6
dfeadadbe8d6c2d1be99ab957187705a725a516b524a634d4b67514d6653587062
7e9689b3c8bfd1e6dfd6e9e3deefe7c9d9cfc7d9cdd0e7d7b2cbb86f8b7548664e
47674f44644c3c5a423c58413e55414a5f4e90a292d9e9dce7f3e9dde2dcd3d8d2
c5ccc4c6d2c6d5e3d4c1d4c08399824a62482e462c4c644a455b442f422c4f5e4b
54614fb2bdadd7dfd0cbd2c2b1b8a8ccd5c4b7c4b2c1d0bdc2d5c179917b849d87
93ac96425b454058423c543e4356425669555e6d5a9aa692b6bba7c5c6b4c8c9b9
d4d5c7e9e9dde9e9e1e6e7e1f7faf3f2f7f0d0dad199a69c617367455a4b425a4a
46614e48614c768975aab9a6d2dfced5e0d2d3dad2e5eae6fbfdfcfefffff4f8f9
fbffff9faaa25062565c73613a563f48694e4c694d809278a4b09ab4bba9c6c8bb
d4d4cce5e6e0dfe4de9da8a0586c614f675a55705f6e877285988295a38aafb49d
c7cab5dce0d2e9f1e6e1ede1a5b5a8718878506b5a4c6b594667547d9c8a91ae9c
92aa9ab4c6b8d7e3d7dfe5dbf4f5edfafcf7eef9fbdaeceeb0c5c0768e81435c49
53715985a38b91b19aadccbcc8e6dabed8cf849e955e736a657b6f4c6152576855
9fa790dbe0caeef2e4f7fef6f4fdfcf0fbfddceaeb8898956d817864796a607661
556c52677b62758970a9bca6f1ffeef5faf4fafafafdfdfdffffffffffffffffff
fefefefdfdfdfffffffffffffffffffffffffffffffffffffffffffffffffeffff
fefffffefffffcfdfffbfcfffafbfff9fafef9fafefafbfffafbfff9fafff9faff
f9f9fff8f8ffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffdfffffbfffffbfffffdfffffd
fffffffffffffffefffffefffffefffffffffffffffefffffffffdfefffbfffffa
fcfff8f5fff4f7fff7cad8cb9aab9b889a8a758a798ca391d0e7d3edfff1c0d9c3
768e78526a54576d5846594545584470826a707f62606e4d6673558a9577a4af91
a7b093aab398b6bca2c1c5acbec2abc1c5aecdcfb9d7d9c4dcdbc7dad9c5d8d7c5
e6e7d7e4e7d6e7ebdad6dfcc9ca995586a54425841526b5554705946624b536c56
6c856f647c664f6550687b679dac99cdd6c1d7dcc6dbe0cad6dbc7ced2c1cbcfbe
c8cfbfc8cfbfd2dbcacfdac9bdcab693a58f64785f485f434a6346566f5261795f
5d755d59715b5d755f72897798af9fc1d7cadef2e7dbece4dbeae3e1ece6e5efe7
e1e6e0d9dcd5dcddd5e2e8dce0edd9d6e5cebed0b89baf96768d735e765c567057
57705a4f68534b645151695b748a7eaec3bcdbeeeaddf0eecbdbd8d2e2d8e0f2e4
d9eeddacc5b26d8a7443634c395b423d614742664c42624b3c5842586f5d90a093
ccd8ceecf3ebd6dbd4d9ded7c4c9c2ccd6cbdbe9dab9ccb979907c4a634d334f36
425e4538523930462f576953636e5db7c0afdbdfd1c3c5b8bcbeb0bbbfb0b9c2b1
ccd9c7bccdba95ad9789a58e79977f46664e3c5a4237503a3046314f604d74816f
8e9786c7cbbcbec1b0c7c8b8d0d1c3ddddd1e8e8dee8eadff0f1e9fefffadbe2da
96a0975d6a604d5f51435849334b3b415c49657c6ab0beadbfcabad0d8cbd9e0d8
e1e6e0ebf0ecf7fbfafcfffffbffffc8d3cb5f6f6453685748614b405e444b6c4d
65826498a792a6af9ebbc1b3cfd2c7d8d9d1e5e8e1c8cdc778837b4a5c5054685c
647b69778c798f9e89a6b29abfc4adced1bcebf3e6e8f4e8d8e6d993a5976a8171
4c67565976645b786675928095b09fa2b9a9b5c5b8d6e2d6f0f6ecfbfcf4f5faf6
f4ffffddeff3a6bab8667d733a524255725e7c998592b19fafcebfcceae0bcd5cf
89a29c5c716a50665a4d6253758674c7cfbaeef3dff4faeef6fdf6f4fefff1fcfe
c6d6d6677a766e82795f7465617762576d566a7d677d8f79c1d2bff3fff1f8fdf7
fdfdfdfffffffffffffffffffffffffefefefcfcfcffffffffffffffffffffffff
fffffffffffffffffffffffffefffffefffffefffffcfdfffbfcfffafbfff9fafe
f9fafefafbfffafbfffafbfff9fafff9f9fff9f9ffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffdfffffbfffffbfffffdfffffdfffffffffffffefffffefffffefffffeffff
fefffffcfffdfefffbfcfffafefffafbfff8f5fff5c8d9c99dae9e6a7c6c576c5b
9cb39fdff6e2d8f1dc839c87526b55536b555b735b485e475e715b7a8c7666745b
687355888f6ea1a889aaaf91b1b698bdc2a4c0c4a9b9bda2c4c7acced0b8cfd1b9
cbcbb3d3d2bde4e2cde3e1ccd4d3bfe0e2cde0e3ceb7bfa8748068576951637a60
5d7a5e415f454f6f5765836b6a867059725d596c597f8d7cb2bfaed5decddcddcb
cecdb8c9c8b3ced0bbced0bbc3c6b3c5cab6d1d9c4c9d5bfadbba485977f677b60
576e52536e4f516e4f506d4f647c66637a665f74636a7f6e97ab9fc9ddd1d5e6dc
c3d2cbdeebe4dce7e1dde7dfe0e7dfdae0d6d6d9cedfe1d4ecf3e3d8ead0b6ceae
8ba2856a81645a73565872575a745b5b745e5a715f586f5f778d81b3c6c0daedeb
dbebebd1e0e3d1e1e0c8d8cdd5e8d5b8cfbb728e7842624a3f63493c62492d533a
2b51384a6b56506b588ba091dce9dfecf3ece5e7e2ddded9dee1d8bec6bbc9d5c7
c0d1c16f847139523d3a563f3a58403d5b4339523c596f5a6a7966c7cfc0e0e4d6
b8b8acc4c2b6c4c2b5cccec0b3baaac4d1bf99ac9879927c97b79f4c6e5534563d
385840435c4655685453604e8a9181d3d5c7afb0a2cdcbbed0cec1dbd9cde0e0d4
e5e5dbeff1e6f0f3eae3e9df9ea69b687468455346455749435849405745657e6b
9db2a1ccd6cbccd2c8d4d9d2e6ebe5f1f6f2f3f8f4f7fcf8fbfffdebf6ee748177
5365574b624e38543b5a795a51735285a284a4b1a0b3b9afcacdc4d3d6cddde0d9
d6dbd49ba29a5b675d4e5c4f5a6b5b70816f8796839ca995b4bda8ccd1bbd9deca
f1fbf0e2efe5c0d0c5899b8f5e75654f67575c77646c877479948196af9cb1c6b7
c0d0c3deeae0f6fdf5f5f8f1f7fdfbf4ffffd5e7eb8fa3a1556c6241594b658270
76938189a898afcdc1d0eee6afc8c47f9894556a63455a51566b5c879886e2e9d7
f6faebfcfff8f5fef9f3ffffeffdffb6c8c85e736e657a715d74645e73605a705b
60735f92a390dceadbf1fbf0fcfefbfefefefffffffffffffffffffffffffdfdfd
fcfcfcfffffffffffffffffffffffffffffffffffffffffffffffffefffffeffff
fefffffcfdfffbfcfffafbfff9fafef9fafefbfcfffafbfffafbfffafbfff9f9ff
f9f9ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffdfffffdfffffbfffffdfffffdffffff
fffffffefffffefffffefffffcfffffcfffdfcfffbfcfffafbfff8fcfff8f9fff6
bbc9ba8b9d8d6274647e9380c9e0ccdbf2dea1baa56a836d536c56556d554a624a
546a536f826c697b635e6d566f7c62a9b091adb091b4b798bdc0a1c1c1a5bec1a4
c3c3a7cacaaed0d0b6ceceb4d5d5bde1e1c9e3e3cbdadac2d9d7c2dddcc7caccb4
9ca288707a5f5d6b5153674b4963464f6e4f5e7f627a9b806d8d755c78615e7561
8a9b89c2cdbdd6ded1cfd1c3bfbcabcec9b5d4cfbbceccb7cdccb7d3d7c0d9dec8
d5dfc69fab9383937861755a52694c5570515b7859597858567357647b675c7162
778c7db6c8bcdbece2d5e6dcd0dfd8dce9e2dbe6e0d9e3dbd9e0d8dbe3d8dfe5d9
e2e6d8e4e8d9e3ecd7bed3b492ad8a647f5c4f6a49546f505b755a556f5649624c
4f6656778d80b4c8bfe0f3efe6f6f5d4e4e4cfdee1d8e8e5dceedea5bba4688269
49674f41634a3d6147385e45385e4741675051725f829a8ad5e7dbecf6eed9ded8
e1e0decfcecaced1c6e3ebdcb5c2b15e6f5d3c533f435f493f5d4532523a39573f
47604a6e846fc4d3c0d1d7c9bdbfb2cac6bbccc8bdbebcafced0c2e4ebdb9eab99
8096818da9924e705734583e385c422d4d35455e48566955909988bcbeb0b5b3a6
d5d1c5d4d2c6d6d4c8e3e0d7eaeae0f1f3e8fefff6e4eadea8b0a35f695e556153
4a584b4253434257465d726197ae9ccfe1d3c8cfc7d9dad5e9ebe6f5f7f2f6fbf7
f7fdf9fafffcf8fffba1aea456685a495e4b3c553f4c694d5b7a5a73957292ac8f
a8b3a5c2c4bfd6d8d3d1d6cfdfe6dec8cfc7747e754d594d576355626f5e788573
95a08facb5a2bec6b1d4d9c5e3eadaedfbeed7e8dea6baaf8094885067574e6754
59725f748d788aa18f92a796b7c9b9d3e1d4ecf8eef2f9f1e6ebe5fbffffebf9fc
c8dadc798d8b485f574c645679968477938485a495b5d3c9d2efea9db6b36e8783
5166614a6054607566879886edf4e4f8fceefcfffaf8fffef2fdffeefdffb1c3c3
6279735a71675d756559705c5e715d556653a7b5a4f0fcf0f1f8f1fdfffcffffff
fffffffffffffffffffffffffdfdfdfbfbfbffffffffffffffffffffffffffffff
fffffffffffffffffffefffffefffffefffffcfdfffbfcfffafbfff9fafef9fafe
fbfcfffbfcfffafbfffafbfffafafff9f9ffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd
fffffdfffffbfffffdfffffdfffffffffffffdfefffdfefff6fafbf0f4f3fbfffc
fbfffbf6fef3f9fff6eaf2e5b6c3b28a9b897287748ba08dc2dac4bcd4be738c76
445d4749634a49614950684e5f735a66786065745d6b796089957dadb59db4b79a
b5b495b9b89abdbe9fbab99bb6b798c6c5a9dadabed3d3b7d2d2b6dadac0dfdfc5
e2e2caebedd5e4e4ccc5c7af73795d697255616e50596c4e5068484f6a4b618061
78997c608164557359718a74b1c4b0d4e1d0c3cbbcb3b5aab7b5a8c9c3b3c6bfac
cfcab6d4d2bdd3d2bddbdfc6cfd7bfaab79b6d7b615f72545a7154526b4d587354
658263607f5f6481656b806f8fa195b9cbbfd1e1d6d4e1d8cfdcd3d3ded8dbe4df
d3ddd5e6ede5dfe7dcd4dccfdfe8d7e1e8d6d5ddc8cddbc1809a7764845d4b6945
506e4c637e5f556f544c644e607763687c70b4c8bddff3ead7eae6d6e9e7ddefef
ddefefdff2ec9aaf9c556d5348654949674d3e604740644a3b6148496f584b6e5a
81a090cce4d6e7f8eed8e2dadadcd7e3e2e0d8d7d2e4eadca6b1a05b6a57415441
49604c3a56402c49333b584249654f7d9681c1d4c1d5e2d1c2c8bac1c1b5cbc7bc
c0bcb1c5c6b8d8dccdaeb7a6778673879d88718d7632543b41654b3c5e4544624a
6179638a9b88adb4a4bdbeb0ccc6bad8d1c7cfccc3dcdcd2e5e5dde8eadff2f5ea
e5ebdfa9b1a4657060616c5e3946353f4d3e5263535a6b5b8ea090c7d9c9cad8cb
d7d9d4e2e1dfe7e7e5f7f9f6f0f5f1fbfffde7f2ead3e0d6566659445948506852
4b654c516e506380618fae8c9bb497b7bfb4c0c2bfd2d7d3d8dfd8d7e1d89da99f
495549535f516a7766737e6d7c8574aab3a2c4cbbbc7cbbae6ead9f0f8e9edfff3
bad0c49eb4a85d7366405747465d4b6f8672809882849986abbeabc5d6c6dceadd
e5f1e7eaf4ecfafffcf4fdfaf1ffffb6c8ca6175733d544a566e617d998aa0bcae
a7c5b9ceece4acc9c593aca95b7471485d5652685c647968adbeace7eddffdfff7
f8fdf7f1faf9f3ffffe5f7f9859998677e786e857b5a72624e65516d806c7d8b7a
c9d5c7fbfffaf7fcf8feffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffefffffefffffdfeff
fcfdfffbfcfffbfcfffafbfffafbfffbfcfffafbfffafbfff9fafff8f8fff7f7ff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffdfffffbfffffdffffffffffffffffff
fdfefffbfffffcfffffbfffdf7fef7f0faf1f9fff8edf8e8b1bcac8a9986758875
b6ccb7cde5cf93ab95566f594d674e536d544d654b5d755b667d63687a6267775d
7a886f9ba78faeb69facb298bfbea2bebb9cc1c0a2cbcaaccccbadc8c7a9cccbaf
d5d5b9dedec2d9dcbfdee1c6e1e4c9e0e4cbd8dcc3a8ac93676d535962455e6c4b
5a6b4b5469485e76566d886767846555725466836795af94c0d3bdc4d3c0b6bfae
b3b7a9bdbdb1c9c5b9d9d3c3dad5c1cbc6b2d6d5c0f0f2daccd2b88f997e7f8e6f
596c4e586d4e5a7353516c4b5d7859718e6f698667627c6198aa9ab1beb4cad7cd
d6e2d8d3ddd5cdd7cfd1d8d1d6ddd6e4ebe3d6ded3dfe7dae4ecddd9e5d1e0ecd6
c7d3bb83967a6f8d6943663e4c6c476584625872554f69505e7561607765b0c4b8
c9ddd2ebfff6e4f7f1cbdedad6ebe6ccdfdd90a59c5c755f537052516f53395a3f
395b42486a523e614b476855749383cee9dae7fdf1c7d7cdcad4ccd9ded8d5d6d1
d3d6cf9ea99859685341533d4b5e4a3c533f39523d465f4a425b467e9784c1d6c5
d4e5d5c2cfbec8cec0cbcdc0c6c4b8d0cec2e3e5d79ea5957c897796a7945d735e
2c483149695125452d4361495a735d80937fa1ae9cafb6a6b7b5a8cac4b8dfd8ce
dddad3e5e6e0f5f6eef8fbf2e0e6dab1b9ac7c87775b68574b58474d5a494a5746
5a68578a9889b6c4b5c9d7c8d0dacfd4d5d0d8d4d3f9f8f6fafcf9fbfffdf0faf2
f0fdf38b9b8e536857485f4b4b654c556f5457715475907195b08fa4b89fc2c7c0
c7c9c8d7ddd9dfeae2c7d4ca607063576858515f4e677462737c6b919888b0b4a5
c8ccbed9ddcfe3e9dbf1fbf0d6eadfadc7bc86a0934d65573f5646586f5b748a75
7f927e95a894b6c7b4cddbcadeeadee5efe6e8f2eaf7fdf9f0faf9efffffa6b8b8
5c716c435a505870627591828fab9da4c2b6bbd8d3a3c0bc7991914a635f4b6059
4e6457657a67bccdbaebf1e5fcfff8f8fdf9f3fdfcf3ffffdef0f2879d9b718a84
688277566e5e59705c7a8d7a919f90dae4d9fcfffdf7f9f8ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefffffefffffdfefffcfdfffbfcfffbfcfffafbfffafbfffafbff
fafbfffafbfff9fafff8f8fff7f7ffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd
fffffdfffefffffefffffffffffffffdfefffbfffffcfffffbfffdf7fef7f9fff8
f0fbedb0bdac8895839baa95b7cab6a1b7a0819981617961486048425a42506850
61795f677b6266785e72806789957da3ad95afb79fb1b59eafb199c3c2a6c1bda0
c1c0a2cdccaed5d5b9d9d9bdddddc1e1e4c7e4e7ccd1d5badce2c8edf3d9ccd5ba
919a7f646c544c563b4857385263416174546b805f6a82606780606a8365718a6c
a5bca0aec2a9b6c4adbbc4b1c3c7b6cecfc1d4d2c5d5d1c5d4d1c0d4d3bfe3e2cd
e8ecd5cbd1b799a4867281625c704d586d4c4b65425c76536b8665718c6d708b6c
718b6e8aa288c2d0bfccd6cbd6ded3d7dfd4d4d9d2d1d6cfd3d8d1d7dcd5dbe1d7
dfe5d9e0e8d9e4efdee6f4ddc8d6bd8d9d825e7354506f4d4c6e4b5372525d7c5d
5c765d526b556b827098ad9ee0f4e8e4f8eddcf0e7d6eae1ddf2e9c9e0d68ba097
4d655747634a3f5e3f38593c3a5b404c6c54496952496652779482cee9dad1e7db
d7e8ded6e6dccdd9cfc4cec5bac1b9a9b4a6505f4a3d513834482f3d533c455b46
435845586d5c7d9281d2e4d6bfcfc2bbc9bcc4d0c2c4ccbdc0c6b8ccd0c1dadecf
9aa39263705e82917e70836f3c523d3e57413d59424c6851546d576f857098a794
b3beadbdc1b2c3c1b4d6d0c4eae3d9e1e2dcf0f5effcfffaecf4e9b6c1b3798577
5663524c5b4841503d515e4c626f5d899483bdc8b8d4dfcfd4dccfd9dcd3d6d5d1
e5e1e0fbfaf6fefffbf6fdf6f8fffabbcbbe566b5a5067534a634d4761485f795e
637c5f8aa1849db497aebda8c7c9c4d0d1d3d3dcd9ebf8ef869b8c475e4c506651
5e715d63705c7a816fadb1a2bbbdb0ced1c6ebf1e7e6ede5eefbf2bbd2ca9ab8ae
6783773b5647435c49708572788b777f917babbaa5c7d4c2d5e2d1e2eddfe5efe6
e8f1ecf4fdfaeef8f7e9f9f88c9f9d566b644d65585f77696f8b7c7d998ba4c2b6
abc8c396b3af5e77743f585451665d516858748a75d3e4d1f0f6eafafcf7f7fdfb
f8fffff3ffffd1e5e68ba4a1809b94617d714d6857667d6b8a9d8aadb9adf0f7ef
fcfefdf6f6f6ffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefffffefffffdfefffcfdff
fbfcfffbfcfffafbfffafbfffafbfffafbfff9fafff8f9fef8f8fff7f7ffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffdfffffdfffefffffefffffffffefffffdfeff
fbfffefbfffdeaf4ecf8fff9f6fff6bbc7b98e9d8a9ead98b5c7b199ac96728871
4e664e496149536b535c745a647c626c83676f816778886e909c84acb49cb3b8a1
acb099b3b29dc1c1a9c7c6aac8c7a9cccbadd2d2b6d9d9bddcdfc2e1e4c7e4e8cd
d9dfc3e7f0d5e2ebd0afb99e7a876b6e7b6164715747563953664659714d6c8160
7489686b805f677c5d849779abbba0b9c7aeb3bfa7b6bea7c3c8b4cecfbdd4d3c1
dcd9cae4e2d3d4d5c3dde0cbecf1dbcad2ba8491756978596579565068445d7752
57734d6d88657b96757994757a93768da689bdd1b8ccd7c6d0d6c8d4d7ccd6d9ce
d9dad2dbdcd4dcddd5ddded6d3d6cbe7ebdde9f2e1e6f2ded0e0c68ea1855c7152
627b5b4362425c7d5e5c7a5e526e555d76606d84729aafa0dbefe3ddf1e6e2f6eb
d2e6dbcbe1d5c7dfd192ad9e526d5c3e5b474d6e533255372c4d3042634854715b
526d5a7a9282c9dfd2e4f8edcbdcd2c8d8ceceded3ccd9cfc8d6c99ba99c4f604e
3c53394b644741583c374d364c5f4b60715f899788c3d1c2d2ded2becabeb7c1b6
b1bbb0b3beb0cfdacacad5c496a3916473608b9c89697c6842584340564139513b
465e485d735e7e917d8e9d8aa5b09fbcc3b3cbcdbfd6d4c7e1ddd1e8e5dce5e7e2
f3f9f5e8f2eab9c3ba818d815e6c5b4e5d4a445340495845515e4c8e9988cbd4c3
d3d9cbd8dccee3e5dadbdbd3e7e3e0f8f4f1fefffaf7fcf5f2fcf3e5f5e86b806f
5269554a634d49634a4a644b627a60758c7299ab91a9b99fb4bfaec5c7c4d2d3d5
dee9e5bfd0c6526a5a4f6b55476148697f6866735f8e9583c0c2b4ccccc0dbdcd4
f4f9f3ecf5f0e2f1ecaac5be86a69b4a685c3b5647516a577f9580778973899883
b9c6b2d2decadae5d4e4efe1e8f2e9ebf4eff7fffdf0faf9d8e8e570837d50665a
5a72646b8373728f7d799586abc9bda7c4bf83a09c4f6865455e58546a5e5b7260
93a992e3f5dff5fbf1f9fbf8f7fdfdf8fffff1ffffc4d7db90a8a88ba69f5d796d
48635270877593a494c0cac1fcfffbfafafaf8f8faffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffefffffefffffdfefffcfdfffbfcfffbfcfffafbfffafbfffafbfff9faff
f9fafff8f9fef7f7fff6f6feffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfffefd
fffefffffefffffffffefffffdfffefbfffef4faf6f9fffbf9fffad4e0d2a9b6a5
aebdaaafbea98a9c8454684f556c52586f555d745a687f65738a70738a706f8368
8e9e84a8b69cb8c2a9b1b69facae98bbbba3cfcab4d6d1bbd4d3b7d9d9bddfdfc3
e0e0c6dde0c5dde1c6dee4c8dde6cbe7f1d6d1dec4a5b2986a785e4e5e43607056
64765c485c40657e5e6a856267815e61795771846694a487adba9eb5bea3b4b9a2
c6cab3d4d6c0d4d3bfd2d1bdd9d6c3e1decbe3e2ceeef3dfeaf3deb5c1ab7a886f
65785a586d4c4b633f556f4a637f59718d677b9673698463748d70a0b79dbaceb5
c9d8c3cbcfbecdcebed0d1c3d6d7c9dedcd0e1dfd3deded4dcdcd0e5e7dae4e8d9
f0f9e6d6e4cd8b9d835d74575d76565674524f6d514b6c515b79615d7963647d6a
9fb6a6dcf0e4e6f7eddbefe4d7ebe0dcf2e5bbd3c3708b784c69534b6b53426449
3e65463d644542644945654d4f6855809586c6d8cceaf7eed3e0d7d5e2d9c6d3c9
c5d5cacadcce96ab9a4f6652344e354d6a4c435e3f465f42455c4253624f929d8d
cdd5c8d1d7cdbbc0b9c9cec7bec5bdbbc5bacedccdb9cab8879a866f8570879f89
728a743f5741334b353b513c3b513c586b576d7e6ba2af9dacb7a6bac1b1c5c9ba
d0d2c4dcddcfe7e5d8eaeae0f0f6f2dce7e3b2bfb87e8b8258685b4c5d4b495a47
465842505f4a7e8b77c6cfbce4ebdbd6d8cbd6d6cae4e1d8e0dbd5f8f5f0f5f4ef
fefffaf5fdf2f6fff79aac9c536a564a664f446049466249546e55647b618b9d85
a0ae97b2bea8bac1b1c9cbc8dbdfdee0ede66d8376506d5944644c5270545c745a
75836cabb2a0cbcbbfddddd5e9eae5f1f5f4eef8f9cbdedca0bdb86f90873c5a4e
476354647b698295817a89749ba992c2cbb6d7e0cddee7d6e8f0e3ecf6edf0f9f4
f8fffff0fcfabccdc75a6e654e6457647c6c758e7b7c9985839f90b1d0c19dbbb3
65827d47605c4e685f4f655869806cb1c8ace2f4dcf7fdf3fafcfbf9fefff8ffff
eefdffbacfd294aead87a59d5a786c496654768d7b98a999cbd5ccfefffdfaf8fb
fdfbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffefffffefffffdfefffcfdfffbfcff
fbfcfffafbfffafbfff9fafff9fafff8f9fef8f9fef7f7fff6f6feffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffefdfffefdfffefffffefffffffffefffffdfffefafffe
eff5f1f9fffbf1fdf3c5d3c4bdcbbaadbfa97e9078596d545f735a59705661785e
72896f778e7474886d7a8e738a9c82aab89eb3c0a6bdc2abbdc1aac0bea7c8c3ad
d1cbb5d6d0b8e1dfc6e2e2c8dfdfc5d9dcc1dce0c5e5ebcfe7f0d5e4eed3cad7bd
86947a58684d53664a54684d55694e5d7458627b5d6c8b6966866165805d728a68
8fa284acb99dbcc2a8bcbea6d2d0bbcfcab6cfcab6d9d4c0e1dfcae8e6cfedebd6
f0f2dce5eedbb0bfaa73856f55694e536a4d546d4d5b765369876174926c708e6a
718c6b6d86688aa187bacdb7c4d6c0c5d1bdcdcebcd2cfbed7d4c3dddacbe4ded0
e4e0d4e2ded2dfddd0f1f2e4eef2e1d0dcc695a58b63775b57705054724e486747
4d6b514e6b5555705d6d85759db3a6d5e9dee8f9efd5e6dce5f9eedff5e8bbd2c2
75917b415f473d5e41496c4c436b49406c4b3f6a4c44684e58755f7a9181becec3
ecf7efced8d0d6ddd6cbd5cdcbd7cdc6d6c992a796425e48284830456649426443
3c5b393b563750644b859280c3cbbcd7dad1c3c4bcc8c7c2b7b8b2bec3bcd7e1d6
c3d3c6849b876b877185a38b718f7737553d38543d324b353f55405d705c667562
97a291a1aa99b7bbacc9cdbed0d2c4d6d7c9e4e5d7f4f5e7fbfef3e8f3edafbebb
778681596a60495b4d3e513e44574354675165775fc5d3bce8f1ded2d6c5d9d7cb
e2ded3e0d9d1e9e2dcfaf5eff8f8f0f4f7eef9fff6c5d6c65c715e5d766038563e
4361474d6950637d6470836d9ead98a7b39dbbc2b0c3c7b9d0d1ccecf2f0a9b8b1
4d65554d6f573f634758795c57715491a089c3cab8d4d4c8eae9e4f3f3f1eaeff2
e3eef2b4c8c98caba6567a703c5c4f536f606d84727c8f7b84937eb0bca6c8d0bb
dbe2d0e2e9d9ecf4e7f2f9f1f3fcf7f6ffffe9f5f39cada551655a4e655568816e
77907b85a28e92af9da9c8b984a29a46645c435c564f695e4d64547d957fc4dbbe
ddefd5f6fcf2fdfffefbfffff7ffffeaf9feb5cacd97b1b079978f59776b53705e
7f9686a2b2a5d7e1d8f8faf7fbf9fefffdfffffeffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fefffffefffffdfefffcfdfffbfcfffbfcfffafbfffafbfff9fafff8f9fef8f9fe
f7f8fdf6f6fef6f6feffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffefffffefffffeff
fffefffffffffefffffdfffefafffef7fdf9f3fdf4d8e4d8c0cebdafbeab7f917b
5a6c545e7257687c6382967d879b8271856c6a7e6384987da2b49aaebea3b5c2a8
b0baa1bcc0a7d1d3bbdbd6c0d1cbb5d2c7b1dad2bbe2e0c7dcdec6d8dac2d9ddc4
e5ebd1e8f1d6d3ddc4b6c3a971816763755b55694e475e424c644a6b8369769075
617e60658867668a667c9b799cb595aebea1b1ba9fbfc1a9d6d1bbdbd3bed7cfba
dcd4bfe7e1cbeae5cfe6e4cbeae8d1eff3dca2af9b6b7e6a586e575870564c6649
5b795777977276966f78987169876379947394ad8fb1c5acbed0babdcab8cbd4c1
d4d3bfdbd6c2e0dbc8e5dfcfebe4d4efe7daf2ecdef3f0e1ebecdcd6dac9909c86
5d6f5562795c5c77564969444f71504c6953607d6b6a857693ab9ed6ebe2e7fbf2
d6e7dfdaebe3d0e4d9b7cdc07188763f5b4447684b4a6d4c4068434e78524d7a59
4774554a715683a08abdd2c3d9e5dbe0e7e0c3c5c2d0d0cecbd0cac2ccc388988b
3f564236563e476b4f335b393359344365424a654673876ebcc8b4d3d7c9c1c1b9
c6c1bdbeb9b6c3bfbcced1cab1bbb07e90827b978183a38c668a7035593f4a6c53
304e3647604a5b715c61705d909b8a9fa696a8aa9cbdbeb0d0d1c3dadbcde4e5d7
f0f2e4f3f5e7ecf2e6b0bcb87f8f8c576862485c5144594a4055424e644f677a64
a4b69ee4f2dbe5ecdac9ccbbdedacfeee5dce9ded8f4e9e5f6f1ebfefff7eff5eb
eef9eb7c8d7b536b5555715a3a583e46644a5d7960718971859882a9b6a2b6bfac
c0c4b5d0d2c5d6d7d2cfd5d167786e506b5a496c544b7253507353759273b3c3a9
cdd4c2e1e1d5efeee9f4f5f7eaeff3cad7dfa2b7bc6c8c873e645944655a567264
6a816f778a7698a68fc0ccb4ced6bfe3e8d4e7eedef0f8ebf5fcf5f0f9f6edf7f6
d8e7e481928a52665a4f6654657e6970897486a38d9bb8a694b3a466847a37554d
455e584b655a5b72609db59dd1e9c9e5f7ddf4faf0fffffffbfffff3feffe7f6fb
b4c9cc97b4b266857d577569607d6b8ca393b4c4b7e8f2eaf4f6f5fffbfffffdff
fffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefffffefffffdfefffcfdfffbfcfffbfcff
fafbfffafbfff8f9fef8f9fef8f9fef7f8fdf6f6fef5f5fdffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffefffffefffffefffffefffffefffffffffefffffbfffcfafffaf9fffa
d4e0d4bdcbbca7b8a5798c76637a606b82666c83677f967c7f937a778b72768a71
8d9f85afbfa5beccb3bbc8aebbc3abcbcfb8d5d7bfd6d4bddad5bfe5dfc9eee3cd
ebe3ccdcdac3dcdec6e1e5cceef4daf9ffe7e2ecd19caa905a6a4f596b51566a4f
586f535972555d755b6e886d738d72627c5f63815d839f79a1b997aec1a1b8c2a7
c7cbb2d5d4bfdcd7c3d6cebbeae2cff0e7d6eae3d0f4f2ddffffe8dbddc5a0a891
5d735e627e68536f5848664a5f7e5f6f8e6c6e8c686f8d6767835d79936ea2b798
b8cbafc4d2bbc8d4c0c3ccbbcfd1c3d9d3c5dfd7cae5ddd0e9e3d5efe9dbf6f3e4
fffff0ffffefe7efda8f9d865a6c525d74575b765552714f5678555a7d5d5c7b69
5d796d8fa99ecde4dadef2e9dbece4e2f2e8e5f5eaaabcae627766435b454e6b4f
48694a3f64424e78525f8b67446f51668e74769681adc6b3daeadfcfd9d0cfd4ce
d3d4cfd4d5d0c0c5be808c7e475a473d59424064483864433a6341426443445f40
748b6fb2c4aec4cfbec0c6b8c4c5bdc5c5bdb0afaad1d4cdbec6bb89978a788d7c
75917b5979623d5f4640644a2a4c313c5a404d654d61735d899581a2a997b5b8a7
cac8bbd1cfc2d8d6cae0e0d4eff1e6f4f7ecdce2d8bbc5bc6c7d755e736a4d6357
3f55483f56444f6451667965758771ebf8e4d9e4d3d1d8c8d7d7cbe0dcd3ede4df
f8edebf9efedfaf7f2f9fcf5f9fff898a99958705a52705642634647684b4a674b
6d856b7c8e789ba894afb7a8c2c8bac2c5bad9dcd1dbe0d98b978d54665847604d
5e7c6454755a547155a1b89eccdac3cfd6c6ebede2edefeaf1f7f7e9f2f7b5c4cb
98b0b252736a3056474c6c5d53705e637a66748773a8b5a1cad3bed6dbc7e8ecdb
edf1e3f5fbf1f6fcf8edf6f3e5eff0ccdbd86f837a536b5d4f68555f7b6566836d
84a18b9bbba682a1915372633955494a64574c64566e8372bccfb9def0d6f7fff0
f4f6f1fffffffbfffff0fbfde3f5f7b2caca98b5b05a786e5773656c847497ac9d
c5d3c6f8fff8f3f5f4fffefffffeffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffff
fefffffdfefffcfdfffbfcfefbfcfffafbfffafbfff8f9fef8f9fef7f8fdf7f8fd
f6f6fef5f5fdffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffefffffdfffffdfffffefffefcfd
fafaf8fbfdf8fbfffaf9fff8f1fff08c9d8aaec1ab788f756d866985a08182a07e
809d7e758d73879a849aae95abbda5b6c4adbdc7afc1c9b2c7cab5d1d0bbdcdac5
e0dbc7e8e3cff0ead4dfd9c3dcd6c0f6f1dbe8e6cfe5e5cde8ead2f1f7ddd6e0c7
89977d56694d5e72564e6549577053647c626a82686c846a6e856b738a707b8e72
9ba986b2bc97bfc9a6bec5a6c2c5aad3d2bde2dfcce6e3d2eae7d8efecdde6e4d7
eff0e0ffffefe2e7d3969b8563725b526f5952785f567a605a7d5f6b8a6b7d9877
7a92706d815e9cad89a9b796bcc5a6c9cfb3ced3bcd2d5c0d6d9c6dcdacedfd4d2
f6eaecf5ebeaeee9e5fcfcf2fcfff3ecf8e2e4f6dc738a6d5b76574e6d4b577956
5b7d5a537753577b5765876c66867989a6a1cfe8e2e8fff5d9ede2ebfbeee0eedd
9aa795606f5a5569504c65484e6b4c577a5a5c856354825e4d785a567762779283
b4cabddceee2d6e2d8ced5cdcfd5cbc8cec4bfc5b97e89794154403650373e6143
3e67453a6945426b4950634d76826eb5c0afd6e1d0c4cfbfb5c0b0b6c2b4b2beb0
c5d3c4a4b5a57d8f7f768b7a7b927e5c735f38513c36523b3d5b41415f4350694c
667a5f839178a1a992babca7c8c5b4ccc9badad6cae8e5dce4e5dde1e6e0e8f1ee
bfc9c86f807a536b5d56715e3c57444d66515a6f5c586b57768473d9e6d5e9f1e2
d1d7cbd3d4cce5e4dfebe7e6ede9eaf6f0f2f6f2f3f0f0eefbfffbd4e4d94f6a57
44664d3d64454b704f4b6d4c62795c606e55909883bcbeb0b6b8adc8cbc4c2c9c2
d5e1d7aebcad697a674354415465525c6b56586551838e7dc9d0c0e3e7d9dde0d5
f5faf3ebf4eff7ffffc9d9d9a2b7b86f8a853557463e644b53735b506c556f8771
91a28fc1ccbbd1dac9e2e6d8eef1e6f4f7f0f0f5f1eff5f3f0f8faf1fbfd889696
5b726a3b57495b77686685736c8d787ea0888fb19956786038584148644e4b6451
50655498a999d7e4d3dce4d5f4f7eef7f5f6fefcfffbfffff2fffed3e8e3a6c1b8
7a988c54706260786a7486789fab9fe2e9e1f3f8f2f0f2effefffff3f5f4ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefefdfdfffdfdff
fdfdfff8f7fcf8f7fcf8f7fcf7f6fbf7f6fcf7f6fcffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffefff9f4f8fcf7fbfffcfdfffffdfffffdfdfff9f9fff6f6fff3e2f0df798b75
98af957d9679809b7c89a78578977572906e889f8597aa94aabca4bbc9b2c4cdb8
c7cfbacdd0bdd2d1bddcd9c6e4dfcbe0dbc7dfdac6e9e2cfede8d2ece7d1edebd4
ebebd3f1f3dbf6fae1bfc8ad7380666b7b607084684b6245577053627b5e6b8369
698167687c6371856c8a9c84a3b197b7bd9bc4c5a3cecfafd2d2b6d8d6bfdfddc8
e3e0cfe1dfd2faf8ece3e3d7f9fbeefcfff3d2d9c78b947f68745e576a54577960
578267699073779a7c7592746f88687c8f6f93a281aeb999b9c0a1c5c8abcccfb4
d1d0bbd6d5c1dddccae4e0d5f7ebefede0e7faf1f4fefdf9f2f8eef1feedcfe3ca
88a1846b8a6a5a7c59507450577d585f85605f84625e836161836a85a59ac3e0dc
e2fbf5dcf3e9e5f7ebd9eada9baa955f6d566070565165494e6749597858608363
578060517e5d577f64799485b6cac1cbdcd2c8d5ccd4e0d6cdd7ccbec6b9c8d0c1
758070576651415740456246486b4b3d66443a6843486d4c6f7e69aeb2a3c1c7b9
bcc5b4c1cebdb8c7b4abbeabbcd2bd9db4a0839b85869d897f9781556c58435b45
4257442c442e435d424f694c667a5e7f8f7498a289afb29dc2c1adcec8b8d9d3c5
e9e5dae3e3d9e8ebe4f1f7f3bdc9c77585845c716a47624f42604848644d4c644e
5a6d597f907dbac5b5dbe3d6e5e8dfd6d7cfdcdbd7eae9e7e9e7e8ebe9ecf3f1f6
f4f4f6f7f9f8f7fffb83998d59786640684d416d4c517b574d6f4c6d826379836a
999a88b4b2a5babab2c2c5bed3dcd7cdddd3778a764b5f46505f4a5d6a565d6452
909485d1d1c5d4d4cae3e3dbe5e6e0edf4edf0fbf7e7f7f4bfd3d18aa3a05e7c72
395c44486d4e5576596582667d937ca5b7a1c3cebed3d9cde3e6ddf3f4eef0f2ed
f5f9f8f2f8f8f9ffffdde7e9818f8f516b623d5c4d5576656788756b8e7a799c84
7b9e864d6f564563494f6b524f6751637663aab6a8dce4d7e4e7def9f8f4fef9fd
fbf9fefbfffff2fffccbe2da9ab6a87190815570616378697a8a7db2b9b1eaefe8
f9fbf6f7f9f4fcfffdf8fdf9ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffefefefefefefdfdfdfdfdfffdfdfff8f7fcf8f7fcf8f7fcf8f7fcf7f6fc
f7f6fcffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffefffcf7fbfef9fdfffdfefffffdfffffd
fcfff8f5fbf1f1f9ecc6d3c276857099ab938fa3888da48789a282809b7a8ca587
a4b89fb2c1acc2cfbbcdd9c5d4dbc9d7dcc8d9dcc9deddc9e1decbe0ddcae6e3d0
ebe9d4eee9d5f3f1dcf6f4dfededd5f5f7dff6fce0b3bca16b755a637255647457
586c5061785b6a8164687f626a7e636f83687f8e7793a28ba8b69fb8c2a9c4c7aa
c9c8aad2d1b5e1dfc6ebead5ecebd7ebe9dae9eadcf2f4e7f3f7e9fcfff3dae5d4
8c9884606e575f6e57576f55688a6f6b92757a9c817fa081799475768e6e92a383
b4c2a1bfc8a9c6ccb0ced1b6d3d3bbd6d5c1dddccae6e4d5efebe2f8eff0fbf5f7
faf9f7fefffaf8fff3cddcc9889c83526c4f6685655a7c5b5a7d5c658867668968
5f82626a8d6d80a289c2ded2e3fcf6e4fbf3d6ece0cce1d299ac995b6c594c5e46
55694e50674b5a74576786675f82625075565a8365799c84b0c8bad3e4dadbebe1
c1d1c7becbc1d2ded2bac6b8808d7c3f4d3c3f513b495f48546e534b6c4d3f6443
476f4d5f8061a0af9ab8bfadc2cbbab6c2aeafbeabbbcdb7b6ccb79fb79f7a927c
829c8378917b5d775e48604a3b533b374d383b513a50674b667a5e82947a9da991
aeb69fbcbfaccbc9bad4d0c4eae6dbe6e3daf1f2eaeff7ecc0cbc37e8e8454685f
4860533d584547634c5a725c4c624d748572b1c0ade9f1e2dbe1d5dfe2d9dbdcd4
e6e5e1efeeeceae8e9eeecedf9f7fafafafcf8fcfbbecbc2465c4f51725d446c51
4c7857557d5b5678576d81658d9981a7aa97b7b8aacccec3c6cbc4d5e0daa6b6ab
5669564e614b54634e6b7763939a8abec2b3dadacedfdfd5e4e5ddeff2ebe8efe8
f4fffbccdcd9aec2c06c85814b695f45674f5376585a7b5e7a977b8fa58ebecdb8
cad5c5d5dbcfe5e8dff5f8f1eef0ebfafefdfafffff9ffffbdc7c9738382486259
4766575475646c8d7a6c8f7b74977f63856d43654c4e6c54566f595267547d8e7c
c3cec0e0e6daeef1e8fffefafffdfff7f6fbfafffff2fffcbdd4cc87a395668274
567162657a6b839386c8cfc7f1f6effcfef9fefffbfcfffdfcfffdffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffefefefefefefdfdfdfdfdfffdfdff
f9f8fdf9f8fdf8f7fcf8f7fcf7f6fcf7f6fcffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffefffffefffefcfdfdfbfcfffffdfffffbfefffafcfff6b6c1b1879482a3b09c
9aa9929aac929db195a4b89cb7cbafbfceb9c9d6c2d6e1d0dee7d4e2e6d5e2e5d4
e4e5d5e8e7d5e8e7d5e0ddcaeeebd8faf9e5f1f0dcf2f1dcfafce6f4f8e1eff8dd
a3ae906a775b5f6e516373566a7d5f708367697d616e82666d816575876d8a987f
a3af99b7c0abbdc6b1bfc4aed2d0b9d4d0b7ddd8c2ecead5f3f2def1efe0f0f1e3
f5f7e9f2f8eafbfff4c8d5c3808f7a677961667a5f647b5f6b856876977a7a9d7f
7795796f8c6e7b92759aad8fb4c3a4bec9abc6ccb0ced2b9d8dac4e0dfcbe4e3d1
eae8d9f3f1e4faf7eef2f1edfffffbfcfffaf4fcf1d7e4d38d9e8b556c52597356
6281625a7c5b64876772957565886a5b7e6082a388bcdcc5dff7eadff4ebdcf2e6
c3d9cc8ea3925f7461516752546c544b634959735867846866846855765b55765b
7b9d84abc8b4d7ebdfc7d7cdcadad0cfdfd4c2d2c5b5c6b68495853b4c3a485b47
495f4850664f516b504865474968496685668aa487b9c7b0b1baa5b6c2aeb8c6af
b0c2acbbcfb6abc3ab7892777a947b789277546e553c563b475f47445c4240563f
55695067795f7f8f749da991b2bba6bec2b1c7c8bad4d2c6dedbd2e4e1daebece4
f9fff5d4ded3819184566b5c516959425d4a405944627a64647a65617460a5b4a1
d4dfcfe1e7dbdde0d5dfe0d8e1e2dceeede9f1f0ecebeae8f5f3f4fffefffeffff
d8e1dc6f7f7541594b395a45487055507c5b527a58648363758c6f9ba990b3b8a4
bdbfb1d5d8cdd2dacfb8c3bb748177596a5851634d606d599ba793d5dcccd1d5c7
caccbfeaece1ecede5f8fbf4eaf1eaebf8f1b6c7c196aba658716b3f5d5153755d
587b5d617f63839d82a2b59fc9d8c5d4dfcfdbe1d5e9ece5f5f7f2f2f4f1f7fbfa
fbfffff0fafb9ca8a86474714761565372625879687293806f907b70927a4e7057
4060484f6b54546d57586b5898a695d8e3d5e5ebdff7faf1fffffbfffdfff4f3f8
f5fafdf0fffaaac1b9728e805a7668597163687d6e919f92dbe2daf5faf3fcfef9
fefffbfafffbfcfffdffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fefefefefefefdfdfdfdfdfffdfdfff9f8fdf9f8fdf9f8fdf8f7fcf8f7fdf8f7fd
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffefffffdfffaf8f9fbfbfbfffffdfffffb
fefffafafff6b3b9ada1aa99aab3a2a3af9bb6c2acc7d5bccad8bfc9d7bed2ddcc
dbe4d3e5ebddebefe0eaecdeeaebdbebecdcefeddef1efe0ebead8f3f2e0f5f6e4
f1f4e1fcffeaf7fce6d7dfc79aa78b7384645f705061745466795b728567798c6e
6e81636f826680907597a58cacb69eb9c1aac3c8b2cdd0bbd6d5c1e5e0cde9e2d0
f1ead8f9f3e3f9f6e7f5f6e8f8faedfbfff3f5fff0c3d1c0788b775b715a688066
627c5f5f7c5d7998787190707493747690737a917491a687b2c2a5c2cfb3c2cbb0
c7cbb2d3d5bfe4e3cfefeddef5f1e5faf6ebfefbf2fffff6fcfff8f5fff4f8fff6
d9e7d6889b875c725b5e785d5b785a6180616485666a8b6e6b8c6f698a6f7b9c81
b0ceb6e3ffe9d4e9dae1f3e7ccded08ea3925b725e546d575771584a664d536f56
62806666846a5a785e5c78617d9983aac5b2cbe2d2d6e6dbc9d6ccbfcfc4d2e2d5
c5d7c96d8271334837455c485d755f556d554e664e4b634951684c657c608ba286
aec0a6b3c1a8beccb3b1c0a9aec0a6bed2b9a9c0a4839b817c96797b957a496648
3d573c455f423d553b4760435e755b61755a84927898a28aaeb6a1bec2b1c5c7ba
cecec4dcdbd6e9e8e4e2e3def9fcf5d4ded592a091697e6b506953415f454f6d51
516951687b6571826f9baa97cad5c5e1e9dad6d9cededfd7e4e5dfeae9e4f2f1ed
f0efebececeafcfcfafffffff3f7f69aa59f475b4f4a6554365840476e534c7555
5d82616d8c6c90a78aa4b49ab4bda8bbc2b2c8cec0d3dbd08c978f53605652604f
55644f919e8cd6dfcedee4d6d9ddcfe8eadff2f3ebf6f7f1f9fef7edf7efd6e3dc
a4b5ad788f87516b62425e506181695a7b5e69856c819981afc2aecad7c5dfe7d8
e1e7dbeef1eaf4f6f1f6fbf7f0f6f4f9ffffd0dad984908e576a644d675a5d7c6c
5f806f7596836e8f7a68887147674f45634b4c654f546c56657664aebcabe6f1e3
ecf2e8fdfff9fffffbfffdfff5f4f9f4f9fcecfbf696aba4647e715670635c7466
718375a4b0a4e6ede5f5f8f1f9fbf6fefffbf6fbf7fcfffdffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefefefefefdfdfdfdfdfffdfdfffaf9fe
faf9fef9f8fdf9f8fdf8f7fdf8f7fdffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffdfbfbf9e9ebe6daddd6afb2a7c3c7b9c8ccbec5c9ba
d0d7c5dae2cddce4cfd9e0cee1e7d9e7eddff0f4e6f2f4e7f1f1e5f1efe2f3f1e4
f6f4e5ebe9dcf7f5e6fbfcecf6f9e6feffeffcffefd6dec98c988055684a6d8261
6479586176557a8f70758a6b697c5e80907392a0869eab91aeb8a0bfc4aecbcdb8
d6d5c1e1decbe9e3d3e9dfd3f4eae0fbf3e8fef8ecfffff4fffff4fcfff4f6fff1
bccab96e816d5068506481656784666382626e906d7698756684626f886a859c7f
a4b79bb4c4a7b7c4a8c1caafd0d5beced0badadcc7edebdcf8f6e9fefaeffffdf4
fffff8fffff8f8fff4f5fff4d3e6d292a8936179615b755c607d6159775b658367
6e8f726c8d7267856d82a088b8d5bfdaf6e0def7e4d8e9d9d3e1d292a391556a57
516a544e6a5346644a50715665876c67876f5e7e665c79637f9883b4cbb9cfe4d5
cee0d2c3cfc3d1ddd1d4e2d5b6c8b8768b7a3b523e39523d5a765f56725b4f6950
4a624a556c5270826a909e85abb79fbbc7afb7c5acbdcdb3bdcfb5b4c8ada0b79b
869f827a94777f9c7e516e503a57393a54374a64474c65484c634761785c7e9076
a2aa92afb29dbdc0adc7c8bacecec6d8d7d2e6e5e3f0f0f0feffffd3d9d58d9a90
5d6f5f4f674f4d6a4c50724f5d7c5c667d6360725c8e9b89d9e4d4d6decfe2e8dc
e7e8e0e1e2daecebe6efeee9f3f2eeeeefeaefefedfcfefbf0f2efc7cdc95e6e64
4e66584764504d6f57466a504d74557396767695759ab395a5b79db9c5afc8d1c0
c6cebfbcc7b96470664553464b584797a492d3decdd9e1d2d5dbcde4e7dcf3f4ec
f6f9f2fbfef7f6fbf4e9f3ebbac7be8b9f945d746a516b604e6a5b69876f5f7d61
738d74889e87bacbb8cbd8c7e4ecdfe8eee4f1f3eef6f8f3f8fdf9eff5f1ecf7f3
a6b2ae6f7e7b51645e5771645e7d6b63847170907b6888715c7a6249674f4b6750
4f67515c725d819280c4d0c2eff7ecf3f9effdfff9fffffdfffefff8f7fcf6fbfe
e7f6f181968f5c7669587265607669809083bdc7bceff4edf4f7f0f9fbf6fefffb
f8fdf9f9fefafeffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefefdfdfdfdfdfffdfdfffaf9fefaf9fefaf9fef9f8fdf9f8fef8f7fdffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffdfafaf8e5e6e1
d3d4cecacbc3edefe4e8eadfe7e9dce7e8dadddecee7e8d8f5f6e8edefe4f2f4e9
f9f9effcf9f0f9f6edf9f5eafcf8edfffbeff1efe3fcfdeffffff3fefff1fbfff0
d7e0cd95a18d637359688060556f4c6d86668098786d8565788d6e92a5898f9d83
b8c4acbec6afc7cab5d2d4bfdfdccbeae4d4f1eadaf4eadef3e6defdf2ecfff6ef
f9f5ecfffff6fefff6f0fbebc4d2c16c826d526c53587559698a6b6a8c6b729672
789e796a8c67738d6a849779a2b295becdb0c5d2b6c3ccb1cbd0b9dcdec9e0e1cf
eae8d9f4f2e6faf7eefcf9f2fdfaf5fffef9fcfff8edfeebd4eed390aa8f5f7c60
68856967846859775b6482666a886c6e8c7272907885a18bb0ccb6daf5e2e2fbe8
d1e8d6c3d2bf93a08c5a6956485e49536d544b694f4c6e53688c706b8f75698c74
6b8b747e9b87abc2b2d4e6d8dae7ddcad6cac8d2c7ccd7c9bdcbbc768878304735
405944607d67506e564c6a524a664d566c5571836b97a58eb5bda8c0c3b0bcc1ab
bdcbb2b2c6aabdd4b7aec7a97f987a728d6e759273617e5f355233456243415c3d
445f405c75575f76596f8367a2b096b9bda6c1c0accbc9bad4d2c6dbdad5e5e4e2
ededeff2f3f5ebf1f1919c96596b5f4d6450436044547351688d6464845d75896e
7d8a76bbc4b3eef4e6e0e3d8e3e4dcf3f4eceae9e4f0efebf2f1edf3f4efeff0eb
f1f3eef4f9f3cacfc9838f854c6054516e5c4d6d585779614f7158678a6c7e9f80
89a6889ab396a8bca1becdb6d3e0cec8d5c4919d8f576558556155808b7bd5decd
e4ecddccd2c6dfe2d7e8ebe2e3e6dff7f9f4f7fcf6eff6efd9e4dc9fafa56f8378
4a6254516c5d5c796567856d6683677b937b9fb29ec5d3c2d6e1d3e4ece1ecf1ea
f2f4eff9fefaf2f8f4f3fcf7d0ddd682918a5f726c50655c5d796a587765648371
64846f5e7b654b67504e6751526a525c725d6f826ea7b5a4d8e4d6f2faeff9fef7
f9fbf6fffffdfffefffdfcfffaffffe2f1ec71867f5d756860786b65796d95a396
d8e0d5f6f9f2f6f7f1fdfef9fefffbfcfffdf7fcf8feffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefefefefefdfdfdfdfdfffdfdfffaf9fefaf9fe
faf9fefaf9fef9f8fef9f8feffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffdfefff6f7f9
f3f3f3fafafafffffffffffdfffffdf6f7f2fffef9fffff8efefe7f6f3eafbf9ed
eae8dcf3efe4fffff4f5f2ebf8f8f0fffcf5fffdf6fffaf4fefaf1fffef5fffff4
fffff6fffff4fcfef1fcfff3e2ebda929d8c63705e73856d667f617e99787f9878
718a6a778e71889c80a0b095bcc8b0c0c8b1d5d8c3eae9d7efecdbeae4d4e9e2d2
f5ebdffff6edfffbf8fffcfafffdfaf5f2ebfcfdf5fcfff6c4d1c0798c78566e56
6a876b678869688b6a7da17d789e796288616585608ba07fa3b293b4c1a5bac4a9
c4cdb2d7dcc5e1e3cededfcdf2f0e1f5f3e6f9f6edf8f5eef4f3eef6f5f0fcfbf7
fbfff8e2fae28cab8c607f606988696c8a6e65836769876b6c8a706c8a70637f68
78947eb1cab5d9f2dfdbf4e1d1e9d9d2e7d6889581525e484d5c455a70594d674e
58795e73977b688f7461876e6b8e7682a28da6c1b0c8dcd0d7e7dcd4ded5ccd4c9
e0e8dbc4cfbf7785763548353c533f56725b55735b4969514e6c52556f56667c65
899883b1baa5cacdbacac7b6babca7b0bea5bdd4b7abc4a68ba687849f80769374
567354405f3f456243405b3c4863444e674951684b74886c9fb296afbca2c4c6b1
cdc7b7d4d0c4dedbd2e7e6e2efefeff2f3f5f0f6f6909a9973827b4c61524c654f
6683656888635d815569885f7c8c72adb6a3dfe5d7e3e6dbecede5e2e3ddeeede8
f2f1edf0efebf2f3eef4f5f0f0f2edf2f7f1ecf3ebaab4ab4e5e5155705f43634e
62846c4e70575c7d6286a48a7d9a7e9bb598a3bc9fb2c6adbbcdb7ceddc8c0cfbc
687564606c5e768274ced6c7c8cec0cad0c4d8ded4e4e7dee6e9e2eceee9f4f9f3
f2f9f2e8f2eacbd8cf91a1965a6e624058484f6a5766826c6480676e886d80967f
b3c6b2cbd9cae1ebe0e3e8e1eef3edf2f4f1fcfffdecf2eef8fffdb9c8c16e7f75
566c6051695c617e6c51715c62826d5d7a6456725b405943516951546a53697c68
7f907dc2cec0e6f0e5f5faf3fcfffbf4f6f1fcfefdfcfbfffefffff9ffffe1ede9
697c765e7468667c70697b6fa3afa3eaf2e7f9fcf5f8f9f3fffffbfefffbfcfffd
f7fcf8feffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefefefefe
fdfdfdfdfdfffdfdfffbfafffaf9fefaf9fefaf9fef9f8fef9f8feffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffefffffefffffefffffefffffffffffffffdfffffdfffffb
fffefbfffffafffffafffef8fffef8fffff6fffef6fffff6fffffafffffafffefa
fffefafffefafffef8fffef8fffff6fffff8f6f6ecfffff6f8fef0919c8c758271
717f6e7f927c7a9376748f70758e7081987b9aae93b3c5abc7d5bcd2dbc6dde2ce
e1e2d0e8e5d6efe9dbf7efe2fef6e9fffcf2fffdf4fffcfafaf0effffdf9fffff8
f1f7edc1ccbe7384716177605a74596483647698777fa37f759975698d67769a74
93b18dabbc9cb5c0a2c0c9aeced4badadec7e4e6d1eaebdbefede0f7f5e9fffdf4
fffff8f5f4effcfdf7fdfff9eaece7f8fff87b987c698c6b5c7f5e57795858795a
6381656b896d6d8970708c75829b86bad3bed9f0decfe6d6d7eedebdd4c4728572
5967506571595f6f554f664c5a745b72937873977d5e846b7598807c9d88abc8b6
d1e9d9d7e9ddcbd8ced4dbd3d4dcd1bfc7b8747f6e3c493847584561796356725b
45634b48664c57735a6b856c94a791b9c6b2c5cab6bbbcaac2bcaccdccb8ccdcc2
b3ccae8ba4867b96777a95764e6b4c2e4b2c425f403c57384e694a5d7658637a5d
778a6e97a78cb0bea4bac4acd4d3c1d0cabcd2cec3e5e2dbe2e3def6f8f7f6fcfc
a2acab5b676353645a5168585a735d617e6065835f6a8b60758f68abb9a0ccd0bf
ebefe1f7f9eef0f1e9eae9e4edece8f5f4f2f7f7f5fafaf8f4f9f3e7eee7ebf5ec
b9c5b95f6d5e5b705f49695453765e5d7f675f7f6765816877917890a88ea2baa0
b2c9afbcd3b9c0d3bdbed0ba7d8c79626f5e5b6656bcc4b5c2c8badce0d2dcdfd4
e0e3dae8ebe4eef0ebf4f9f5edf2eef0f9f4eef9f197a79d6f817559705e425b46
637f686b876e6d876c7d957b9db09abfd0bdd6e2d4dee8dde7ece6f1f3f0eff4f0
f4faf8f5fef9dfece588998f617569566e605c776664816f5a7a6565826e65826c
536c564e66505568524c5e48768572b5c2b0e1ecdeebf3e8f3f8f1fdfffafefffd
feffffeeedf2fbfcfff9ffffcbd7d362756f6b81755c7065809085e2ece1ebf1e7
f7f8f2fffffafffffbfefffbfbfffdfbfffdfeffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffefefefefefefdfdfdfdfdfffdfdfffbfafffbfafffaf9fe
f9f8fdf8f7fdf7f6fcffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffefffffefffffeffff
fefffffffffffffffffffffdfffffdfffefdfffefbfffefbfffefafffefafffef8
fffef8fffef8fffefbfffefbfffefbfffefbfffefbfffefafffefafffef8fffffa
fffff8f4f5eda6aca07e897b717d6f7a88797184717c947c849c8295ac92abbfa6
c1d0b9cfddc6d7e0cddadecdeaecdef2f0e3f9f5e9fff9edfff9effff9f0fffdf4
fffdf6fbf3f0fffefbfefdf8fefff8d6e1d37786737187705f795e6784667b9a7a
82a48172946f6789647595708dad88a0ba97b4c1a3bec4aac9cdb4d5d9c2e0e2cd
e8e9d7efede0f2f0e4f5f2e9fffff8f6f5f0fefff9f7faf3f5faf3fafff9abb9aa
7594755e845f5f82615e81605677586b896d77937a6079637a937eb7cebad7eedc
d4ebd9d6eddbc1d8c6839a8a50655255654b526046596b516c8369718b7265836b
5f81696588707a9b86b6d6c1bbd6c5c0d7c7cfdfd4e0ece2cdd4ccdbe3d6828a7b
4e5a465663516a7b684e644f49614b5c765d556f56738d74879d86a6b8a2bdc9b5
c3c8b4c2c1afcac4b4d0d1bfc0d0b694ad8f809b7c748f70537051425f40456243
456041597455566f515e75587a8d719cac91b3c1a7bfc9b0c3c8b2d1cfc0e3dfd4
e6e3dae7e8e0fefffbf1f7f3a7b2ac6b7a7354655b586c60617866668067688265
6c87667a946f8ca180c5cfb7daddcceceee1f1f3e8edede5e9e8e4efeeecf7f7f5
fbfbfbf4f9f5f6fdf6f1fdf3d7e5d86f81715f74614e6751597b63557c615c7c64
67836a758d75859b849aae95aabea5b9cdb4c4d8bfc7dac49db09a7d8c79576452
889180bcc2b4c8ccbedcded3dfe0d8e6e9e2ebede8eaece9f0f4f3ebf1eff4fdfa
cfdcd58e9e935b70614e6551526b55617d64728c716e876a889f85acbea8c8d6c5
dae5d7e7eee6eff4f0f4f6f3f1f5f4f8fefcf4fdf8c4d1c8819387566d5d55705f
5a77635e7e6963836c65826c57735c4c644e5268535a6c5652614c859280bfcaba
e8f0e3eff5ebf7f9f4fdfffcfefffffefffff8f7fcfefffff7ffff9ca8a460716b
677b706e7f759daaa0e8f0e5f0f3eafaf9f4fffffafffffbfefffbfbfffdf9fffb
feffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffefefefefefefdfdfd
fdfdfffdfdfffbfafffbfafffaf9fef9f8fdf8f7fdf7f6fcffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefffffefffffefffffefffffffffffffffffffffffffffdfffffd
fffffdfffefdfffefbfffefbfffffafffefafffefbfffefdfffffdfffefdfffefd
fffdfdfffefbfffefbfffefafffefbfffffac2c3bd70766c7e867b8490848e9c8f
88998998ab97a8bba5c0d2bcd7e6d1e5f0dfecf3e3eef2e3eef0e2f4f4e8fefcf0
fffff4fffff4fffef5fffbf2fffdf4fffff8f3f2edfffffafcfff8dae5d783927f
697c665870567491727998767b9b76779571718f6b7f9a779ab491a9c19facbf9f
c3ccb1cbcfb8d5d7c2dfe0ceeae8d9f1efe2f5f2e9f7f4edfffff7f6f5f0fefffa
f8fdf6f3fbf0f6fff5c0ccc0697c695c7b5c6a906b5f82615a7b5c6e8c706a866d
67806a839a86b3c8b5d6ebdadcf1e0d3e8d7c2d7c6879c894f665450665152664b
54674b697d627f967c779178607c6569867088a591b9d4c3bdd8c7dff6e6c3d8c9
ccdccfdce8dcd4ded3778272525d4c5260495d6c5763755f5b6d57586b55657b64
758b7498ab95aabca6bbc8b4c2cbb8c5c9b8cbccbcd0cebfcdd0bd9cae9490a98c
6d876a516b4e4c6649455f424660435a745769826562795d72846a9aa88fbac6ae
c5cfb7cacfb9d0d3c0e7e7dbe2e2d8eff0e8f3f9eff4fef5b5c2b857695d576c5d
5970605a715f69816b778d766e856b6b7f6491a488c7d5bbe2e7d3e9eadaeeeee2
eeeee4ebeae5edece8f4f4f4fbfbfbf7fbfcf3f9f7ecf7f1f5fffa92a7964c634f
50695357755b638a6f587f625c7d62738d74899c8698a790a9b7a0b9c8b1c3d5bd
c9ddc4baceb57d91786d7c67606c58b4bba9c2c4b6d3d3c7ddddd3e2e2daeff0ea
edefece6e8e7eff3f2edf6f3eef9f5a3b2ab798b7f485d4c455d47678166638062
748f7070876b9aac94c1d0bbd2dfcee0e8ddf0f5eefafcf9f6f8f7f4f8f9fbffff
e9f4ee9caca27084784c645453705c5878615b7b646a8a73607d6746624b465e48
586b5562715c616e5aa1aa99d1d7c9f0f6eaf6f9f0fbfdf8fffffdfdfffefeffff
fffefffeffffe9f1f3798581677872617268819187c5d1c7eff5ebf6f7effffcf7
fffffafffffbfefffbf7fffbf4fdf8feffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefefefefefefdfdfdfdfdfffdfdfffbfafffbfafffaf9fef9f8fd
f8f7fdf7f6fcffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefffffefffffefffffeffff
fffffffffffffffffffffffffffffffffffdfffffdfffffdfffffdfffffbfffffd
fffffdfffefffffefffffefffffefdfffefdfffdfdfffdfdfffefbf6f2efe8e7e3
959691898c8599a098a6b0a5a8b4aabac6bac9d6c5d4e1d0e4efdfeff7e8f4faee
f9fbf0fffff5fffff6fbf8f1fffef7fffff8fffff8fdfaf5f8f7f2fcfbf6fffffa
fcfff8f2faefeffbed849380677a64637c5f728d6e7c9a787694706a8862728c67
8ea682aabf9eb7c8a8bbcaabc3cdb2d5d9c2dadcc7e3e2d0eceadbf3f1e4f8f5ec
fbf8f1fcf9f4fffffaf8f9f3fcfffaf4fef5f5fff5ccdacb708171627863506f4f
688c68648766638465718d74637c66758c78bbd0bde0f2e2d8eadad4e6d6c2d5c2
8ca18e5a705b4d654f5870585972556f886a7e977a768e746a826c768f7a9bb2a0
bad1c1cce3d3d7ecddc5dacbe3f5e7d9eadac6d4c56d796b44513f59665265745d
5e6d5656654e61705b71806b84937e9dac97b4c1adbfcbb7c3cfbbc3ccb9cdd1c0
d6dac9cdd0bfb6bdab82947c869f825c765b3c56394e684d4f694c496348627b5e
62795f77896f99a790b6c0a8c0c8b3c3c8b2d0d1bfe0e1d1f1f2eae5e8e1f6fbf4
e8f2e7adbbac6b7d6d485f4b59725c5e7761647e656e846d71846e71806b85927e
bec7b4f4fbe9f0f3e2f0f1e3efefe3efefe5f2f1ecf6f6f4fbfbfdfdfefff6fcfc
ecf7f3f2fffad2e6da5d76635371594b6c516a8f705f886a577e61648268819780
9aa891a6af9ab9c2adcedac4cddcc5c0d2ba94a88f70846b596853868f7cc4c8b7
cccdbde2e0d4e2dfd8e5e2ddf4f3eff0f0f0e7ebecf7fdfdf7ffffd4dedd7f8e87
5f7165435a464b654c738d706c8a68708b6a778b6faab9a2d2dfcbdae5d5e3e9df
f4f9f3fdfffef5f7f6f5f9fafbffffd1dcd87c8d835a70634964514f6f58587a62
5d7f6768887055735b4059434a60495b6e586b78647f8b77bfc6b6e5e9dbf8fbf2
fafbf5fffffdfffffffcfdfffefffffffefffcfdffd8e0e277837f6d7c7765756b
99a69de6f0e7f8fbf2fcfcf4fffdf9fffffafffffbfdfffaf5fef9f3fcf7feffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefefdfdfdfdfdff
fdfdfffbfafffbfafffaf9fef9f8fdf8f7fdf7f6fcffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefffffefffffeffffffffff
fffffffffffffffffffffffdfffffffffffffffffffffffffffffffffefffffeff
fffefffffdfffffdfdfffbfae5e4e0b8b9b4d6d8d3dce1dbdce3dbe3eae3eef5ed
eff7ecf5fbeffbfff5fcfff4fafbf3fdfaf3fffef8fffef8fffdf9fffffafffefb
fdfcf8f8f9f4f8faf5fcfffdfbfffbf6fff6e1efde81927f768d7360795c789372
83a17d75936d68875e758f6891a781aebf9bbac8a7bcc5a8caceb3dcdec8e4e6d1
e9e7d8efede0f6f4e8fbf8effefbf4fffcf7fefdf9f9faf5fefffbf6fdf5f8fff8
d7e5d67c8f7c637865677f676180605375526f8e6e7794765f775f7c927dbed1be
d2e3d3ddede0dff0e0c8d9c990a3905f7560566c555c745c5872576b886a799678
7895776c866b768e78a0b5a2c7d9cbd5e5dad2e2d7c2d2c7d8e8dbd7e8d8ccddcb
62736046574457695367796158684e66765c69775e5d695385917bb9c2adb7bfaa
c2cab5c5cdb8c4cbb9c6cdbbd2d9c7d5decbb9c2af929f8b7689735e765c506850
465e44435b43546c525f775f546b516c7e6894a38cbac6b2c5cdb8c4c7b6cbccba
dedbcceae8dce3e5e0f9fffde8f3eba7b7aa6176634c644c59765a4f6c4e617e60
6983666980666e7d688e9988c6cabcebebe3f5f2e9f1f2e4f1f2e4f2f2e6f6f6ee
fcfdf8fffffdfefffffcfffff9fffff5fffdf1fffc7e968858755f51735a668b6c
658e6c4f7b5a587f60728f7392a48ca5ae99b2b5a2c8cbbadfe6d4cedac6a2b19c
7589706a7c64616f58acb49fc6c7b5d9d6c7eeeadfe7e2dce7e3e0f5f4f2f0f0f0
f0f4f5fbfffff5ffffaab6b46a7b73495d514e65515d775e748f707795716c8764
869a7eb6c5aedae7d3dfeadae4e9e2f5f7f2fbfdfcf3f4f6f5f9fcf0f9f8afbbb7
6a7b71496151516e5a4f71585a7c6361836a5c7c6448664e445e45556b5462745e
7e8a76a8b19edce0d1f4f6e9fdfef6fcfdf7fffffdfffffffafbfdfefffffafbff
f9fdffccd4d676827e606f6a829288c2cdc5f8fff7fcfff6fffff7fffefafffefa
fffffbfcfef9f5fef9f4fdf8feffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffefefefefefefdfdfdfdfdfffdfdfffbfafffbfafffaf9fef9f8fdf8f7fd
f7f6fcffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffefffffefffffefffffefffffefffffcfffffcfffffcfffffcfffffcffff
fcfffffefffffefffffffffffffefffffefffffdfffffdfffffefff4f0effaf9f7
fffffbfefffbfbfffafcfffbf9fef8fcfff8fffffafffffafffffafffefafffbf8
fff7f5fff7f5fffdfbfffdfdfffffdfefefcfcfffffbfffff9fffff7fffdd6e7d7
8da08c62795f627b5e8dab897898737d9d74729368809c7398b189acc19ab3c19e
bec5a6d2d2b6e0dbc5e2ddc9f2efdef3f1e4f8f6eafdfaf1fffdf8fffdfafffdfa
fffefcfbfbf9fcfffbf9fffaddebde8fa191657b666e8670698368698868658464
718e70728c717b917cb9ccb9e8f6e7d6e4d5dde9ddd5e3d49aa89960715e576a54
52694f566e54738d707798796e8f726d8b6f7e9a81a4b9a6c5d7c7d4e2d5d3dfd5
dde7ded8e2d9cfdbcfbac8b95667554e614b586e5761785e60745955674d617157
77836b8c9580b0b8a3cacdbac1c4b1cbccbacacbb9cacdbccbd2c0ced7c4bfcbb7
98a79273856f5b715a516951445c46435b435068525a70595e745f677a6492a18e
b1beaacbd2c2ced2c1d4d2c5e3e0d1f1ebdfefece3ebf1edf7ffffa4b4aa5d7263
4d66504764465877555c7c5775936f5e795864785d99a692d6d9ceeeede8f2e9ea
efe7e5f3f1e5f3f4e6f7f7ebfdfdf5fffffbfefffffcfffffbfffff8fffff4ffff
b9cec557736451735b51785b6f9878507c59497753638b6985a286a1b099b2b7a3
c1c0aed3d1c2dfe2d1bac3b083927d71836b697b6389957fc1c6b0d0cfbbe1dbcb
f3ece4ede5e2ece7e4f5f3f4f0f0f2f6fafdfbffffd8e2e3828e8e61726a44584c
5c735f6f896e718c6d7d9b7776906da1b498c4d2bbe0ecd8e6eedfe8ede6f3f5f2
f8f9fbf4f5f7f5f9fcd9e2e1909c985e726745604f5a7a63577960597d6161836a
4f6f574260464d674e62755f74836e9ba793ced5c3f1f3e6fdfff4fefef6fcfbf7
fffffdfffffff9fafefefffff6f7fcfcffffbcc4c667736f5f6b67b3c0b7ebf6ee
fbfffafffff8fffff8fffefafffefafffefafdfffaf7fffbf7fffbfeffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffefefefefefefdfdfdfdfdfffdfdff
fbfafffbfafffaf9fef9f8fdf8f7fdf7f6fcffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefffffefffffefffffefffffcfffffcfffffcffff
fbfffffbfffffbfffffbfffffbfffffbfffffcfffffefffffffffffffefffffeff
fffdfffffefffffdfef2eeedfffffdf9f9f7fcfefbf5faf6fafff9f1f3eefffffb
fffefbfffefbfffefbfffcfbfffcfdfff6f7fbf1f2fffcfdfffdfffffdfefeffff
fbfffff8ffffe9f5f3daebe39cb19e6981676882657a97787f9f7a8eb187698d61
8aab7e9fbc90aac399b5c5a0bec8a6d4d4b8ece6ccf4e9d5ebe0cefbf5e7faf8ec
fefbf2fffef7fffefbfffefdfffffdfefefcfefffde8efe8edf9efa3b4a4667b68
748c766885696683656c896a7c997a758f7281997fbdd0bce1f2e0e0ecdedeeade
d7e1d69fab9d6371625566535e715b546b515f785a86a38471947472977886a78c
aac6afc8ddccd4e2d5d4ded5d7ded6dee3dce2e9e1a9b3a8525f4e556653526851
5b73596680635b7256677b5f718167929e86c3cbb4d0d3bec7c6b4cac7b6d5d2c1
d4d3c1d7d8c8d4dbc9c0ccb89baa95758872617760485e49596f5a495e4b4a604b
687d6a62786366796699aa97bac7b6c2cdbccfd3c5d5d7c9e0dcd1ede7dbf8eee5
f9f4eeedf6f5aebebd5f736a48605056745a547653597e556d916578996e6c8661
8b9e82d2dbc8fbfbf3f4ebecf0e0eafbeff3fbf7eefafbedfdfdf1fffff7fdfef9
fcfefdf9fdfef7fffff6ffffddf0ec758c825372624669515e87695a8663497752
54825d779f7c9bb598adbba2c0c3b0d5d2c1dad7c8cfd0c09299877f8c78798b73
7c8e76aebaa2cdd0bbe0ddcae9e2d2f0e7e0efe7e4f3eeebf9f5f6f1f1f3f8fcff
e9f1f4a5b1b16674745d6e664d6155647b67779176708b6a7a98728aa47fc0d3b7
d2e0c9e3eeddedf5e8f0f5eff4f6f3f8f8faf9fafef6fafdbcc5c4798883576b60
506b5861816963876b597e5f5a7c6147684d466249556d55687a628b9982c1cab7
e7eedcfefff3fffff6fcfcf4faf9f5fffffdfffffff8f9fdfefffff9fafffbffff
9fa7a9636f6b8c9894dce9e0f4fff7f7fef6fffff8fffef7fffdf9fffdf9fffefa
fefffbf9fffdf9fffdfeffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fefefefefefefdfdfdfdfdfffdfdfffbfafffbfafffaf9fef9f8fdf8f7fdf7f6fc
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffeffff
fefffffefffffefffffcfffffcfffffcfffffbfffffbfffffbfffffbfffffcffff
fcfffffefffffffffffffffffffefffffefffffefffffefffffdfefcfbf9fffffd
f9f9f7fefffdf3f5f2fefffdfffffdfffbfcfbf5f7fcf6f8fffafdfffbfffffaff
fff7fcfffafdfcf8f9f9fbfafbfffff8fffdf0fff8d5e6debbd2c26882677c9a78
7d9b7983a17d819f7977966d96b2899ab58caabf98aebe99bfcaaadadfc1eae8d1
eee8d2f6eedbfff9eafef7effef9f5fffcf8fffefbfffffbfffffdfffffdfafff9
f4fef6f8fffab1c2b27a8f7c718a746b876e6c8a6e607e627d957d71877082957f
b6c9b5e0f1dee3f2dfdae8d7dfeddcb5c3b26576634f624e6376605c725b6a8268
81997f758f7468866e8ba892b6d2bccfe6d4d2e4d6cfdfd4d7e3d9e0ece2e1ede1
95a1955e6c5d5e6f5d566953566d53617a5d72896d6c7f636f7d63a2ac94ccd4bd
c8cab5c9c8b4d8d2c2d1cbbbded8c8dfdccbe3e4d4dae1cfb2bfab7d8f795e745d
5c745c5068504b634d5a705b6b816c677a66697a67909f8cbdc8b8cdd5c6c9cfc1
cfd3c5dadcd1e0ddd4e0ddd4efebe2fffff8cad7d060756c4d65575a76605e7c60
73957271936e63835c627e589aaf8ed0dec5e4ebdbe8e5def1e8e9ffeff9fff6fc
fffff8fffff6fffff8fefdf8f8f7f5f4f6f5f5f9faf4fefdeffffc93ada45c7b6c
41644e4f765b6088664e7651527a55698c6c8eab8dabbfa6b5c1abcacdbae2e1cf
dbdac8bec1ae6f78658a98817d8f7796a58ebecab4d4d9c5ebe8d7ede7dbeae0de
f0e7e8f8f2f4f9f7f8f0f1f3f3fcfbd5e1df7b8a85586c63576d60576e5c647e65
779174728d6c78926d9db593d7e6cfdce7d6e8f0e3f4faf0f7fcf6f6f8f5f7f9f8
fcfffff6fcfca6b1ad707f7853675b5e776465826c6f9178597a5f5672594a644b
4f654e5b6d576b78649da995dae1d1f3f7e8fffff6fffff8faf9f4f9f8f4ffffff
fffffff8f9fdfefffffeffffebeff2868c8c707976c8d3cff2fdf7e7f1e9f4f9f3
fefff9fffef9fffcf9fffcf9fffefafefffdfbfffdfbfffdfeffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefefefefefdfdfdfdfdfffdfdfffbfaff
fbfafffaf9fef9f8fdf8f7fdf7f6fcffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffefffffefffffeffff
fefffffefffffefffffefffffefffffeffffffffffffffffffffffffffffffffff
fffffffffefffffffffffffffffffffffffffffffffffffffefffffefffffffeff
fffdfffffdfffffdfffffdfffffcfffffdfffffdfffffffdfcfffde9f3eaeffff2
effff1aec5b17c997d759a717da27685a97d85a47b849d768ea27da3b291b8c3a3
c4c8afcdcfb7dadcc7eae9d5f4f2e3f9f7e8faf8ebfbf7eefffcfdfffbfffff9fe
fffdfefffffdfcfffbf8fff9f7fff8f4fff4b5cdb77d99827492786f9075608365
64896a7d9b8377857899a098d7e1d6e7f3e5e7f6e3d9ebd3d5e9ceadc4a7698264
617c5d5572545774586b87707e9a8478947e677e6c9faca2cdd7cfcad5cddae7dd
ddeee4c6daced7ede0ddf5e56f8875566f5a4d66505f775f6c826b687c63677b60
73816880856fa5a792c6c5b1cecbb8d1ccb9dad3c1ded7c7dad3c3e8e2d4e5e3d4
dadcced5dccc8895835d6e5b5568544b634b49664859765867806369806477866f
929e88b3baa8c5c9bacccec1e2e4d7e3e5dadee1d8eef1e8f4faf0e9f0e8dfebdf
5e756155715a4c684f4d6950627c61758f72728a7065796095a791c2cfbdebf1e3
f3f4ecedeae5f0eaeafdf4f7fffdfef1f3f0fcfffbfffffdfffefffffdfffffeff
fcfffff5ffffd8f2e7628473436b534e795b59815e4b6f495c78506a7f5e9da993
b0b9a8bac1afcdd4c2d3d8c4e0e8d3d0d9c46b775f707f6883927ba0af98b9c8b1
ccd8c4d9e0d0e3e5d7ebe8e1f6f0f4ece5edfefcfff2f3f5f3fcf9e9f9ef92a69a
566e5e58745e4d69525c795d7895777891736c836694a98ad4e4cadde5d8e7ece5
f1f6f0ecf1ebf5faf4fbfffbf0f7f0ebf5ededf8f07282785a6c60586d5e698070
6b84716e8a747088725b6a57505c48545d4c747b6ba2a999ced2c4eff2e7fffff6
fffffafffffbfffffdfffffffffffffffffffffefffffefffafafcbabbbd747675
d6d8d7eff3f2f4f8f7fdfffcfafcf9fffffdfffffdfffffdfffffdfffffdffffff
fefffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefefffefefffdfcfffcfbfffcfbfffbfafffaf9fff9f8feffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffefffffefffffffefffffefffffdfffffdfffffdfffffeff
f7f7f9fefffdfbfffbeefaeef4fff4d1e7d081997f7c9a787ba0757fa67783a77b
829e7583977294a281b6bca0d0d2bad6d3c0dfd9c9e8e5d6f3f1e4f9f9edfcfef3
fbfef3fdfcf8fffbfffff8fffff9fffef9fdf7f9f6f9fff8f7fff6ecffecbfd9c0
9ebb9f799a7d6a8d6f698c6e6b8e706b9071718d7696a098ced0cddfe4dde5ede0
ddead6e3f5dbb0c8a87e9976607e5a51714c5d7c5c7b997d7b99816885717d9889
aec2b7d5dad6dfdfdde0e5e1e6f0e8dbebe1ddf3e6cbe6d5779480496952597961
638167617b6262795f6e806877876d79836bc0bfabcec9b6d6cfbfd6cfbdd6cfbf
dcd5c5e1d8c9dfd8c8e6e3d4e2e0d1e6e8da8e97866c79676374614f624e4f674f
56735463815f718a6c7d9175919f86aeb7a2c6c9b8cdcebee8e6dad6d6cae3e4dc
f1f4ebeef5edf2fef4c6d3ca697b6d4d674c517050648163738d706c846a647a63
7b8c799dab9acad5c7dfe7daf0f3eceeefe9ecebe7f8f4f1fffdfdfffffdf6fcfa
fafffefffffffffdfffffcfffbf6fafcfffff3fffb9dbcad4f76614370535a8766
547c575979506e845d8a9877b4b7a4c3c1b5ced0c2cbcfbee1ead7cdd9c385937a
80907676886e8b9b81a6b59ebfccb8d2dbcadce2d4e5e8ddebece6f6f1f7f8f2fc
f3f2f8f3f9f9f3fff9d8eade77907d5470594f6d535e7c606c8b6c738e6f768d70
8b9f83b3c3a8d5e1cde1e6dfe9ebe8f1f6f2f1f6f2f6fdf6f9fffbf3fdf4f2fef4
d1ded4708075586a5c596e5f536859687f6f7e95835f725f5d66555d604f67695b
8e9082c8cabdf5f7ecfffff8f6f7effffffbfffffbffffffffffffffffffffffff
fffefffffffff6f6f8bbbbbbabababe0e0e0fbfbfbfafafafafafaffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefffefefffdfcfffcfbff
fcfbfffbfafffaf9fff9f8feffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffefffffefffffffeff
fffefffffdfffffdfffffdfffffefffbfbfbf8fdf7fafff9f8fff6ecfdeaacc2ab
738b7186a1828caf877fa37775946b7c947095a684b4bfa1cfd3bcdddcc8e9e6d5
f0eadcf6f2e6fefcf0fffff6fffff8fefff8fffffbfffcfffff5fefffbfffbf9fa
f0f5eff7fff6f5fff2d7ead695ad95819e826f8c706786676c8b6c7293747c9d80
87a08abdc9bfe8ede7e0e8dddee9d9ddecd7cee2c7859c7f5e7757567150668462
7f9c7e86a28978947e789382a8c0b3e3f4ecd6dbd7e5e7e4e4e9e5e5efe7e6f6ec
c7dbcf839b8b425d4a506c5654705969836a7a90796e806863715a859179bdc5ae
e4e3d1dbd8c7d8d2c4ddd7c7e3ddcfe6e0d2ebe3d6efe9dbf2efe0e3e4d4c6cab9
5d695555644f61735d52654f5e765c668063738e6f849b7f97a98fb2bea8cdd5c0
d9dccbd6d7c7dfddd1e6e6dadcddd5e7ede3f8fff9bfcbc169796f4d5f51516951
657f62748c726f866c6b7e687f917bacbba8d1decdebf3e6eef4e8eef1eaedeee8
f5f4f0fffffbfffefdfffffdfbfffffbfffff9f9f9fffefffffafef4f2f5fcffff
ddece5648072466c574f7a5e67937251775265835d7d936da3b190c2c7b3c7c9bc
d5d9cadae1cfe1ead7a7b39d65735a8c9c8287977d98a88eb2c0a9c8d4c0d9e0d0
e3e7d9ebede2f0efeaf8f6fbfefbfff3f4f9f2f8f8f3fff9adc1b55e7764526e57
4d6b516f8d717d977a6f886b81957ab4c6acd6e4cbd5e1cde8ede6ebedeaf2f7f3
f9fefafafffaf9fffbf9fffbf8fffbb1beb46c7c714a5c4e62776864796a6d8474
738a7a687a6a5c64555a5c4e787a6dbcbeb1f2f4e9fffff6fffff8fffff8fffffb
fffffbfffffffffffffffffffffffffffefffffffff2f2f4c4c4c4ebebebececec
fffffffdfdfdf9f9f9ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffefefffefefffdfcfffcfbfffcfbfffbfafffaf9fff9f8feffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefffffefffffffefffffefffffefffffefffffefffffffffffffd
eef3edfbfffaf5fff3b9cab794a88f8fa68a8aa3858da885839f7981997792a585
b4c1a5d5dac3e6e8d3ece9d8faf4e6fdf7ebfffcf1fffff6fffff8fefffafefffa
fefffdfffdfffaf5fbfffdfffefffdf6fdf5f9fff8e9f7e6b4c7b189a1876d876a
5f795c698366718e7079967895b296bbd1badae6dad6ddd5dee9dbdeebdadcebd6
95a98e6a8164627b5b6a836580997b879f857f97818da494b8cec1d8ece3e1f0e9
dfe4e0eaece7eff4eee7f1e8c8d5cb7a8c7e445b495d74605a735d667e686d836c
6d7f6778866f9aa38ec3cbb4e0e5d1e1e2d2d8d4c8d8d4c8e6e2d6eeeadeeae6da
ede9ddf8f5e6fffff1daddcc80877564705c5766515b6f5662755f71886e6e876a
839a7e9daf95b2c0a7c8d1bcdbe2d0e3e6d5dfe0d2eceadee7e7ddf3f6ede4ece1
a1aba264716754655b5a6c5e697c666d81686b7f666f816b8e9d88bdcab8dbe8d7
e3eedee3e9dde8ebe2eeefe9f6f7f1fffffbfffffbfffefdfafaf8fbfffffbffff
f6f8f7fffefffffdfffcfafbf1f7f5afbeb74d695a4b6e5a60886d689171557955
6c8a668aa07aacbb9cc6ceb9c8ccbdd3dacaeff8e5bfcbb5808e7787957c84947a
98a88ea8b69fbfcbb7d3dccbe1e5d7eaece1f1f1e7f5f4f0fbfafff7f8fdfcffff
eff8f7dcebe4778b7f546d5a526e575c785f718e727a92787c90759cae94d4e2c9
e8f4dedce5d4f0f3ecf0f2eff3f8f4fcfffdfcfffbfafffaf9fffbf4fff796a298
5e6b61526255758779738577889d8e778c7d6475654f55476c6e60a9ab9eebede0
fffff6f9fbf0fbfcf4fffffafffffbfffffbfffffffffffffffffffffffffffeff
fffffff3f3f3d9d9d9fffffff5f5f5fffffffdfdfdfdfdfdffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffefefffefefffdfcfffcfbfffcfbff
fbfafffaf9fff9f8feffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefffffeffffffffffffffff
fffefffffefffffefffffffffcfcfafafff8fbfff8d7e2d298a7928c9e8698ac91
82967a80957695a88ab0c0a5c5d2b8d3dbc4e3e4d2f5f2e3fffef2fffaf0fffcf4
fffef8fffffafffffbfefffbfefffbfefffdfffffff9f9fbfcfefbfcfffbf9fff8
f8fff6cddcc98fa28c7a9177667f625f785b6b84667b92768ca387b0c7abd8ead4
e0eddcc9d4c6deebdae0efdcb5c7b1697d62647b5e748b6e859c807b92787e947f
9fb29fcddfd3ebfaf3ebf7f5dfeae6f7fcf6e8ebe4f0f5eed1dbd08290835a6b5b
6779697c917e667c67687b676d7c67828e78afb7a2dadfc9e6e9d4dddecce3e3d7
dedbd2e2dfd6eeebe2efede1e9e7dbefede1fdfef0f8fbeaaaae9d5d6651697760
61705964785d71856c788f737a8e7596a890b5c3acc4d0bad0d7c5dde1d0e5e7d9
e6e6daecece0f1f3e8e0e6dca0aa9f5e6a6053635868796f6b7d6f6d7c696a7763
7d8a76acb7a6d3decde3ebdce4ecdde8eee2e2e8deebeee5f7f8f2fffffbfffffd
fdfdfbfaf9f7f8f8f6f9fffdfbfffff9fbfafdfdfdfffffffeffffd6dfda7a8b81
516c5d4e6f5a688c726085666587667b96739eb490b6c5a6c9d2bdd1dac9dee7d6
dae6d29aa6907c8a739aa88f829077aab8a1b8c4aecdd4c2dee2d3e7e9dceeeee4
f6f3ecf8f7f3f9fafef1f6faf9fffff0fbf7a5b5ab576c5d536a585b745e748e75
6d856b75897095a78fc3d1bae3ecd7ebf2e0e9eddff4f6f1f7f9f8f7f9f6fcfffd
fcfffdf9fffbf9fffbdde8e075817757645a6c796f75857a6d7d70a1b3a57b8d7f
46544563695badafa2eef0e5fffff6fdfef6fffff8fffffaf5f6f0fffffbfffffb
fffffffffffffffffffffffffffffffffffff9f9f9f2f2f2fffffffbfbfbf8f8f8
fafafafffffffefefeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fefefffefefffdfcfffcfbfffcfbfffbfafffaf9fff9f8feffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffefffffefffffffffffffffffffefffffefffffefffffffde9ebe6fcfffa
e7ede3afbaaa9daa96909f8887997f83967a9ba990b5c1a9d6dfcaecf1ddf3f4e4
f7f5e6fff9effffef4fffcf5fffdf7fffdf9fffdfafffefcfdfffefcfefdfafefd
fefffffcfefdf9fef8fbfffaf8fff8deecdba2b3a076887064785d6d816673876b
788c708c9e84acbea4c7d7bdd1dfc8d9e6d4dae7d6deeddacfdec97f91796a7c64
73876c7f967a7c90778c9f89b1c2b0dbe9dcf1fcf4f1fcf8eef6f8f2f8f8f8fdf7
f8fef4d2dacf909a8f6773656e7c6d7687756475636e7f6c76857296a28ec6ceb9
e4e7d4e3e5d0deddc9dedccde7e7dde5e4dfe8e7e2edede5f0f0e8f3f3e9fffff5
fffff4cdd1c26f766469755f5b69526b7b617b8d737b8f7482967b95a48db0bda9
c9d5c1d2dbc8d6dac9dfe1d3e9e9ddedede1f9f9efe8eadf9ba197606a5f6b786e
6d7f736074696e7e73737e6e939a8abec5b5e0e6d8eef2e4edf1e3edf0e5f0f3e8
fcfff6fdfff9fffffbfffffbfdfdfbf5f5f3f7f7f5fefffdf6fcfafbfffffcffff
f8faf9fefffff9fefaacb7af5b6d615a7262516e5a65856d5f80637d9a7b94ad8d
b4c7a7c7d6b9d1ddc7e2eddce2eedaa4b19d899780909e8785937a98a48cb9c5af
c6cfbcd8dccde4e6d9ebebe1f2efe8f8f3effbf7f6f3f7f8f2fafcf1fbfae0ece8
6b7b7157695b566b5a677c69819782758872849680b8c5b1e1ead7eaeedfeceee0
f4f6ebf6f8f3fefffff9fbf8fefffdf7fcf8fafffbf8fff8b8c2ba5a645c6e7a70
6c786e717e749dab9e98a89b58685b6a786bc2c8bceceee3fffff6fdfff4f6f7ef
fffff8fffffaf5f6f0fffffbfffffdffffffffffffffffffffffffffffffffffff
fefefefffffff3f3f3fffffff3f3f3f8f8f8fffffffafafaffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefffefefffdfcfffcfbfffcfbfffbfaff
faf9fff9f8feffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffdfffffdfffffdfffffdfffffd
fffffdfffffdfffffdf2f4effcfffac4cac0a2aa9badb8a79caa939aa88facbaa1
d3dcc7e0e4d3eff1e3fcfdeffffff4fffef4fffdf7fff8f3fffcfafffdfbfffdfd
fffdfefefcfdfcfdfffdfefffbfffffcfffffbfffdf8fff8f7fff6eefaecb3c2af
7688726d7f67697b61798c7088987d92a287a9b79ec7d3bbd6dfcad1ddc7d6e1d0
ebf8e6d6e5d2a6b5a06e806881937b8da18891a58c92a390c3d1c0eefaeef6fff7
eff5f1f0f4f5f6f7fcf7f8fcfcfffbf6fcf2a0a89d6c7467707b6d6e7a6c6e7b6a
6a77668d9a88c3ccbbe6eddbe2e5d2dedfcdedead9efe9d9dfd9cde8e7e2ebebe9
eeefeaf1f2edf9faf4fefff8fefff6f7fdef939c8b5e6a566f7d6664735c7a8c72
87997f85997da0b298bcc8b4ced7c6dae1d1dde1d2dfe3d4e9ebdef1f1e5f2f2e8
eff0e89c9f96737a72717d73637067697a707b8f8476867baeb4a8d5d5c9efefe3
edede3e7e9def1f3e8fafbf3fafbf3fffffafffffafffffbfffffbfdfdfbf7f7f5
fbfbf9fefffdf8fefcfafffefbfffff7fdfbfbfffddce5e07d8a81596b5f637a6a
5b745f66826b708d7190a98caac1a4bbceb0d0e0c5d9e6d2e6f3e1c2cfbb828f7b
8e9c8596a48d84907abac3aec5ccbad1d5c4dee0d2e8e8dceeebe4f3eeeafaf2f0
fbf7f6f0f6f6f1fdfbeaf6f2acbbb453645a5e70626173637083707c8f7b8b9c89
afbcaad7e0cfecf0e1eeeee2f4f2e6fdfdf5f7f7f5fefffffbfdfcfafcfbf1f6f2
fbfffcf0f6f2919b935d675f7a857d6c786e9da99fd8e4da8c998f7a877dc8d4c8
fcfff8fffff8fdfef6fcfdf5fbfcf6fafbf5fefffafffffbfffffdfffffdffffff
fffffffffffffffffffffffffffffffffffffffffff7f7f7fffffff6f6f6f7f7f7
fffffffcfcfcffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefeff
fefefffdfcfffcfbfffcfbfffbfafffaf9fff9f8feffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd
fffffbfffffbfffffdfffffdfffffdfffffdfffffdfefffdfefffde4e9e2a9afa5
a9b1a2b2bbaaa7b39fc6d2bcdee7d2f8faecfffff4fffff6fffff6fffcf6fef7f1
fff9f7fffcfbfffcfbfffcfdfffdfffffdfefffdfffffffffefffffcfffff7fdfb
f9fffbf7fff8effbefdceadb91a08d5a6c566d7f6782947a839378909e84acb8a0
c5cfb7d2dac5dee3cfe6eddbd8e3d2eaf7e5cad9c47f8e7982917c8fa18ba5b7a1
a6b8a2dbe9d8ebf7e9f3fdf4f0f7f0f4f6f5fbfafff7f4fbe8e7ecfefffbb3b9af
697164777f7271796c667163a5b0a0c7d2c2ecf4e5f1f8e8f4f6e8edeedee8e5d6
ebe5d7f2eaddf7f0e6f3efecf7f7f7fafafaf9fbf8fefffbfcfffae9efe5c7cfc2
6c7767717e6c5f6c5883927b8d9c8584967c91a389c2d2b8dbe4d3e3e7d9e4e8da
e2e6d8eaece1f6f8edfafaf0f4f5ed7a7d7472786e636a625f6b616c797077877d
98aca1cfdcd2fbfcf4f3f0e7efebe2f3f0e9f7f4edf3f3ebf8f8f0fffffafffffa
f6f7f1f4f5f0fefffafffffdfffffdfefffdfefffdfcfffff7fdfbfbfffff8fffc
f7fffcc2cfc65c6c616476686c8170687d6a6c826d869c859aae95b6caafb8c8ad
d1e1c7dae9d4deedda95a48f7f8e7995a38c8a9680a4ad98cfd7c2ccd0bfd6d8ca
e2e2d6ebe8dfefeae6f2edeaf9f0f1faf6f7f2f8f6eefaf6ebfaf377877d596b5f
5e70626c7e6e72837173826fa3b09ed5decdeaeee0ecece0f3f0e7fef9f3fffffa
f6f6f4fefffffcfefdf6f8f7edf1f0fbfffcecf1ed7a807c747b7468726a879189
e5efe6dae4db939f95ebf7edf9fffaf2f5eefefff7fffffafffffafffffafffffa
fffffbfbfcf7fffffdfffffdffffffffffffffffffffffffffffffffffffffffff
f9f9f9fffffffffffffcfcfcf8f8f8fcfcfcffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefffefefffdfcfffcfbfffcfbfffbfafffaf9ff
f9f8feffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffdfffffbfffffafffffbfffffbfefffdfefffd
fefffffefffdf3f5f2dbe0dac5cac3c6ccc0d9dfd1ecf3e1f2f9e7f1f5e6fffff6
fffef8fffef8fffef8fffdfafffcfbfffcfbfffcfdfffcfdfffcfffffdfffffeff
fffefffffefffdfefffbfffffbfffdf4fef6f9fffaf2fef2a3b1a27c8b785e6d58
6a79628d9d839aa88fb2bca4c9d1badde2cee8ebdaedeedeecf0dff5feeddfecda
a0ad9b8c9b889aa996a6b5a2ceddcaeefcebf5fff3f6fff5f9fef8fcfefbfefcff
fffbfffffbfffffcffdee0db83897f686e649aa096c5cbbfe4ecdff6fef1edf3e5
eef2e4f0f2e5f1f1e5f4f2e5f6f2e6f9f3e7faf2e7faf3ebf8f4f3fffffff9fbfa
fefffdf4f6f3f4f9f3f9fff87680757c87797f8c7b8592808c9b8698a790aebea4
c8d8bedbe9d2eff5e7e4e6dbe6e8ddf0f2e7f8f8f0fdfdf5d3d4cc8b8c867a7d76
6b7069646b64727d7598a59cc2d2c8e0f0e6f0fbf3fdfcf7fffbf5fffbf5fffcf8
fffcf8fffdf8fffef9fffefafffffbfffffbfffffdfffffdfefffdfefffdfefffd
fefffdf6faf9fbfffff5fef9f5fffaeefbf285958a5c6e6061736370837061725f
8698829cab96a6b59ec4d3bccdddc3d4e3cceeffeab1c3ad81907b83927d9eac95
b0bca6bec6b1cacfbbdde0cfe2e3d5e9e9ddf3f0e7faf5f1fef9f6fff9fafefcfd
f3fcf9f5fffdabbab369796f5a6a5f6b7b6e7c8d7d72806fc5d2c1d5ddcee6ecde
f2f4e9f6f3ecf8f3edfbf6f2fffaf7fffffffefffffefffffdfffee8eae9f5f9f8
c8cdc9707571636864979e97d1d8d1eff6eff9fff9f9fffbf9fffaf8fff7fefffa
fffffafffffbfffffbfffffbfffffbfffffdfffffdfffffdfffffdffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffefefefefefefdfdfdfdfdfffdfdff
faf9fefaf9fef9f8fdf9f8fdf8f7fdf7f6fcffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfffffb
fffffafffffbfffffdfefffdfefffffefffffefffffcfffff2f7f3e6ebe4e8eee4
f9fcf1fefff3fffff3fffff4fffef8fffdfafffdfafffdfbfffdfbfffdfbfffcfd
fffcfdfffcfffffdfffffdfffffefffffefffffefffefdfffbffffebf1edf9fffb
f9fffac6d2c677837555635269786388967fa3b19aafbba5c4ccb7d9decae9eada
f3f1e4f5f3e6f3f4e6fbfff3c8d3c38d988898a594c5d2c1dbe9d8ecf8eaf8fff6
f6fff5f8fff7fbfdfafdfdfdfffbfffffbfffffafffffbffdedfdabfc5bbd5dbd1
fafff6f4faf0ecf2e6f3f9eff1f4e9f2f4e9f2f4e9f4f4eaf7f4ebf9f5ecfbf4ec
fdf4edfcf5effffefdfffffff9f9f9fefffff5faf6f7fdf9d9e0d9747e75808c80
7884767a877694a18fbbc8b4d9e6d2e2f0d9e0ecd8eef1e6eff0e8f4f5effffff8
fefff9d3d4ce9596906b6e676e716a80857ea1a8a1c4cec6e1ece4f2fdf5f7fffb
f9fffbfdfcf8fffbf8fffaf8fffcf9fffcf9fffdfafffdfafffefafffffbfffffb
fffffdfffffdfefffdfefffdfefffdfefffdfcfffffbfffff6fffbf4fff8d7e9dd
6d82735a6f5e657a676f806d7f8e7b919d89a9b5a1bdc9b5c8d5c1ddead6eefde8
c4d3be9cab9682917c919e8aacb8a2bbc4afc8cdb9d4d7c4e1e2d4e5e5d9edeae1
f4f1eafbf6f3fef8f8fffafcfefcfdf5fef9f5fffb78887e57675c7181746d7b6c
6e7c6da2af9ed4dccde0e6daf0f2e7f9f9f1fcf9f4fdf8f5fff8f9fffcfcffffff
fefffffbfcfefefffffcfefdfeffff9b9f9e727773a7aca8cacfcbeef3edfcfffb
fcfffbfcfffbfcfffaf7fcf6fefffbfffffbfffffdfffffbfffffdfffffdfffffd
fffffdfffffdfffffdffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fefefefefefefdfdfdfdfdfffdfdfffbfafffaf9fefaf9fef9f8fdf8f7fdf7f6fc
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffdfffffbfffffbfffffdfffffdfefffffefffffcffff
fcfffffcfffffafefdfbfdfafefffafffff8fffff6fffff6fffff6fffefafffefb
fffefbfffdfdfffdfdfffdfdfffdfffffdfffffdfffffefffffdfffffefffffeff
fffefffefdfffdfeffedf1f0f7fff9d9e3da8995896f7b6d6e7b6a9ba896a9b6a2
c3cfbbced7c4dce3d1ebefe0f7f7ebfcfaeefdf9f0fbf8effafdf2bfc7bab2baad
d0dbcdf1fceef8fff6f9fff8f9fffaf8fff8f9fefafcfefbfdfdfdfffcfffffbff
fffafffffcfffffffbf7faf3fefffafefffaf4f7f0f0f3eafefffafefff7f6f7ef
f7f8f0f8f8f0fbf8f1fcf9f2fef9f3fef9f3fffaf6fffbfafbf9faf3f3f3fbfdfc
fcfffdfbfffdadb4ad788279758175869284a5b0a2c6d1c1e0ebdbecf7e6eef7e6
ebf1e3e3e6ddf4f5effcfdf8fdfef8e2e3de9a9c9776787391938eb8bab5cfd4ce
f0f5effbfffbfbfffbf8fffaf2fcf4f4f9f3fdfcfafffbfafffbfbfffcfbfffdfc
fffdfcfffdfcfffefcfffffdfffffdfffffdfffffdfefffdfefffdfefffdfefffd
fefffff7fdfbf2fdf7f4fffba5bbae5a7262566f5c6e837078877494a08ca0a795
bcc3b1ccd3c1dee7d6f8fff3ddecd994a38e8897828d9b84a8b49ec0c8b3cacfbb
d3d6c3e0e1cfe5e6d8ebe9ddf0ede6f6f3eefbf7f6fefafbfffafefdfdffebf6f0
c7d7cd616e656c796f7280737a86789ba698dae2d5e5ebdfeff2e7f9faf2fffef9
fffefdfffcfcfffcfefffefffffffffefffffcfdfffefffffefffffeffff848685
a0a2a1ebedeaf9fbf8fefffdfefffdfefffbfefffbfdfffafafcf7fffffdfffffd
fffffffffffdffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefefefefefdfdfdfdfdfffdfdfffbfaff
fbfafffaf9fef9f8fdf8f7fdf8f7fdffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffefdfffefd
fffffdfffffffefffffcfffffcfffffcfffff7fbfef9fdfefefffffffffdfffffb
fffef9fdfaf3fbf8f1fffefbfffefbfffefdfffefdfffefdfffefdfffefffffeff
fffefffffefffffefffffefffffefffffefffffdfffefefffcfffffbfffdb7beb7
6d776e6973687d897bb7c4b3ced9c8e1ead9e6efdef1f5e7fafceffffff5fffef7
fffaf7fef9f3f4f5edd6d9d0eef3ecfcfffafbfffafbfffaf9fff9fbfffbfafffb
fcfefbfdfdfdfffdfefffdfefffcfffffcfffffdfffffffbfafdf6fbfdf8fbfdf8
f4f6f1fdfef9fffffbf4f5f0fafbf6fbfcf7fbfcf7fdfcf8fefdf9fffefafffefa
fffffbfffcfbfffefdfffefffffffdfefffdf4f9f57c837c778179909a91b3bdb2
dce6dbf1f9eeedf5e8e7ede1edf0e5f6f9f0f5f7f2fdfffafffffdfefffbe3e5e2
b4b6b1bcbeb9f1f3eef6fbf5fcfffbfcfffbfcfffbf5faf4f1f6f0f7fcf6fefffd
fdfdfdfefcfdfefcfdfffdfefffdfefffefcfffefffffffdfffffdfffffdfffffd
fffffdfefffdfefffdfefffdfefffdfefffffcffffebf8f1e7fbf06d857756715e
58745e72887385927e959c8ab3b6a5cacdbcd1d5c6f3f9ebf3feeea1ae9d879480
8f9c88a6b29cc2cbb6d1d6c2d3d6c3dddecceceadbedebdef0eee2f5f2ebfaf6f3
fbf9fafdfbfefcfbfff9fdfef4fff99ba89e5f6c62707c70798577a6b1a3d5ddd0
f5fbeff3f6ebf8f9f1fefdf8fffffbfffefffffdfffffcfffffcfff7f7f9fafbfd
fefffffbfcfef6f7f9eff0f2a7a9a8e5e7e6fefffffefffdfffffdfefefcfdfef9
fffffbfffffbfefefcffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefefdfdfdfdfdfffdfdfffbfafffbfafffaf9fefaf9fef9f8fef8f7fdffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffefffffefffffefffffffffefffffcfffffcfffffbffff
fbfffffcfffffefffffffffffefcfdfffbfafffcf9fffefbfffefbfffffdfffffd
fffffdfffffdfffffdfffefffffffffffefffffefffffefffffefffffefffffeff
fffdfffffdfffeffffe1e5e4808581686f68868d85b1bbb0d6e1d3e8f3e3f1f9ea
f4fcedfbfef3fffff8fffffafffffafffaf8fdf8f5fffefbf6f5f0fffffbfffffb
f5f7f2fcfffbfcfffdf7fcf8fafefdfcfefdfefefefffdfefffdfefffdfffffcff
fffdfdf6f5f3fdfef9fffffdfffffdfbfbf9fffffdfffffdfffffdfdfdfbfdfdfb
fefefefefffffefffffefffffcfffffffffffffbfafffefbfffefdfffffbf9fbf6
f2f7f18c938cacb6aed8e2dae0eae1eaf1e9edf2ebeef1eaf1f2ecf7f6f1fcfdf8
fefffdf1f6f2f8faf9fcfffdf6faf9f1f6f2fcfffdfcfffdfcfffdfbfffcfcfefb
fafaf8f9faf5fafbf6fdfef9fffffdfdfdfdfdfdfffefefffefefffefeffffffff
fffffffefffffefffffeffffffffffffffffffffffffffffffffffffffffffffff
fcffffeefbf4bcd0c4516e5c5676616a866f7187708895819ca18dc6c4b5d8d6c7
e7e8daeaeee0b5c0b2869382a3af9bb1baa5c7cfbad9decadcdfccdbdccae5e3d4
f3f0e1f4f0e4f7f3eafaf7f2fbfaf6fdfdfdfcfdfff9fcfff7fcfff9fffb818d81
5e6a5e677166adb5a8dfe5d9e4eadef9fcf1fbfcf4fcfcf4fdfcf8fffefcfffeff
fffefffffafffbf8fff7f6fbfdfcfffffefff8f7fcf5f5f7eaeaece4e4e6ffffff
fefefefafafafaf9f7fdfcfafffffdfffffdfffefafffefcffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfffffd
fffffdfffffdffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefefefefefefdfdfdfdfdfffdfdfffcfbfffcfbff
fbfafffaf9fef9f8fef9f8feffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffefffffefffffefffffeff
fffefffefffffcfffffbfffffbfffffbfffffcfffffefffffcfbfffcf7fbfef8fa
fffbfcfffdfdfffffdfffffdfffffdfefffdfffffdfefffdffffffffffffffffff
fffffffffefffffefffffefffffefffffcfffffcfffcfcfec4c5c7818382a1a6a2
d5dad4fbfffaf9fff6f2fdeff8fff5fafff6fefff8fffffafffffbfffdfcfffafa
fef8f8fffdfdfffefdfffefdfefdfbf9f9f9fefffffefffff2f6f5fdfffefdfffe
fefefefffefcfffefdfffdfdfffdfbfffdfdfefdfbfffffdfffffffffffff8f6f7
fcfafbfffefffffefffdfdfffdfefffdfefffcfffffcfffffbfffffbfffffcffff
fdf9f8fff8f6fffefbfdfcf8f7f8f3fefffbcfd4cefbfffbf9fffbf4fbf4eef3ed
f0f2edf8f8f6fffefafffefdfffefcfeffffedf1f0f2f6f5f9fdfcf0f4f3fafefd
fcfffff2f7f3fbfffcfafcf9fbfbf9fffefcfffffbfffefbfdf9f6f3f2f0fdfffe
fbfffffbfffffbfffffcfffffefffffefffffefffffefffffeffffffffffffffff
fffffffffffffffffffffffffefefff8fcfbedfaf3859b8e5675635a7c647b9981
728a728f9b85b6b9a6d7d4c5eae4d8fffff4d1d3c8848c81acb7a9cbd4c1d5ddc8
e1e6d2e7ead7e6e7d5e7e6d4eeebdcf7f4e5faf6ebfcf8effefbf6fffefcfeffff
fbfffff8fdfff5fdffd4ded65a6459818b80a9b1a4dfe5d9f8fbf0f9fcf1f7f9ee
fffff8fdfcf7fbfaf8fcfafbfffdfffffdfffefbfffaf7fffffefffffefffdfcff
fcfbfffffffff6f6f8fffffff3f3f5fffefffcfafbfdfcfafffffdfffffdfffffd
fdfcf8fffefcffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffdfffffdfffffdfffffdffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefefefefe
fdfdfdfdfdfffdfdfffcfbfffcfbfffbfafffbfafffaf9fff9f8feffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffefffffdfffffdfffffefffffefffefffffcfffffbfffffbfffffafeff
f9fcfff8f8fff9f8fefdf8fefffafefff9fcfffafafffffdfefffdfefffdfcfffd
fefffdfcfffdfefffdfefffdfefffdfefffdfffffdfffffdfffffdfffefdfffcfe
fffcfff5f3f6dedee0e5e5e5f8faf7f8fdf7f7fef6f4fbf3fbfff8fbfff9fcfffa
fefffafffffbfffffdfffefffffcfefffbfdf6f0f2fffdfffffdfffffefffffeff
fdfdfffbfcfef9fafcfdfefffdfffefefefefffffdfffefdfffefbfffefafffefb
fbf9fafbf9fafdfbfefffefffffefffffdfffaf8fbfcfafdfcfbfffcfdfffafeff
fafffff9fffff8fffff8fffffbfffffffefdfffdfafffefafffffaf7f6f1fbfef7
f5faf4fbfffbf6fcf8f6fcf8fafffbfefffdfffefffffefdfffdfffffefffeffff
fbfffffbfffffbfffff7fdfdf8fefcfbfffffcfffff7fcf8f8faf7fafaf8fffefc
fffefdfffdfdfffefbfffdfcfbfffffafffffafffffbfffffbfffffcfffffcffff
fcfffffefffffefffffefffffefffffffffffffffffffffffffffffffdfff7fbfa
d6e3dc677f715f806d6c8f777999817c947cacb8a2d1d4c1eae4d6fff7ecfffff4
d1d3c8acb4a9d9e4d6e5ecdae9eedaedf0ddeeefddf1f0def5f2e1f8f5e6fcf6e8
fffaf0fffcf3fffffafffffdfcfffffbfffff6fefff5fdffa7b1a97c8479c4ccbf
f4faeef7faeff7f9ecfffff6fafaf0fffff8fffef9fbfaf8fcfafbfffefffffeff
fffefffdfcfffffefffffefff6f5fafffefffffffffffffffffefff2f0f3fffeff
fefcfdfffefdfffefdfffefdfffbfafefaf9fffffdfffffffffefffffefffffeff
fffffffffffffffffffffffffffffffffffffffffffffffffffffdfffffdfffffd
fffffdffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffefefefefefefdfdfdfdfdfffdfdfffdfcfffcfbfffcfbff
fbfafffaf9fff9f8feffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffefffffdfffffdfffffefffffeff
fefffffcfffffcfffffcfffffcfffffbfefffdfefffffdfffffdfffffdfffffdff
fffdfffffffdfefffdfefffdfcfffdfefffdfcfffdfefffdfefffdfefffdfefffd
fffffdfffffdfffffdfffefdfffdfefffdfefffeffeeeceffffffffffffff8faf7
ecf1ebf7fcf6fcfffbfcfffbfefffbfefffbfffffdfffffffffefffffdfffffdff
fffdfffffdfff8f3f7fffdfffffefff7f7f9fafafcfefffffdfefffdfffeffffff
fffffdfffffdfffefbfffffafffefbfffefffbf9fcf8f6f9fefcfffffefffaf8fb
fbf9fcfffffffcfbfffbfcfff9fdfff9fefffafffff9fffff9fffffcfffffffcfb
f9f4f1fffdfafffefbfefdf9fcfef9fcfffbf8fdf9fcfffdfbfffcfbfdfcfefefe
fffefffffefffffdfffffefff9fafcfcfffff9fdfefcfffffcfffffcfffff1f5f4
fcfffffefffdfffffdfffffdfffffdfffefdfffefdfffcfcfffefcfdfefffaffff
fbfffffbfffffcfffffcfffffcfffffefffffefffffefffffefffffeffffffffff
fffffffffffffffffffcfefdfafffcb8c5bc687e71627d6c86a38f738c778b9e8a
cfd8c7dee0d2f4f0e4fffef4f4f0e7e6e6defcfffaebf1e7eef2e4eff1e3eef0e2
f0f1e3f8f6e9fefceffffcf1fdf9eefffdf4fffff8fffffbfffffdfefffffbffff
f8fdfff6fcfcafb5b1e6ebe4f0f6ecf8fbf2fffff8f9faf2fffff8fffef9fffffa
fffffbfcfbf9fefcfffffefffffefffffefffffefffbfafffffffff3f2f7ffffff
fffffffffffffaf8fbfffefffffdfefaf8f9fdfcfafffffdfffefdf9f8f6fffbfa
fffefffffffffffffffffeffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffdfffffdfffffdfffffdffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffefefefefefefdfdfd
fdfdfffdfdfffdfcfffcfbfffcfbfffbfafffaf9fffaf9ffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffefffffefffffffffffffffffffffefffffefffffefffffefffffeffff
fffffffffffffffefffffefffffefffffefffffffffffffffffffffeffffffffff
fefffffffffffffffffffffffffffffffffffffffffffffffffefffffefffffeff
fffffffffffffffffffffffffffffffefffdfefffdfefffdfefffdfffffdfffffd
fffffffffffffffffffffefffffefffffefffffefffffefffffeffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffdfffffdfffffdffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffeffff
fefffffefffffefffffefffffffefffffffdfffffdfffffdfffffdfffffdfefffd
fefffffefffffefffffffffffffffffffffffffefffffefffffefffffffffeffff
fefffffefffffefffffefffffefffffefffffffffffffffffffffffffffffffeff
fffefffffefffffffffffffffefffffefffffefffffefffffefffffeffffffffff
fffffffffffffffffffefefefefefefdfdfdfdfdfdfcfefbf6fffaf5fff87e8b81
5c6c617484797e8e81909e91c2ccc1f8fef4fbfcf4fcfcf4fefbf4fffcf5fffcf7
fdfcf7fefdf8f2f3eef3f4eff4f5f0f6f7f2f9f8f4fbfaf6fdfcf8fefdf9fffffb
fffffdfffffdfffffffffffffefffffefffffefffffefffffefffdfefffdfffffd
fffffdfffffdfffffdfffffdfffffdfffffdffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffefffffffffffeffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffefefffefefffdfcfffcfbfffbfafffaf9fe
f9f8fef8f7fdffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffefefefefefefdfdfd
fdfdfdfafffbf7fffad0e0d57683796c786e818b82949e95b6bdb5f3f8f1fafdf6
fafdf6fcfbf6fdfcf7fffcf7fffdf8fffcf8fffcf9f6f5f3f6f6f6f7f7f7f9f9f9
fafafafcfcfcfefefefefefeffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefefefefeff
fefefffdfcfffcfbfffbfafffaf9fef9f8fef8f7fdffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefefefefefefdfdfdfdfdfdfafffbf8fffbb5c2b878847a6e7a70
869087c0cac1e0e7dff6fbf4fbfef7fbfef7fdfcf7fdfcf7fffdf8fffdf8fffdf9
fffdfafaf9f7fafafafbfbfbfcfcfcfdfdfdffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefefefefefefefefffefefffdfcfffcfbfffbfafffaf9fef9f8fe
f8f7fdffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefefdfdfdfdfdfd
fcfefbf9fffb8d998f717d73849086a8b2a9eef5edf9fef7e9eee7fbfef7fdfef8
fefdf8fefdf8fffef9fffef9fffdf9fffefbfffefcfefefefefefeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffefefefefefefefefefdfdfffdfdff
fdfcfffcfbfffbfafffaf9fef9f8fef8f7fdffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffefefefefefefdfdfdfdfdfdfcfefbf7fef76c766e7c867ec2ccc4e7eee7
fbfffbfcfffbfcfffbfcfef9fefffafffefafffefafffefbfffefbfffefbfffefb
fffffdffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefe
fefefefefefefdfdfdfdfdfffdfdfffdfcfffcfbfffbfafffaf9fef9f8fef8f7fd
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffefefefefefefdfdfdfdfdfdfcfefb
f0f6f2929c94bec8c0f7fef7fbfffbfbfffbfbfffafefffbfefffafefffafffffb
fffffbfffefbfffefbfffefbfffefbfffeffffffffffffffffffffffffffffffff
fefefefefefeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefefefefefefefefefefefefdfdfdfdfdfdfcfcfefcfcfefdfcff
fcfbfffbfafffaf9fef9f8fef8f7fdffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fefefefefefefdfdfdfdfdfdfcfefbf5faf6d3dad3fbfffbfcfffbfcfffbf9fef8
fbfdf8f7f9f4fffffbfffffbfffffbfffffbfffefbfffefbfffefbfffefbfffeff
fffffffffffffefefefdfdfdfcfcfcfbfbfbfbfbfbffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefefefefefefefefefdfdfd
fdfdfdfcfcfcfcfcfefcfcfefdfcfffcfbfffbfafffaf9fef9f8fef8f7fd
grestore
grestore
showpage


 @endspecial -568 -1087 a
tx@Dict begin  PutEnd  end
 -568 -1087 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   0. true 352.81384 153.64464
0.0 28.45274 .5 Frame  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   0. true 330.05199 153.64464
22.76227 51.21501 .5 Frame  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   0. true 307.2897 153.64464
45.52455 73.9773 .5 Frame  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   0. true 284.52744 153.64464
68.2864 119.50143 .5 Frame  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   0. true 261.76515 -73.9773
91.04869 -153.64464 .5 Frame  gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   182.09738 -51.21501
2 copy moveto 11.38092 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   216.24101 -51.21501
2 copy moveto 11.38092 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   147.95418 -51.21501
2 copy moveto 11.38092 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   284.52744 -96.73915
2 copy moveto 11.38092 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   68.2864 -96.73915 2
copy moveto 11.38092 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   68.2864 -130.88278 2
copy moveto 11.38092 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath
 gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
-568 -1087 a
tx@Dict begin  { 68.2864 -130.88278 } PutCoor PutBegin  end
 -568 -1087 a -613 -1058 a Fb(C)5 b Fa(2)-568
-1087 y
tx@Dict begin  PutEnd  end
 -568 -1087 a -568 -1087 a
tx@Dict begin  { 68.2864 -96.73915 } PutCoor PutBegin  end
 -568 -1087 a -601 -1058
a Fb(T)-568 -1087 y
tx@Dict begin  PutEnd  end
 -568 -1087 a -568 -1087 a
tx@Dict begin  { 147.95418 -51.21501 } PutCoor PutBegin  end
 -568 -1087
a -601 -1058 a Fb(D)-568 -1087 y
tx@Dict begin  PutEnd  end
 -568 -1087 a -568 -1087
a
tx@Dict begin  { 182.09738 -51.21501 } PutCoor PutBegin  end
 -568 -1087 a -594 -1058 a Fb(I)-568 -1087 y
tx@Dict begin  PutEnd  end
 -568 -1087
a -568 -1087 a
tx@Dict begin  { 216.24101 -51.21501 } PutCoor PutBegin  end
 -568 -1087 a -596 -1058 a Fb(S)-568 -1087
y
tx@Dict begin  PutEnd  end
 -568 -1087 a -568 -1087 a
tx@Dict begin  { 284.52744 -96.73915 } PutCoor PutBegin  end
 -568 -1087 a -613 -1058 a
Fb(C)g Fa(1)-568 -1087 y
tx@Dict begin  PutEnd  end
 -568 -1087 a -595 189 a
tx@Dict begin  CP CP translate 1 0.3 div 1 0.3 div scale NET  end
 -595
189 a 0 TeXcolorgray 0 TeXcolorgray eop end

userdict /end-hook known{end-hook}if
%%Trailer
cleartomark countdictstack exch sub { end } repeat restore
%%EOF
